{
	"id": "37a93d9bc5e8d3c8987db24da1408efc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/uniswapv3lp.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '../interfaces/INonfungiblePositionManager.sol';\r\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\r\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\r\n\r\ncontract LiquidityExamples is IERC721Receiver {\r\n    INonfungiblePositionManager public constant nonfungiblePositionManager = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88);\r\n    address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1;\r\n    address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22;\r\n    uint24 public constant poolFee = 500;\r\n\r\n    /// @notice Represents the deposit of an NFT\r\n    struct Deposit {\r\n        address owner;\r\n        uint128 liquidity;\r\n        address token0;\r\n        address token1;\r\n    }\r\n\r\n    /// @dev deposits[tokenId] => Deposit\r\n    mapping(uint256 => Deposit) public deposits;\r\n\r\n    // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens\r\n    // Note that the operator is recorded as the owner of the deposited NFT\r\n    function onERC721Received(\r\n        address operator,\r\n        address,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external override returns (bytes4) {\r\n        require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft');\r\n        _createDeposit(operator, tokenId);\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function _createDeposit(address owner, uint256 tokenId) internal {\r\n        (, , address token0, address token1, , , , uint128 liquidity, , , , ) =\r\n            nonfungiblePositionManager.positions(tokenId);\r\n        // set the owner and data for position\r\n        deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1});\r\n    }\r\n\r\n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token.\r\n    /// For this example we are providing 1000 DAI and 1000 USDC in liquidity\r\n    /// @return tokenId The id of the newly minted ERC721\r\n    /// @return liquidity The amount of liquidity for the position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mintNewPosition()\r\n        external\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        )\r\n        {\r\n        // For this example, we will provide equal amounts of liquidity in both assets.\r\n        // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.\r\n        uint256 amount0ToMint = 100000000;\r\n        uint256 amount1ToMint = 100940000;\r\n\r\n        // transfer tokens to contract\r\n        TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amount0ToMint);\r\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amount1ToMint);\r\n\r\n        // Approve the position manager\r\n        TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount0ToMint);\r\n        TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount1ToMint);\r\n\r\n        // The values for tickLower and tickUpper may not work for all tick spacings.\r\n        // Setting amount0Min and amount1Min to 0 is unsafe.\r\n        INonfungiblePositionManager.MintParams memory params =\r\n            INonfungiblePositionManager.MintParams({\r\n                token0: USDC,\r\n                token1: DAI,\r\n                fee: poolFee,\r\n                tickLower: -1050,\r\n                tickUpper: 1040,\r\n                amount0Desired: amount0ToMint,\r\n                amount1Desired: amount1ToMint,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                recipient: address(this),\r\n                deadline: block.timestamp\r\n            });\r\n\r\n        // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint\r\n        (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);\r\n\r\n        // Create a deposit\r\n        _createDeposit(msg.sender, tokenId);\r\n\r\n        // Remove allowance and refund in both assets.\r\n        if (amount0 < amount0ToMint) {\r\n            TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0);\r\n            uint256 refund0 = amount0ToMint - amount0;\r\n            TransferHelper.safeTransfer(USDC, msg.sender, refund0);\r\n        }\r\n\r\n        if (amount1 < amount1ToMint) {\r\n            TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0);\r\n            uint256 refund1 = amount1ToMint - amount1;\r\n            TransferHelper.safeTransfer(DAI, msg.sender, refund1);\r\n        }\r\n    }\r\n\r\n    /// @notice Collects the fees associated with provided liquidity\r\n    /// @dev The contract must hold the erc721 token before it can collect fees\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r\n        // Caller must own the ERC721 position, meaning it must be a deposit\r\n        // set amount0Max and amount1Max to type(uint128).max to collect all fees\r\n        // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`\r\n        INonfungiblePositionManager.CollectParams memory params =\r\n            INonfungiblePositionManager.CollectParams({\r\n                tokenId: tokenId,\r\n                recipient: address(this),\r\n                amount0Max: type(uint128).max,\r\n                amount1Max: type(uint128).max\r\n            });\r\n\r\n        (amount0, amount1) = nonfungiblePositionManager.collect(params);\r\n\r\n        // send collected fees back to owner\r\n        _sendToOwner(tokenId, amount0, amount1);\r\n    }\r\n\r\n    /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @return amount0 The amount received back in token0\r\n    /// @return amount1 The amount returned back in token1\r\n    function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r\n        // caller must be the owner of the NFT\r\n        require(msg.sender == deposits[tokenId].owner, 'Not the owner');\r\n        // get liquidity data for tokenId\r\n        uint128 liquidity = deposits[tokenId].liquidity;\r\n        uint128 halfLiquidity = liquidity / 2;\r\n\r\n        // amount0Min and amount1Min are price slippage checks\r\n        // if the amount received after burning is not greater than these minimums, transaction will fail\r\n        INonfungiblePositionManager.DecreaseLiquidityParams memory params =\r\n            INonfungiblePositionManager.DecreaseLiquidityParams({\r\n                tokenId: tokenId,\r\n                liquidity: halfLiquidity,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                deadline: block.timestamp\r\n            });\r\n        \r\n        INonfungiblePositionManager.CollectParams memory params2 =\r\n            INonfungiblePositionManager.CollectParams({\r\n                tokenId: tokenId,\r\n                recipient: address(this),\r\n                amount0Max:340282366920938463463374607431768211455,\r\n                amount1Max:340282366920938463463374607431768211455\r\n            });\r\n\r\n        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);\r\n        nonfungiblePositionManager.collect(params2);\r\n\r\n        // send liquidity back to owner\r\n        _sendToOwner(tokenId, amount0, amount1);\r\n    }\r\n\r\n    /// @notice Increases liquidity in the current range\r\n    /// @dev Pool must be initialized already to add liquidity\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @param amount0 The amount to add of token0\r\n    /// @param amount1 The amount to add of token1\r\n    function increaseLiquidityCurrentRange(\r\n        uint256 tokenId,\r\n        uint256 amountAdd0,\r\n        uint256 amountAdd1\r\n    )\r\n        external\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        )\r\n    {\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0);\r\n        TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1);\r\n\r\n        TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0);\r\n        TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1);\r\n\r\n        INonfungiblePositionManager.IncreaseLiquidityParams memory params =\r\n            INonfungiblePositionManager.IncreaseLiquidityParams({\r\n                tokenId: tokenId,\r\n                amount0Desired: amountAdd0,\r\n                amount1Desired: amountAdd1,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                deadline: block.timestamp\r\n            });\r\n\r\n        (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params);\r\n        \r\n        // Remove allowance and refund in both assets.\r\n        if (amount0 < amountAdd0) {\r\n            TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0);\r\n            uint256 refund0 = amountAdd0 - amount0;\r\n            TransferHelper.safeTransfer(token0, msg.sender, refund0);\r\n        }\r\n\r\n        if (amount1 < amountAdd1) {\r\n            TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0);\r\n            uint256 refund1 = amountAdd1 - amount1;\r\n            TransferHelper.safeTransfer(token1, msg.sender, refund1);\r\n        }\r\n    }\r\n\r\n    /// @notice Transfers funds to owner of NFT\r\n    /// @param tokenId The id of the erc721\r\n    /// @param amount0 The amount of token0\r\n    /// @param amount1 The amount of token1\r\n    function _sendToOwner(\r\n        uint256 tokenId,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) private {\r\n        // get owner of contract\r\n        address owner = deposits[tokenId].owner;\r\n\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        // send collected fees to owner\r\n        TransferHelper.safeTransfer(token0, owner, amount0*990/1000);\r\n        TransferHelper.safeTransfer(token1, owner, amount1*990/1000);\r\n    }\r\n\r\n}"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return fee The fee associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":305:8584  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":305:8584  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207eb14565d5754306573a691c2aa1e5fa452c3de95035c536e53f40c20ba2310f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207eb14565d5754306573a691c2aa1e5fa452c3de95035c536e53f40c20ba2310f64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB14565D5754306573A691C2AA1E5FA452C3DE95035C536E53F40C20BA2310F PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "305:8279:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;305:8279:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207eb14565d5754306573a691c2aa1e5fa452c3de95035c536e53f40c20ba2310f64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB14565D5754306573A691C2AA1E5FA452C3DE95035C536E53F40C20BA2310F PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "305:8279:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207eb14565d5754306573a691c2aa1e5fa452c3de95035c536e53f40c20ba2310f64736f6c63430008000033",
									".code": [
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xe2bb2ec5150e6007beecb75ce88e7a03458b8d01aa968ec265093cdb6d8d3af7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42068b48f0f59086bd90db67b51ab3e70ab4701e9e0602a9f048031e4f31831a\",\"dweb:/ipfs/QmZEhUMidPVxfGzGrQ39tACokCmknPr3yfxDgh9hjuZpwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122099481ea5f22aef269c089943202abc14171777aa147b43a63bc272c37ce1e3e664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099481ea5f22aef269c089943202abc14171777aa147b43a63bc272c37ce1e3e664736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x48 0x1E 0xA5 CALLCODE 0x2A 0xEF 0x26 SWAP13 ADDMOD SWAP10 NUMBER KECCAK256 0x2A 0xBC EQ OR OR PUSH24 0xAA147B43A63BC272C37CE1E3E664736F6C63430008000033 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;129:2408:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099481ea5f22aef269c089943202abc14171777aa147b43a63bc272c37ce1e3e664736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x48 0x1E 0xA5 CALLCODE 0x2A 0xEF 0x26 SWAP13 ADDMOD SWAP10 NUMBER KECCAK256 0x2A 0xBC EQ OR OR PUSH24 0xAA147B43A63BC272C37CE1E3E664736F6C63430008000033 ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099481ea5f22aef269c089943202abc14171777aa147b43a63bc272c37ce1e3e664736f6c63430008000033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswapv3lp.sol": {
				"LiquidityExamples": {
					"abi": [
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "collectAllFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "decreaseLiquidityInHalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd1",
									"type": "uint256"
								}
							],
							"name": "increaseLiquidityCurrentRange",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintNewPosition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonfungiblePositionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectAllFees(uint256)": {
								"details": "The contract must hold the erc721 token before it can collect fees",
								"params": {
									"tokenId": "The id of the erc721 token"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidityInHalf(uint256)": {
								"params": {
									"tokenId": "The id of the erc721 token"
								},
								"returns": {
									"amount0": "The amount received back in token0",
									"amount1": "The amount returned back in token1"
								}
							},
							"increaseLiquidityCurrentRange(uint256,uint256,uint256)": {
								"details": "Pool must be initialized already to add liquidity",
								"params": {
									"amount0": "The amount to add of token0",
									"amount1": "The amount to add of token1",
									"tokenId": "The id of the erc721 token"
								}
							},
							"mintNewPosition()": {
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for the position",
									"tokenId": "The id of the newly minted ERC721"
								}
							}
						},
						"stateVariables": {
							"deposits": {
								"details": "deposits[tokenId] => Deposit"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/uniswapv3lp.sol\":341:10708  contract LiquidityExamples is IERC721Receiver {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/uniswapv3lp.sol\":341:10708  contract LiquidityExamples is IERC721Receiver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8187b4c5\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8187b4c5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb02c43d0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb44a2722\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x306d9c61\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x46ce96dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x617d6d6e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/uniswapv3lp.sol\":704:740  uint24 public constant poolFee = 500 */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/uniswapv3lp.sol\":1198:1550  function onERC721Received(\r... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":2334:4862  function mintNewPosition()\r... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":5200:6055  function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n    tag_6:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":8179:10015  function increaseLiquidityCurrentRange(\r... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":6394:7894  function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n    tag_8:\n      tag_28\n      tag_41\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":624:697  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":975:1018  mapping(uint256 => Deposit) public deposits */\n    tag_10:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_16\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":394:538  INonfungiblePositionManager public constant nonfungiblePositionManager = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88) */\n    tag_11:\n      tag_44\n      tag_54\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":545:617  address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n    tag_12:\n      tag_44\n      tag_58\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":704:740  uint24 public constant poolFee = 500 */\n    tag_15:\n        /* \"contracts/uniswapv3lp.sol\":737:740  500 */\n      0x01f4\n        /* \"contracts/uniswapv3lp.sol\":704:740  uint24 public constant poolFee = 500 */\n      dup2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":1198:1550  function onERC721Received(\r... */\n    tag_21:\n        /* \"contracts/uniswapv3lp.sol\":1354:1360  bytes4 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":1381:1391  msg.sender */\n      caller\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":1381:1430  msg.sender == address(nonfungiblePositionManager) */\n      eq\n        /* \"contracts/uniswapv3lp.sol\":1373:1450  require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft') */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/uniswapv3lp.sol\":1461:1494  _createDeposit(operator, tokenId) */\n      tag_64\n        /* \"contracts/uniswapv3lp.sol\":1476:1484  operator */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":1486:1493  tokenId */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":1461:1475  _createDeposit */\n      tag_65\n        /* \"contracts/uniswapv3lp.sol\":1461:1494  _createDeposit(operator, tokenId) */\n      jump\t// in\n    tag_64:\n      pop\n      shl(0xe1, 0x0a85bd01)\n        /* \"contracts/uniswapv3lp.sol\":1198:1550  function onERC721Received(\r... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":2334:4862  function mintNewPosition()\r... */\n    tag_25:\n        /* \"contracts/uniswapv3lp.sol\":2411:2426  uint256 tokenId */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":2775:2784  100000000 */\n      0x05f5e100\n        /* \"contracts/uniswapv3lp.sol\":2819:2828  100940000 */\n      0x060438e0\n        /* \"contracts/uniswapv3lp.sol\":2881:2960  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amount0ToMint) */\n      tag_67\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n        /* \"contracts/uniswapv3lp.sol\":2919:2929  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":2939:2943  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":2775:2784  100000000 */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":2881:2912  TransferHelper.safeTransferFrom */\n      tag_68\n        /* \"contracts/uniswapv3lp.sol\":2881:2960  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amount0ToMint) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/uniswapv3lp.sol\":2971:3049  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amount1ToMint) */\n      tag_69\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n        /* \"contracts/uniswapv3lp.sol\":3008:3018  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":3028:3032  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":3035:3048  amount1ToMint */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":2971:3002  TransferHelper.safeTransferFrom */\n      tag_68\n        /* \"contracts/uniswapv3lp.sol\":2971:3049  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amount1ToMint) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/uniswapv3lp.sol\":3103:3187  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount0ToMint) */\n      tag_70\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3173:3186  amount0ToMint */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":3103:3129  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":3103:3187  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount0ToMint) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/uniswapv3lp.sol\":3198:3281  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount1ToMint) */\n      tag_72\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3267:3280  amount1ToMint */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":3198:3224  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":3198:3281  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount1ToMint) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0x40\n      dup1\n      mload\n      0x0160\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":737:740  500 */\n      0x01f4\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      dup2\n      dup4\n      add\n      mstore\n      not(0x0419)\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3707:3711  1040 */\n      0x0410\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3443:3495  INonfungiblePositionManager.MintParams memory params */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0xe0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0100\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3909:3913  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0x0120\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3943:3958  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      0x0140\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":4154:4193  nonfungiblePositionManager.mint(params) */\n      swap1\n      mload\n      shl(0xe1, 0x4418b22b)\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":495:537  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":4154:4185  nonfungiblePositionManager.mint */\n      0x88316456\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":4154:4193  nonfungiblePositionManager.mint(params) */\n      tag_73\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":3511:3974  INonfungiblePositionManager.MintParams({\r... */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":4154:4193  nonfungiblePositionManager.mint(params) */\n      0x04\n      add\n      tag_74\n      jump\t// in\n    tag_73:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/uniswapv3lp.sol\":4113:4193  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      swap3\n      swap10\n      pop\n      swap1\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4235:4270  _createDeposit(msg.sender, tokenId) */\n      tag_80\n        /* \"contracts/uniswapv3lp.sol\":4250:4260  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":4113:4193  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":4235:4249  _createDeposit */\n      tag_65\n        /* \"contracts/uniswapv3lp.sol\":4235:4270  _createDeposit(msg.sender, tokenId) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/uniswapv3lp.sol\":4353:4366  amount0ToMint */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":4343:4350  amount0 */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":4343:4366  amount0 < amount0ToMint */\n      lt\n        /* \"contracts/uniswapv3lp.sol\":4339:4592  if (amount0 < amount0ToMint) {\r... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":4383:4455  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0) */\n      tag_82\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":4453:4454  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4383:4409  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":4383:4455  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/uniswapv3lp.sol\":4470:4485  uint256 refund0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4488:4511  amount0ToMint - amount0 */\n      tag_83\n        /* \"contracts/uniswapv3lp.sol\":4504:4511  amount0 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":4488:4501  amount0ToMint */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":4488:4511  amount0ToMint - amount0 */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/uniswapv3lp.sol\":4470:4511  uint256 refund0 = amount0ToMint - amount0 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4526:4580  TransferHelper.safeTransfer(USDC, msg.sender, refund0) */\n      tag_85\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n        /* \"contracts/uniswapv3lp.sol\":4560:4570  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":4572:4579  refund0 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":4526:4553  TransferHelper.safeTransfer */\n      tag_86\n        /* \"contracts/uniswapv3lp.sol\":4526:4580  TransferHelper.safeTransfer(USDC, msg.sender, refund0) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/uniswapv3lp.sol\":4339:4592  if (amount0 < amount0ToMint) {\r... */\n      pop\n    tag_81:\n        /* \"contracts/uniswapv3lp.sol\":4618:4631  amount1ToMint */\n      dup2\n        /* \"contracts/uniswapv3lp.sol\":4608:4615  amount1 */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":4608:4631  amount1 < amount1ToMint */\n      lt\n        /* \"contracts/uniswapv3lp.sol\":4604:4855  if (amount1 < amount1ToMint) {\r... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":4648:4719  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0) */\n      tag_88\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":4717:4718  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4648:4674  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":4648:4719  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/uniswapv3lp.sol\":4734:4749  uint256 refund1 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4752:4775  amount1ToMint - amount1 */\n      tag_89\n        /* \"contracts/uniswapv3lp.sol\":4768:4775  amount1 */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":4752:4765  amount1ToMint */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":4752:4775  amount1ToMint - amount1 */\n      tag_84\n      jump\t// in\n    tag_89:\n        /* \"contracts/uniswapv3lp.sol\":4734:4775  uint256 refund1 = amount1ToMint - amount1 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4790:4843  TransferHelper.safeTransfer(DAI, msg.sender, refund1) */\n      tag_90\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n        /* \"contracts/uniswapv3lp.sol\":4823:4833  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":4835:4842  refund1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":4790:4817  TransferHelper.safeTransfer */\n      tag_86\n        /* \"contracts/uniswapv3lp.sol\":4790:4843  TransferHelper.safeTransfer(DAI, msg.sender, refund1) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/uniswapv3lp.sol\":4604:4855  if (amount1 < amount1ToMint) {\r... */\n      pop\n    tag_87:\n        /* \"contracts/uniswapv3lp.sol\":2334:4862  function mintNewPosition()\r... */\n      pop\n      pop\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":5200:6055  function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n    tag_31:\n        /* \"contracts/uniswapv3lp.sol\":5641:5873  INonfungiblePositionManager.CollectParams({\r... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":5756:5760  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":5641:5873  INonfungiblePositionManager.CollectParams({\r... */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":5907:5949  nonfungiblePositionManager.collect(params) */\n      swap1\n      mload\n      shl(0xe0, 0xfc6f7865)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":5259:5274  uint256 amount0 */\n      0x00\n      swap2\n      dup3\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":495:537  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5907:5941  nonfungiblePositionManager.collect */\n      0xfc6f7865\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5907:5949  nonfungiblePositionManager.collect(params) */\n      tag_92\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5641:5873  INonfungiblePositionManager.CollectParams({\r... */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5907:5949  nonfungiblePositionManager.collect(params) */\n      0x04\n      add\n      tag_93\n      jump\t// in\n    tag_92:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/uniswapv3lp.sol\":5886:5949  (amount0, amount1) = nonfungiblePositionManager.collect(params) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/uniswapv3lp.sol\":6008:6047  _sendToOwner(tokenId, amount0, amount1) */\n      tag_99\n        /* \"contracts/uniswapv3lp.sol\":6021:6028  tokenId */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":5886:5949  (amount0, amount1) = nonfungiblePositionManager.collect(params) */\n      dup5\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":6008:6020  _sendToOwner */\n      tag_100\n        /* \"contracts/uniswapv3lp.sol\":6008:6047  _sendToOwner(tokenId, amount0, amount1) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/uniswapv3lp.sol\":5200:6055  function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n      pop\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":8179:10015  function increaseLiquidityCurrentRange(\r... */\n    tag_37:\n        /* \"contracts/uniswapv3lp.sol\":8359:8376  uint128 liquidity */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":8481:8498  deposits[tokenId] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":8481:8505  deposits[tokenId].token0 */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":8533:8557  deposits[tokenId].token1 */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":8359:8376  uint128 liquidity */\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":8481:8505  deposits[tokenId].token0 */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/uniswapv3lp.sol\":8533:8557  deposits[tokenId].token1 */\n      and\n        /* \"contracts/uniswapv3lp.sol\":8568:8646  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0) */\n      tag_102\n        /* \"contracts/uniswapv3lp.sol\":8481:8505  deposits[tokenId].token0 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":8608:8618  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":8628:8632  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":8635:8645  amountAdd0 */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":8568:8599  TransferHelper.safeTransferFrom */\n      tag_68\n        /* \"contracts/uniswapv3lp.sol\":8568:8646  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/uniswapv3lp.sol\":8657:8735  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1) */\n      tag_103\n        /* \"contracts/uniswapv3lp.sol\":8689:8695  token1 */\n      dup2\n        /* \"contracts/uniswapv3lp.sol\":8697:8707  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":8717:8721  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":8724:8734  amountAdd1 */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":8657:8688  TransferHelper.safeTransferFrom */\n      tag_68\n        /* \"contracts/uniswapv3lp.sol\":8657:8735  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/uniswapv3lp.sol\":8748:8831  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0) */\n      tag_104\n        /* \"contracts/uniswapv3lp.sol\":8775:8781  token0 */\n      dup3\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8820:8830  amountAdd0 */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":8748:8774  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":8748:8831  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/uniswapv3lp.sol\":8842:8925  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1) */\n      tag_105\n        /* \"contracts/uniswapv3lp.sol\":8869:8875  token1 */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8914:8924  amountAdd1 */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":8842:8868  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":8842:8925  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/uniswapv3lp.sol\":9019:9320  INonfungiblePositionManager.IncreaseLiquidityParams({\r... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup10\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup10\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8938:9003  INonfungiblePositionManager.IncreaseLiquidityParams memory params */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9019:9320  INonfungiblePositionManager.IncreaseLiquidityParams({\r... */\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9289:9304  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":9019:9320  INonfungiblePositionManager.IncreaseLiquidityParams({\r... */\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9365:9417  nonfungiblePositionManager.increaseLiquidity(params) */\n      swap1\n      mload\n      shl(0xe0, 0x219f5d17)\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":495:537  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":9365:9409  nonfungiblePositionManager.increaseLiquidity */\n      0x219f5d17\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":9365:9417  nonfungiblePositionManager.increaseLiquidity(params) */\n      tag_106\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":9019:9320  INonfungiblePositionManager.IncreaseLiquidityParams({\r... */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":9365:9417  nonfungiblePositionManager.increaseLiquidity(params) */\n      0x04\n      add\n      tag_107\n      jump\t// in\n    tag_106:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/uniswapv3lp.sol\":9333:9417  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params) */\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n        /* \"contracts/uniswapv3lp.sol\":9498:9518  amount0 < amountAdd0 */\n      dup8\n      dup6\n      lt\n        /* \"contracts/uniswapv3lp.sol\":9494:9745  if (amount0 < amountAdd0) {\r... */\n      iszero\n      tag_113\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":9535:9609  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0) */\n      tag_114\n        /* \"contracts/uniswapv3lp.sol\":9562:9568  token0 */\n      dup4\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9607:9608  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9535:9561  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":9535:9609  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/uniswapv3lp.sol\":9624:9639  uint256 refund0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9642:9662  amountAdd0 - amount0 */\n      tag_115\n        /* \"contracts/uniswapv3lp.sol\":9655:9662  amount0 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":9642:9652  amountAdd0 */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":9642:9662  amountAdd0 - amount0 */\n      tag_84\n      jump\t// in\n    tag_115:\n        /* \"contracts/uniswapv3lp.sol\":9624:9662  uint256 refund0 = amountAdd0 - amount0 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":9677:9733  TransferHelper.safeTransfer(token0, msg.sender, refund0) */\n      tag_116\n        /* \"contracts/uniswapv3lp.sol\":9705:9711  token0 */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":9713:9723  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":9725:9732  refund0 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":9677:9704  TransferHelper.safeTransfer */\n      tag_86\n        /* \"contracts/uniswapv3lp.sol\":9677:9733  TransferHelper.safeTransfer(token0, msg.sender, refund0) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/uniswapv3lp.sol\":9494:9745  if (amount0 < amountAdd0) {\r... */\n      pop\n    tag_113:\n        /* \"contracts/uniswapv3lp.sol\":9771:9781  amountAdd1 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":9761:9768  amount1 */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":9761:9781  amount1 < amountAdd1 */\n      lt\n        /* \"contracts/uniswapv3lp.sol\":9757:10008  if (amount1 < amountAdd1) {\r... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":9798:9872  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0) */\n      tag_118\n        /* \"contracts/uniswapv3lp.sol\":9825:9831  token1 */\n      dup3\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9870:9871  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9798:9824  TransferHelper.safeApprove */\n      tag_71\n        /* \"contracts/uniswapv3lp.sol\":9798:9872  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/uniswapv3lp.sol\":9887:9902  uint256 refund1 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9905:9925  amountAdd1 - amount1 */\n      tag_119\n        /* \"contracts/uniswapv3lp.sol\":9918:9925  amount1 */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":9905:9915  amountAdd1 */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":9905:9925  amountAdd1 - amount1 */\n      tag_84\n      jump\t// in\n    tag_119:\n        /* \"contracts/uniswapv3lp.sol\":9887:9925  uint256 refund1 = amountAdd1 - amount1 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":9940:9996  TransferHelper.safeTransfer(token1, msg.sender, refund1) */\n      tag_120\n        /* \"contracts/uniswapv3lp.sol\":9968:9974  token1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":9976:9986  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":9988:9995  refund1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":9940:9967  TransferHelper.safeTransfer */\n      tag_86\n        /* \"contracts/uniswapv3lp.sol\":9940:9996  TransferHelper.safeTransfer(token1, msg.sender, refund1) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/uniswapv3lp.sol\":9757:10008  if (amount1 < amountAdd1) {\r... */\n      pop\n    tag_117:\n        /* \"contracts/uniswapv3lp.sol\":8179:10015  function increaseLiquidityCurrentRange(\r... */\n      pop\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":6394:7894  function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n    tag_42:\n        /* \"contracts/uniswapv3lp.sol\":6462:6477  uint256 amount0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":6577:6594  deposits[tokenId] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":6577:6600  deposits[tokenId].owner */\n      sload\n        /* \"contracts/uniswapv3lp.sol\":6462:6477  uint256 amount0 */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":6577:6600  deposits[tokenId].owner */\n      and\n        /* \"contracts/uniswapv3lp.sol\":6563:6573  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":6563:6600  msg.sender == deposits[tokenId].owner */\n      eq\n        /* \"contracts/uniswapv3lp.sol\":6555:6618  require(msg.sender == deposits[tokenId].owner, 'Not the owner') */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"contracts/uniswapv3lp.sol\":6672:6689  uint128 liquidity */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":6692:6709  deposits[tokenId] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":6692:6719  deposits[tokenId].liquidity */\n      0x01\n      add\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6754:6767  liquidity / 2 */\n      tag_125\n        /* \"contracts/uniswapv3lp.sol\":6766:6767  2 */\n      0x02\n        /* \"contracts/uniswapv3lp.sol\":6692:6719  deposits[tokenId].liquidity */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":6754:6767  liquidity / 2 */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/uniswapv3lp.sol\":6730:6767  uint128 halfLiquidity = liquidity / 2 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":6951:7016  INonfungiblePositionManager.DecreaseLiquidityParams memory params */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":7112:7119  tokenId */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7149:7162  halfLiquidity */\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7193:7194  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7225:7226  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7255:7270  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":7032:7286  INonfungiblePositionManager.DecreaseLiquidityParams({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/uniswapv3lp.sol\":6951:7286  INonfungiblePositionManager.DecreaseLiquidityParams memory params =\r... */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":7307:7363  INonfungiblePositionManager.CollectParams memory params2 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":7379:7653  INonfungiblePositionManager.CollectParams({\r... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":7449:7456  tokenId */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":7379:7653  INonfungiblePositionManager.CollectParams({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7494:7498  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7379:7653  INonfungiblePositionManager.CollectParams({\r... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      and\n      dup2\n      mstore\n      0x20\n      add\n      sub(shl(0x80, 0x01), 0x01)\n      dup1\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/uniswapv3lp.sol\":7307:7653  INonfungiblePositionManager.CollectParams memory params2 =\r... */\n      swap1\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7687:7731  nonfungiblePositionManager.decreaseLiquidity */\n      and\n      0x0c49ccbe\n        /* \"contracts/uniswapv3lp.sol\":7732:7738  params */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":7687:7739  nonfungiblePositionManager.decreaseLiquidity(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_132:\n        /* \"contracts/uniswapv3lp.sol\":7750:7793  nonfungiblePositionManager.collect(params2) */\n      mload(0x40)\n      shl(0xe0, 0xfc6f7865)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7666:7739  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params) */\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":495:537  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7750:7784  nonfungiblePositionManager.collect */\n      0xfc6f7865\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7750:7793  nonfungiblePositionManager.collect(params2) */\n      tag_133\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7785:7792  params2 */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7750:7793  nonfungiblePositionManager.collect(params2) */\n      0x04\n      add\n      tag_93\n      jump\t// in\n    tag_133:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_137:\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":7847:7886  _sendToOwner(tokenId, amount0, amount1) */\n      tag_138\n        /* \"contracts/uniswapv3lp.sol\":7860:7867  tokenId */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":7869:7876  amount0 */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":7878:7885  amount1 */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":7847:7859  _sendToOwner */\n      tag_100\n        /* \"contracts/uniswapv3lp.sol\":7847:7886  _sendToOwner(tokenId, amount0, amount1) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/uniswapv3lp.sol\":6394:7894  function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\r... */\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":624:697  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n    tag_45:\n        /* \"contracts/uniswapv3lp.sol\":655:697  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n        /* \"contracts/uniswapv3lp.sol\":624:697  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      dup2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":975:1018  mapping(uint256 => Deposit) public deposits */\n    tag_50:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      swap4\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      dup3\n      and\n      swap2\n      and\n      dup5\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":394:538  INonfungiblePositionManager public constant nonfungiblePositionManager = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88) */\n    tag_54:\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":545:617  address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n    tag_58:\n        /* \"contracts/uniswapv3lp.sol\":575:617  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n        /* \"contracts/uniswapv3lp.sol\":545:617  address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      dup2\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":1558:1928  function _createDeposit(address owner, uint256 tokenId) internal {\r... */\n    tag_65:\n        /* \"contracts/uniswapv3lp.sol\":1719:1764  nonfungiblePositionManager.positions(tokenId) */\n      mload(0x40)\n      shl(0xe3, 0x133f7571)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":1639:1653  address token0 */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":495:537  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":1719:1755  nonfungiblePositionManager.positions */\n      0x99fbab88\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":1719:1764  nonfungiblePositionManager.positions(tokenId) */\n      tag_140\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":1756:1763  tokenId */\n      dup8\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":1719:1764  nonfungiblePositionManager.positions(tokenId) */\n      0x04\n      add\n      tag_141\n      jump\t// in\n    tag_140:\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"contracts/uniswapv3lp.sol\":1634:1764  (, , address token0, address token1, , , , uint128 liquidity, , , , ) =\r... */\n      pop\n      pop\n      pop\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":1843:1920  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":1859:1864  owner */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":1843:1920  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":1877:1886  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":1843:1920  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":1896:1902  token0 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":1843:1920  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":1912:1918  token1 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":1843:1920  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/uniswapv3lp.sol\":1823:1831  deposits */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":1823:1840  deposits[tokenId] */\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":1832:1839  tokenId */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":1823:1840  deposits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":1823:1920  deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0x80, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":1558:1928  function _createDeposit(address owner, uint256 tokenId) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_68:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      swap1\n      mload\n      tag_150\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      tag_151\n      jump\t// in\n    tag_150:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_154\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_153)\n    tag_154:\n      0x60\n      swap2\n      pop\n    tag_153:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_157\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      tag_157\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_161\n      jump\t// in\n    tag_159:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_71:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap1\n      mload\n      tag_165\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_151\n      jump\t// in\n    tag_165:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_168\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_167)\n    tag_168:\n      0x60\n      swap2\n      pop\n    tag_167:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      tag_171\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_171:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_174\n      jump\t// in\n    tag_172:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_86:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_176:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap1\n      mload\n      tag_177\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      tag_151\n      jump\t// in\n    tag_177:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_180\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_179)\n    tag_180:\n      0x60\n      swap2\n      pop\n    tag_179:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      tag_183\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_183:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_186\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":10207:10703  function _sendToOwner(\r... */\n    tag_100:\n        /* \"contracts/uniswapv3lp.sol\":10367:10380  address owner */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":10383:10400  deposits[tokenId] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":10383:10406  deposits[tokenId].owner */\n      dup1\n      sload\n        /* \"contracts/uniswapv3lp.sol\":10436:10460  deposits[tokenId].token0 */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":10488:10512  deposits[tokenId].token1 */\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":10383:10406  deposits[tokenId].owner */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/uniswapv3lp.sol\":10436:10460  deposits[tokenId].token0 */\n      dup3\n      and\n      swap2\n        /* \"contracts/uniswapv3lp.sol\":10488:10512  deposits[tokenId].token1 */\n      and\n        /* \"contracts/uniswapv3lp.sol\":10564:10624  TransferHelper.safeTransfer(token0, owner, amount0*990/1000) */\n      tag_188\n        /* \"contracts/uniswapv3lp.sol\":10436:10460  deposits[tokenId].token0 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":10383:10406  deposits[tokenId].owner */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":10619:10623  1000 */\n      0x03e8\n        /* \"contracts/uniswapv3lp.sol\":10607:10618  amount0*990 */\n      tag_189\n        /* \"contracts/uniswapv3lp.sol\":10607:10614  amount0 */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":10615:10618  990 */\n      0x03de\n        /* \"contracts/uniswapv3lp.sol\":10607:10618  amount0*990 */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/uniswapv3lp.sol\":10607:10623  amount0*990/1000 */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/uniswapv3lp.sol\":10564:10591  TransferHelper.safeTransfer */\n      tag_86\n        /* \"contracts/uniswapv3lp.sol\":10564:10624  TransferHelper.safeTransfer(token0, owner, amount0*990/1000) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/uniswapv3lp.sol\":10635:10695  TransferHelper.safeTransfer(token1, owner, amount1*990/1000) */\n      tag_159\n        /* \"contracts/uniswapv3lp.sol\":10663:10669  token1 */\n      dup2\n        /* \"contracts/uniswapv3lp.sol\":10671:10676  owner */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":10690:10694  1000 */\n      0x03e8\n        /* \"contracts/uniswapv3lp.sol\":10678:10689  amount1*990 */\n      tag_189\n        /* \"contracts/uniswapv3lp.sol\":10678:10685  amount1 */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":10686:10689  990 */\n      0x03de\n        /* \"contracts/uniswapv3lp.sol\":10678:10689  amount1*990 */\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:156   */\n    tag_197:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n        /* \"#utility.yul\":117:150   */\n      tag_199\n        /* \"#utility.yul\":95:108   */\n      dup2\n        /* \"#utility.yul\":117:150   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":76:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":161:327   */\n    tag_201:\n        /* \"#utility.yul\":240:253   */\n      dup1\n      mload\n        /* \"#utility.yul\":293:294   */\n      0x02\n        /* \"#utility.yul\":282:302   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":272:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":262:264   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:526   */\n    tag_204:\n        /* \"#utility.yul\":413:426   */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":455:501   */\n      dup2\n      and\n        /* \"#utility.yul\":445:502   */\n      dup2\n      eq\n        /* \"#utility.yul\":435:437   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":516:517   */\n      0x00\n        /* \"#utility.yul\":513:514   */\n      dup1\n        /* \"#utility.yul\":506:518   */\n      revert\n        /* \"#utility.yul\":531:698   */\n    tag_207:\n        /* \"#utility.yul\":611:624   */\n      dup1\n      mload\n        /* \"#utility.yul\":664:672   */\n      0xffffff\n        /* \"#utility.yul\":653:673   */\n      dup2\n      and\n        /* \"#utility.yul\":643:674   */\n      dup2\n      eq\n        /* \"#utility.yul\":633:635   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":688:689   */\n      0x00\n        /* \"#utility.yul\":685:686   */\n      dup1\n        /* \"#utility.yul\":678:690   */\n      revert\n        /* \"#utility.yul\":703:1693   */\n    tag_20:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":885:888   */\n      0x80\n        /* \"#utility.yul\":873:882   */\n      dup7\n        /* \"#utility.yul\":864:871   */\n      dup9\n        /* \"#utility.yul\":860:883   */\n      sub\n        /* \"#utility.yul\":856:889   */\n      slt\n        /* \"#utility.yul\":853:855   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":907:913   */\n      dup1\n        /* \"#utility.yul\":899:905   */\n      dup2\n        /* \"#utility.yul\":892:914   */\n      revert\n        /* \"#utility.yul\":853:855   */\n    tag_211:\n        /* \"#utility.yul\":951:960   */\n      dup6\n        /* \"#utility.yul\":938:961   */\n      calldataload\n        /* \"#utility.yul\":970:1003   */\n      tag_212\n        /* \"#utility.yul\":997:1002   */\n      dup2\n        /* \"#utility.yul\":970:1003   */\n      tag_200\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1022:1027   */\n      swap5\n      pop\n        /* \"#utility.yul\":1079:1081   */\n      0x20\n        /* \"#utility.yul\":1064:1082   */\n      dup7\n      add\n        /* \"#utility.yul\":1051:1083   */\n      calldataload\n        /* \"#utility.yul\":1092:1127   */\n      tag_213\n        /* \"#utility.yul\":1051:1083   */\n      dup2\n        /* \"#utility.yul\":1092:1127   */\n      tag_200\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1146:1153   */\n      swap4\n      pop\n        /* \"#utility.yul\":1200:1202   */\n      0x40\n        /* \"#utility.yul\":1185:1203   */\n      dup7\n      add\n        /* \"#utility.yul\":1172:1204   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1255:1257   */\n      0x60\n        /* \"#utility.yul\":1240:1258   */\n      dup7\n      add\n        /* \"#utility.yul\":1227:1259   */\n      calldataload\n        /* \"#utility.yul\":1278:1296   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1308:1322   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1305:1307   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1340:1346   */\n      dup3\n        /* \"#utility.yul\":1332:1338   */\n      dup4\n        /* \"#utility.yul\":1325:1347   */\n      revert\n        /* \"#utility.yul\":1305:1307   */\n    tag_214:\n        /* \"#utility.yul\":1383:1389   */\n      dup2\n        /* \"#utility.yul\":1372:1381   */\n      dup9\n        /* \"#utility.yul\":1368:1390   */\n      add\n        /* \"#utility.yul\":1358:1390   */\n      swap2\n      pop\n        /* \"#utility.yul\":1428:1435   */\n      dup9\n        /* \"#utility.yul\":1421:1425   */\n      0x1f\n        /* \"#utility.yul\":1417:1419   */\n      dup4\n        /* \"#utility.yul\":1413:1426   */\n      add\n        /* \"#utility.yul\":1409:1436   */\n      slt\n        /* \"#utility.yul\":1399:1401   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1455:1461   */\n      dup3\n        /* \"#utility.yul\":1447:1453   */\n      dup4\n        /* \"#utility.yul\":1440:1462   */\n      revert\n        /* \"#utility.yul\":1399:1401   */\n    tag_215:\n        /* \"#utility.yul\":1500:1502   */\n      dup2\n        /* \"#utility.yul\":1487:1503   */\n      calldataload\n        /* \"#utility.yul\":1526:1528   */\n      dup2\n        /* \"#utility.yul\":1518:1524   */\n      dup2\n        /* \"#utility.yul\":1515:1529   */\n      gt\n        /* \"#utility.yul\":1512:1514   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1547:1553   */\n      dup4\n        /* \"#utility.yul\":1539:1545   */\n      dup5\n        /* \"#utility.yul\":1532:1554   */\n      revert\n        /* \"#utility.yul\":1512:1514   */\n    tag_216:\n        /* \"#utility.yul\":1597:1604   */\n      dup10\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1583:1589   */\n      dup3\n        /* \"#utility.yul\":1579:1581   */\n      dup6\n        /* \"#utility.yul\":1575:1590   */\n      add\n        /* \"#utility.yul\":1571:1595   */\n      add\n        /* \"#utility.yul\":1568:1605   */\n      gt\n        /* \"#utility.yul\":1565:1567   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1623:1629   */\n      dup4\n        /* \"#utility.yul\":1615:1621   */\n      dup5\n        /* \"#utility.yul\":1608:1630   */\n      revert\n        /* \"#utility.yul\":1565:1567   */\n    tag_217:\n        /* \"#utility.yul\":843:1693   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1651:1662   */\n      add\n      swap5\n        /* \"#utility.yul\":1681:1687   */\n      swap4\n        /* \"#utility.yul\":843:1693   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1698:1995   */\n    tag_158:\n      0x00\n        /* \"#utility.yul\":1818:1820   */\n      0x20\n        /* \"#utility.yul\":1806:1815   */\n      dup3\n        /* \"#utility.yul\":1797:1804   */\n      dup5\n        /* \"#utility.yul\":1793:1816   */\n      sub\n        /* \"#utility.yul\":1789:1821   */\n      slt\n        /* \"#utility.yul\":1786:1788   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1839:1845   */\n      dup1\n        /* \"#utility.yul\":1831:1837   */\n      dup2\n        /* \"#utility.yul\":1824:1846   */\n      revert\n        /* \"#utility.yul\":1786:1788   */\n    tag_219:\n        /* \"#utility.yul\":1876:1885   */\n      dup2\n        /* \"#utility.yul\":1870:1886   */\n      mload\n        /* \"#utility.yul\":1929:1934   */\n      dup1\n        /* \"#utility.yul\":1922:1935   */\n      iszero\n        /* \"#utility.yul\":1915:1936   */\n      iszero\n        /* \"#utility.yul\":1908:1913   */\n      dup2\n        /* \"#utility.yul\":1905:1937   */\n      eq\n        /* \"#utility.yul\":1895:1897   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":1956:1962   */\n      dup2\n        /* \"#utility.yul\":1948:1954   */\n      dup3\n        /* \"#utility.yul\":1941:1963   */\n      revert\n        /* \"#utility.yul\":1895:1897   */\n    tag_220:\n        /* \"#utility.yul\":1984:1989   */\n      swap4\n        /* \"#utility.yul\":1776:1995   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2000:2342   */\n    tag_112:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2157:2159   */\n      0x60\n        /* \"#utility.yul\":2145:2154   */\n      dup5\n        /* \"#utility.yul\":2136:2143   */\n      dup7\n        /* \"#utility.yul\":2132:2155   */\n      sub\n        /* \"#utility.yul\":2128:2160   */\n      slt\n        /* \"#utility.yul\":2125:2127   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2178:2184   */\n      dup3\n        /* \"#utility.yul\":2170:2176   */\n      dup4\n        /* \"#utility.yul\":2163:2185   */\n      revert\n        /* \"#utility.yul\":2125:2127   */\n    tag_222:\n        /* \"#utility.yul\":2206:2248   */\n      tag_223\n        /* \"#utility.yul\":2238:2247   */\n      dup5\n        /* \"#utility.yul\":2206:2248   */\n      tag_204\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2196:2248   */\n      swap3\n      pop\n        /* \"#utility.yul\":2288:2290   */\n      0x20\n        /* \"#utility.yul\":2277:2286   */\n      dup5\n        /* \"#utility.yul\":2273:2291   */\n      add\n        /* \"#utility.yul\":2267:2292   */\n      mload\n        /* \"#utility.yul\":2257:2292   */\n      swap2\n      pop\n        /* \"#utility.yul\":2332:2334   */\n      0x40\n        /* \"#utility.yul\":2321:2330   */\n      dup5\n        /* \"#utility.yul\":2317:2335   */\n      add\n        /* \"#utility.yul\":2311:2336   */\n      mload\n        /* \"#utility.yul\":2301:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":2115:2342   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2347:2537   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":2459:2461   */\n      0x20\n        /* \"#utility.yul\":2447:2456   */\n      dup3\n        /* \"#utility.yul\":2438:2445   */\n      dup5\n        /* \"#utility.yul\":2434:2457   */\n      sub\n        /* \"#utility.yul\":2430:2462   */\n      slt\n        /* \"#utility.yul\":2427:2429   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2480:2486   */\n      dup1\n        /* \"#utility.yul\":2472:2478   */\n      dup2\n        /* \"#utility.yul\":2465:2487   */\n      revert\n        /* \"#utility.yul\":2427:2429   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":2508:2531   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2417:2537   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2542:2946   */\n    tag_79:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":2716:2719   */\n      0x80\n        /* \"#utility.yul\":2704:2713   */\n      dup6\n        /* \"#utility.yul\":2695:2702   */\n      dup8\n        /* \"#utility.yul\":2691:2714   */\n      sub\n        /* \"#utility.yul\":2687:2720   */\n      slt\n        /* \"#utility.yul\":2684:2686   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2738:2744   */\n      dup4\n        /* \"#utility.yul\":2730:2736   */\n      dup5\n        /* \"#utility.yul\":2723:2745   */\n      revert\n        /* \"#utility.yul\":2684:2686   */\n    tag_227:\n        /* \"#utility.yul\":2772:2781   */\n      dup5\n        /* \"#utility.yul\":2766:2782   */\n      mload\n        /* \"#utility.yul\":2756:2782   */\n      swap4\n      pop\n        /* \"#utility.yul\":2801:2852   */\n      tag_228\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2837:2846   */\n      dup7\n        /* \"#utility.yul\":2833:2851   */\n      add\n        /* \"#utility.yul\":2801:2852   */\n      tag_204\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2892:2894   */\n      0x40\n        /* \"#utility.yul\":2877:2895   */\n      dup7\n      add\n        /* \"#utility.yul\":2871:2896   */\n      mload\n        /* \"#utility.yul\":2936:2938   */\n      0x60\n        /* \"#utility.yul\":2921:2939   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":2915:2940   */\n      mload\n        /* \"#utility.yul\":2674:2946   */\n      swap5\n      swap8\n        /* \"#utility.yul\":2791:2852   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":2674:2946   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3206   */\n    tag_98:\n      0x00\n      dup1\n        /* \"#utility.yul\":3091:3093   */\n      0x40\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3070:3077   */\n      dup6\n        /* \"#utility.yul\":3066:3089   */\n      sub\n        /* \"#utility.yul\":3062:3094   */\n      slt\n        /* \"#utility.yul\":3059:3061   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3112:3118   */\n      dup2\n        /* \"#utility.yul\":3104:3110   */\n      dup3\n        /* \"#utility.yul\":3097:3119   */\n      revert\n        /* \"#utility.yul\":3059:3061   */\n    tag_230:\n      pop\n      pop\n        /* \"#utility.yul\":3140:3156   */\n      dup1\n      mload\n        /* \"#utility.yul\":3196:3198   */\n      0x20\n        /* \"#utility.yul\":3181:3199   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3175:3200   */\n      mload\n        /* \"#utility.yul\":3140:3156   */\n      swap1\n      swap3\n        /* \"#utility.yul\":3175:3200   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":3049:3206   */\n      jump\t// out\n        /* \"#utility.yul\":3211:3537   */\n    tag_36:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x60\n        /* \"#utility.yul\":3345:3354   */\n      dup5\n        /* \"#utility.yul\":3336:3343   */\n      dup7\n        /* \"#utility.yul\":3332:3355   */\n      sub\n        /* \"#utility.yul\":3328:3360   */\n      slt\n        /* \"#utility.yul\":3325:3327   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":3378:3384   */\n      dup3\n        /* \"#utility.yul\":3370:3376   */\n      dup4\n        /* \"#utility.yul\":3363:3385   */\n      revert\n        /* \"#utility.yul\":3325:3327   */\n    tag_232:\n      pop\n      pop\n        /* \"#utility.yul\":3406:3429   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":3476:3478   */\n      0x20\n        /* \"#utility.yul\":3461:3479   */\n      dup4\n      add\n        /* \"#utility.yul\":3448:3480   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3527:3529   */\n      0x40\n        /* \"#utility.yul\":3512:3530   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3499:3531   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3315:3537   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3542:4766   */\n    tag_146:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3848:3851   */\n      0x0180\n        /* \"#utility.yul\":3836:3845   */\n      dup14\n        /* \"#utility.yul\":3827:3834   */\n      dup16\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3852   */\n      slt\n        /* \"#utility.yul\":3816:3818   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":3870:3876   */\n      dup7\n        /* \"#utility.yul\":3862:3868   */\n      dup8\n        /* \"#utility.yul\":3855:3877   */\n      revert\n        /* \"#utility.yul\":3816:3818   */\n    tag_234:\n        /* \"#utility.yul\":3907:3916   */\n      dup13\n        /* \"#utility.yul\":3901:3917   */\n      mload\n        /* \"#utility.yul\":3957:3983   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":3950:3955   */\n      dup2\n        /* \"#utility.yul\":3946:3984   */\n      and\n        /* \"#utility.yul\":3939:3944   */\n      dup2\n        /* \"#utility.yul\":3936:3985   */\n      eq\n        /* \"#utility.yul\":3926:3928   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":4004:4010   */\n      dup8\n        /* \"#utility.yul\":3996:4002   */\n      dup9\n        /* \"#utility.yul\":3989:4011   */\n      revert\n        /* \"#utility.yul\":3926:3928   */\n    tag_235:\n        /* \"#utility.yul\":4032:4037   */\n      swap12\n      pop\n        /* \"#utility.yul\":4056:4107   */\n      tag_236\n        /* \"#utility.yul\":4103:4105   */\n      0x20\n        /* \"#utility.yul\":4088:4106   */\n      dup15\n      add\n        /* \"#utility.yul\":4056:4107   */\n      tag_197\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4046:4107   */\n      swap11\n      pop\n        /* \"#utility.yul\":4126:4177   */\n      tag_237\n        /* \"#utility.yul\":4173:4175   */\n      0x40\n        /* \"#utility.yul\":4162:4171   */\n      dup15\n        /* \"#utility.yul\":4158:4176   */\n      add\n        /* \"#utility.yul\":4126:4177   */\n      tag_197\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4116:4177   */\n      swap10\n      pop\n        /* \"#utility.yul\":4196:4247   */\n      tag_238\n        /* \"#utility.yul\":4243:4245   */\n      0x60\n        /* \"#utility.yul\":4232:4241   */\n      dup15\n        /* \"#utility.yul\":4228:4246   */\n      add\n        /* \"#utility.yul\":4196:4247   */\n      tag_197\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4186:4247   */\n      swap9\n      pop\n        /* \"#utility.yul\":4266:4317   */\n      tag_239\n        /* \"#utility.yul\":4312:4315   */\n      0x80\n        /* \"#utility.yul\":4301:4310   */\n      dup15\n        /* \"#utility.yul\":4297:4316   */\n      add\n        /* \"#utility.yul\":4266:4317   */\n      tag_207\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4256:4317   */\n      swap8\n      pop\n        /* \"#utility.yul\":4336:4386   */\n      tag_240\n        /* \"#utility.yul\":4381:4384   */\n      0xa0\n        /* \"#utility.yul\":4370:4379   */\n      dup15\n        /* \"#utility.yul\":4366:4385   */\n      add\n        /* \"#utility.yul\":4336:4386   */\n      tag_201\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4326:4386   */\n      swap7\n      pop\n        /* \"#utility.yul\":4405:4455   */\n      tag_241\n        /* \"#utility.yul\":4450:4453   */\n      0xc0\n        /* \"#utility.yul\":4439:4448   */\n      dup15\n        /* \"#utility.yul\":4435:4454   */\n      add\n        /* \"#utility.yul\":4405:4455   */\n      tag_201\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4395:4455   */\n      swap6\n      pop\n        /* \"#utility.yul\":4474:4526   */\n      tag_242\n        /* \"#utility.yul\":4521:4524   */\n      0xe0\n        /* \"#utility.yul\":4510:4519   */\n      dup15\n        /* \"#utility.yul\":4506:4525   */\n      add\n        /* \"#utility.yul\":4474:4526   */\n      tag_204\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4464:4526   */\n      swap5\n      pop\n        /* \"#utility.yul\":4566:4569   */\n      0x0100\n        /* \"#utility.yul\":4555:4564   */\n      dup14\n        /* \"#utility.yul\":4551:4570   */\n      add\n        /* \"#utility.yul\":4545:4571   */\n      mload\n        /* \"#utility.yul\":4535:4571   */\n      swap4\n      pop\n        /* \"#utility.yul\":4611:4614   */\n      0x0120\n        /* \"#utility.yul\":4600:4609   */\n      dup14\n        /* \"#utility.yul\":4596:4615   */\n      add\n        /* \"#utility.yul\":4590:4616   */\n      mload\n        /* \"#utility.yul\":4580:4616   */\n      swap3\n      pop\n        /* \"#utility.yul\":4636:4688   */\n      tag_243\n        /* \"#utility.yul\":4683:4686   */\n      0x0140\n        /* \"#utility.yul\":4672:4681   */\n      dup15\n        /* \"#utility.yul\":4668:4687   */\n      add\n        /* \"#utility.yul\":4636:4688   */\n      tag_204\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4625:4688   */\n      swap2\n      pop\n        /* \"#utility.yul\":4708:4760   */\n      tag_244\n        /* \"#utility.yul\":4755:4758   */\n      0x0160\n        /* \"#utility.yul\":4744:4753   */\n      dup15\n        /* \"#utility.yul\":4740:4759   */\n      add\n        /* \"#utility.yul\":4708:4760   */\n      tag_204\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4697:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":3806:4766   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":4771:4877   */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4839:4870   */\n      and\n        /* \"#utility.yul\":4827:4871   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4817:4877   */\n      jump\t// out\n        /* \"#utility.yul\":4882:4975   */\n    tag_247:\n        /* \"#utility.yul\":4959:4960   */\n      0x02\n        /* \"#utility.yul\":4948:4968   */\n      signextend\n        /* \"#utility.yul\":4936:4969   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4926:4975   */\n      jump\t// out\n        /* \"#utility.yul\":4980:5074   */\n    tag_249:\n        /* \"#utility.yul\":5058:5066   */\n      0xffffff\n        /* \"#utility.yul\":5047:5067   */\n      and\n        /* \"#utility.yul\":5035:5068   */\n      swap1\n      mstore\n        /* \"#utility.yul\":5025:5074   */\n      jump\t// out\n        /* \"#utility.yul\":5079:5509   */\n    tag_151:\n      0x00\n        /* \"#utility.yul\":5246:5252   */\n      dup3\n        /* \"#utility.yul\":5240:5253   */\n      mload\n        /* \"#utility.yul\":5271:5274   */\n      dup2\n        /* \"#utility.yul\":5283:5412   */\n    tag_252:\n        /* \"#utility.yul\":5297:5303   */\n      dup2\n        /* \"#utility.yul\":5294:5295   */\n      dup2\n        /* \"#utility.yul\":5291:5304   */\n      lt\n        /* \"#utility.yul\":5283:5412   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":5395:5399   */\n      0x20\n        /* \"#utility.yul\":5379:5393   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":5375:5400   */\n      dup2\n      add\n        /* \"#utility.yul\":5369:5401   */\n      mload\n        /* \"#utility.yul\":5356:5367   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":5349:5402   */\n      mstore\n        /* \"#utility.yul\":5312:5324   */\n      add\n        /* \"#utility.yul\":5283:5412   */\n      jump(tag_252)\n    tag_254:\n        /* \"#utility.yul\":5430:5436   */\n      dup2\n        /* \"#utility.yul\":5427:5428   */\n      dup2\n        /* \"#utility.yul\":5424:5437   */\n      gt\n        /* \"#utility.yul\":5421:5423   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":5465:5468   */\n      dup3\n        /* \"#utility.yul\":5456:5462   */\n      dup3\n        /* \"#utility.yul\":5451:5454   */\n      dup6\n        /* \"#utility.yul\":5447:5463   */\n      add\n        /* \"#utility.yul\":5440:5469   */\n      mstore\n        /* \"#utility.yul\":5421:5423   */\n    tag_255:\n      pop\n        /* \"#utility.yul\":5487:5503   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5216:5509   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:5717   */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5678:5710   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5660:5711   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5648:5650   */\n      0x20\n        /* \"#utility.yul\":5633:5651   */\n      add\n      swap1\n        /* \"#utility.yul\":5615:5717   */\n      jump\t// out\n        /* \"#utility.yul\":5722:6097   */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5980:5995   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":5962:5996   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6032:6047   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6027:6029   */\n      0x20\n        /* \"#utility.yul\":6012:6030   */\n      dup3\n      add\n        /* \"#utility.yul\":6005:6048   */\n      mstore\n        /* \"#utility.yul\":6079:6081   */\n      0x40\n        /* \"#utility.yul\":6064:6082   */\n      dup2\n      add\n        /* \"#utility.yul\":6057:6091   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5912:5914   */\n      0x60\n        /* \"#utility.yul\":5897:5915   */\n      add\n      swap1\n        /* \"#utility.yul\":5879:6097   */\n      jump\t// out\n        /* \"#utility.yul\":6102:6599   */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6389:6404   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":6371:6405   */\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6441:6488   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6436:6438   */\n      0x20\n        /* \"#utility.yul\":6421:6439   */\n      dup5\n      add\n        /* \"#utility.yul\":6414:6489   */\n      mstore\n        /* \"#utility.yul\":6525:6540   */\n      swap1\n      dup4\n      and\n        /* \"#utility.yul\":6520:6522   */\n      0x40\n        /* \"#utility.yul\":6505:6523   */\n      dup4\n      add\n        /* \"#utility.yul\":6498:6541   */\n      mstore\n        /* \"#utility.yul\":6577:6592   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6572:6574   */\n      0x60\n        /* \"#utility.yul\":6557:6575   */\n      dup3\n      add\n        /* \"#utility.yul\":6550:6593   */\n      mstore\n        /* \"#utility.yul\":6320:6323   */\n      0x80\n        /* \"#utility.yul\":6305:6324   */\n      add\n      swap1\n        /* \"#utility.yul\":6287:6599   */\n      jump\t// out\n        /* \"#utility.yul\":6604:6878   */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6796:6828   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6778:6829   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6860:6862   */\n      0x20\n        /* \"#utility.yul\":6845:6863   */\n      dup3\n      add\n        /* \"#utility.yul\":6838:6872   */\n      mstore\n        /* \"#utility.yul\":6766:6768   */\n      0x40\n        /* \"#utility.yul\":6751:6769   */\n      add\n      swap1\n        /* \"#utility.yul\":6733:6878   */\n      jump\t// out\n        /* \"#utility.yul\":6883:7085   */\n    tag_23:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":7045:7078   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7027:7079   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7015:7017   */\n      0x20\n        /* \"#utility.yul\":7000:7018   */\n      add\n      swap1\n        /* \"#utility.yul\":6982:7085   */\n      jump\t// out\n        /* \"#utility.yul\":7334:7659   */\n    tag_174:\n        /* \"#utility.yul\":7536:7538   */\n      0x20\n        /* \"#utility.yul\":7518:7539   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7575:7576   */\n      0x02\n        /* \"#utility.yul\":7555:7573   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7548:7577   */\n      mstore\n      shl(0xf0, 0x5341)\n        /* \"#utility.yul\":7608:7610   */\n      0x40\n        /* \"#utility.yul\":7593:7611   */\n      dup3\n      add\n        /* \"#utility.yul\":7586:7618   */\n      mstore\n        /* \"#utility.yul\":7650:7652   */\n      0x60\n        /* \"#utility.yul\":7635:7653   */\n      add\n      swap1\n        /* \"#utility.yul\":7508:7659   */\n      jump\t// out\n        /* \"#utility.yul\":7664:8003   */\n    tag_63:\n        /* \"#utility.yul\":7866:7868   */\n      0x20\n        /* \"#utility.yul\":7848:7869   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7905:7907   */\n      0x0f\n        /* \"#utility.yul\":7885:7903   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7878:7908   */\n      mstore\n      shl(0x8a, 0x1b9bdd0818481d5b9a5d8cc81b999d)\n        /* \"#utility.yul\":7939:7941   */\n      0x40\n        /* \"#utility.yul\":7924:7942   */\n      dup3\n      add\n        /* \"#utility.yul\":7917:7962   */\n      mstore\n        /* \"#utility.yul\":7994:7996   */\n      0x60\n        /* \"#utility.yul\":7979:7997   */\n      add\n      swap1\n        /* \"#utility.yul\":7838:8003   */\n      jump\t// out\n        /* \"#utility.yul\":8008:8345   */\n    tag_124:\n        /* \"#utility.yul\":8210:8212   */\n      0x20\n        /* \"#utility.yul\":8192:8213   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8249:8251   */\n      0x0d\n        /* \"#utility.yul\":8229:8247   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8222:8252   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":8283:8285   */\n      0x40\n        /* \"#utility.yul\":8268:8286   */\n      dup3\n      add\n        /* \"#utility.yul\":8261:8304   */\n      mstore\n        /* \"#utility.yul\":8336:8338   */\n      0x60\n        /* \"#utility.yul\":8321:8339   */\n      add\n      swap1\n        /* \"#utility.yul\":8182:8345   */\n      jump\t// out\n        /* \"#utility.yul\":8350:8675   */\n    tag_186:\n        /* \"#utility.yul\":8552:8554   */\n      0x20\n        /* \"#utility.yul\":8534:8555   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8591:8592   */\n      0x02\n        /* \"#utility.yul\":8571:8589   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8564:8593   */\n      mstore\n      shl(0xf2, 0x14d5)\n        /* \"#utility.yul\":8624:8626   */\n      0x40\n        /* \"#utility.yul\":8609:8627   */\n      dup3\n      add\n        /* \"#utility.yul\":8602:8634   */\n      mstore\n        /* \"#utility.yul\":8666:8668   */\n      0x60\n        /* \"#utility.yul\":8651:8669   */\n      add\n      swap1\n        /* \"#utility.yul\":8524:8675   */\n      jump\t// out\n        /* \"#utility.yul\":8680:9006   */\n    tag_161:\n        /* \"#utility.yul\":8882:8884   */\n      0x20\n        /* \"#utility.yul\":8864:8885   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8921:8922   */\n      0x03\n        /* \"#utility.yul\":8901:8919   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8894:8923   */\n      mstore\n      shl(0xe9, 0x29aa23)\n        /* \"#utility.yul\":8954:8956   */\n      0x40\n        /* \"#utility.yul\":8939:8957   */\n      dup3\n      add\n        /* \"#utility.yul\":8932:8965   */\n      mstore\n        /* \"#utility.yul\":8997:8999   */\n      0x60\n        /* \"#utility.yul\":8982:9000   */\n      add\n      swap1\n        /* \"#utility.yul\":8854:9006   */\n      jump\t// out\n        /* \"#utility.yul\":9011:9585   */\n    tag_93:\n        /* \"#utility.yul\":9238:9251   */\n      dup2\n      mload\n        /* \"#utility.yul\":9220:9252   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9312:9316   */\n      0x20\n        /* \"#utility.yul\":9300:9317   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":9294:9318   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9290:9340   */\n      and\n        /* \"#utility.yul\":9268:9288   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9261:9341   */\n      mstore\n        /* \"#utility.yul\":9388:9392   */\n      0x40\n        /* \"#utility.yul\":9376:9393   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":9370:9394   */\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":9485:9506   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":9463:9483   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":9456:9507   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9567:9571   */\n      0x60\n        /* \"#utility.yul\":9555:9572   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":9549:9573   */\n      mload\n        /* \"#utility.yul\":9545:9578   */\n      and\n        /* \"#utility.yul\":9523:9543   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":9516:9579   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9207:9210   */\n      0x80\n        /* \"#utility.yul\":9192:9211   */\n      add\n      swap1\n        /* \"#utility.yul\":9174:9585   */\n      jump\t// out\n        /* \"#utility.yul\":9590:10150   */\n    tag_128:\n      0x00\n        /* \"#utility.yul\":9806:9809   */\n      0xa0\n        /* \"#utility.yul\":9795:9804   */\n      dup3\n        /* \"#utility.yul\":9791:9810   */\n      add\n        /* \"#utility.yul\":9783:9810   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:9849   */\n      dup3\n        /* \"#utility.yul\":9837:9850   */\n      mload\n        /* \"#utility.yul\":9826:9835   */\n      dup3\n        /* \"#utility.yul\":9819:9851   */\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":9911:9915   */\n      0x20\n        /* \"#utility.yul\":9903:9909   */\n      dup5\n        /* \"#utility.yul\":9899:9916   */\n      add\n        /* \"#utility.yul\":9893:9917   */\n      mload\n        /* \"#utility.yul\":9889:9954   */\n      and\n        /* \"#utility.yul\":9882:9886   */\n      0x20\n        /* \"#utility.yul\":9871:9880   */\n      dup4\n        /* \"#utility.yul\":9867:9887   */\n      add\n        /* \"#utility.yul\":9860:9955   */\n      mstore\n        /* \"#utility.yul\":10011:10015   */\n      0x40\n        /* \"#utility.yul\":10003:10009   */\n      dup4\n        /* \"#utility.yul\":9999:10016   */\n      add\n        /* \"#utility.yul\":9993:10017   */\n      mload\n        /* \"#utility.yul\":9986:9990   */\n      0x40\n        /* \"#utility.yul\":9975:9984   */\n      dup4\n        /* \"#utility.yul\":9971:9991   */\n      add\n        /* \"#utility.yul\":9964:10018   */\n      mstore\n        /* \"#utility.yul\":10074:10078   */\n      0x60\n        /* \"#utility.yul\":10066:10072   */\n      dup4\n        /* \"#utility.yul\":10062:10079   */\n      add\n        /* \"#utility.yul\":10056:10080   */\n      mload\n        /* \"#utility.yul\":10049:10053   */\n      0x60\n        /* \"#utility.yul\":10038:10047   */\n      dup4\n        /* \"#utility.yul\":10034:10054   */\n      add\n        /* \"#utility.yul\":10027:10081   */\n      mstore\n        /* \"#utility.yul\":10137:10141   */\n      0x80\n        /* \"#utility.yul\":10129:10135   */\n      dup4\n        /* \"#utility.yul\":10125:10142   */\n      add\n        /* \"#utility.yul\":10119:10143   */\n      mload\n        /* \"#utility.yul\":10112:10116   */\n      0x80\n        /* \"#utility.yul\":10101:10110   */\n      dup4\n        /* \"#utility.yul\":10097:10117   */\n      add\n        /* \"#utility.yul\":10090:10144   */\n      mstore\n        /* \"#utility.yul\":9773:10150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10155:10737   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":10371:10374   */\n      0xc0\n        /* \"#utility.yul\":10360:10369   */\n      dup3\n        /* \"#utility.yul\":10356:10375   */\n      add\n        /* \"#utility.yul\":10348:10375   */\n      swap1\n      pop\n        /* \"#utility.yul\":10408:10414   */\n      dup3\n        /* \"#utility.yul\":10402:10415   */\n      mload\n        /* \"#utility.yul\":10391:10400   */\n      dup3\n        /* \"#utility.yul\":10384:10416   */\n      mstore\n        /* \"#utility.yul\":10472:10476   */\n      0x20\n        /* \"#utility.yul\":10464:10470   */\n      dup4\n        /* \"#utility.yul\":10460:10477   */\n      add\n        /* \"#utility.yul\":10454:10478   */\n      mload\n        /* \"#utility.yul\":10447:10451   */\n      0x20\n        /* \"#utility.yul\":10436:10445   */\n      dup4\n        /* \"#utility.yul\":10432:10452   */\n      add\n        /* \"#utility.yul\":10425:10479   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x40\n        /* \"#utility.yul\":10527:10533   */\n      dup4\n        /* \"#utility.yul\":10523:10540   */\n      add\n        /* \"#utility.yul\":10517:10541   */\n      mload\n        /* \"#utility.yul\":10510:10514   */\n      0x40\n        /* \"#utility.yul\":10499:10508   */\n      dup4\n        /* \"#utility.yul\":10495:10515   */\n      add\n        /* \"#utility.yul\":10488:10542   */\n      mstore\n        /* \"#utility.yul\":10598:10602   */\n      0x60\n        /* \"#utility.yul\":10590:10596   */\n      dup4\n        /* \"#utility.yul\":10586:10603   */\n      add\n        /* \"#utility.yul\":10580:10604   */\n      mload\n        /* \"#utility.yul\":10573:10577   */\n      0x60\n        /* \"#utility.yul\":10562:10571   */\n      dup4\n        /* \"#utility.yul\":10558:10578   */\n      add\n        /* \"#utility.yul\":10551:10605   */\n      mstore\n        /* \"#utility.yul\":10661:10665   */\n      0x80\n        /* \"#utility.yul\":10653:10659   */\n      dup4\n        /* \"#utility.yul\":10649:10666   */\n      add\n        /* \"#utility.yul\":10643:10667   */\n      mload\n        /* \"#utility.yul\":10636:10640   */\n      0x80\n        /* \"#utility.yul\":10625:10634   */\n      dup4\n        /* \"#utility.yul\":10621:10641   */\n      add\n        /* \"#utility.yul\":10614:10668   */\n      mstore\n        /* \"#utility.yul\":10724:10728   */\n      0xa0\n        /* \"#utility.yul\":10716:10722   */\n      dup4\n        /* \"#utility.yul\":10712:10729   */\n      add\n        /* \"#utility.yul\":10706:10730   */\n      mload\n        /* \"#utility.yul\":10699:10703   */\n      0xa0\n        /* \"#utility.yul\":10688:10697   */\n      dup4\n        /* \"#utility.yul\":10684:10704   */\n      add\n        /* \"#utility.yul\":10677:10731   */\n      mstore\n        /* \"#utility.yul\":10338:10737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10742:11976   */\n    tag_74:\n      0x00\n        /* \"#utility.yul\":10932:10935   */\n      0x0160\n        /* \"#utility.yul\":10921:10930   */\n      dup3\n        /* \"#utility.yul\":10917:10936   */\n      add\n        /* \"#utility.yul\":10909:10936   */\n      swap1\n      pop\n        /* \"#utility.yul\":10945:10991   */\n      tag_271\n        /* \"#utility.yul\":10981:10990   */\n      dup3\n        /* \"#utility.yul\":10972:10978   */\n      dup5\n        /* \"#utility.yul\":10966:10979   */\n      mload\n        /* \"#utility.yul\":10945:10991   */\n      tag_245\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11038:11042   */\n      0x20\n        /* \"#utility.yul\":11030:11036   */\n      dup4\n        /* \"#utility.yul\":11026:11043   */\n      add\n        /* \"#utility.yul\":11020:11044   */\n      mload\n        /* \"#utility.yul\":11053:11109   */\n      tag_272\n        /* \"#utility.yul\":11103:11107   */\n      0x20\n        /* \"#utility.yul\":11092:11101   */\n      dup5\n        /* \"#utility.yul\":11088:11108   */\n      add\n        /* \"#utility.yul\":11074:11086   */\n      dup3\n        /* \"#utility.yul\":11053:11109   */\n      tag_245\n      jump\t// in\n    tag_272:\n      pop\n        /* \"#utility.yul\":11158:11162   */\n      0x40\n        /* \"#utility.yul\":11150:11156   */\n      dup4\n        /* \"#utility.yul\":11146:11163   */\n      add\n        /* \"#utility.yul\":11140:11164   */\n      mload\n        /* \"#utility.yul\":11173:11230   */\n      tag_273\n        /* \"#utility.yul\":11224:11228   */\n      0x40\n        /* \"#utility.yul\":11213:11222   */\n      dup5\n        /* \"#utility.yul\":11209:11229   */\n      add\n        /* \"#utility.yul\":11193:11207   */\n      dup3\n        /* \"#utility.yul\":11173:11230   */\n      tag_249\n      jump\t// in\n    tag_273:\n      pop\n        /* \"#utility.yul\":11279:11283   */\n      0x60\n        /* \"#utility.yul\":11271:11277   */\n      dup4\n        /* \"#utility.yul\":11267:11284   */\n      add\n        /* \"#utility.yul\":11261:11285   */\n      mload\n        /* \"#utility.yul\":11294:11350   */\n      tag_274\n        /* \"#utility.yul\":11344:11348   */\n      0x60\n        /* \"#utility.yul\":11333:11342   */\n      dup5\n        /* \"#utility.yul\":11329:11349   */\n      add\n        /* \"#utility.yul\":11313:11327   */\n      dup3\n        /* \"#utility.yul\":11294:11350   */\n      tag_247\n      jump\t// in\n    tag_274:\n      pop\n        /* \"#utility.yul\":11399:11403   */\n      0x80\n        /* \"#utility.yul\":11391:11397   */\n      dup4\n        /* \"#utility.yul\":11387:11404   */\n      add\n        /* \"#utility.yul\":11381:11405   */\n      mload\n        /* \"#utility.yul\":11414:11470   */\n      tag_275\n        /* \"#utility.yul\":11464:11468   */\n      0x80\n        /* \"#utility.yul\":11453:11462   */\n      dup5\n        /* \"#utility.yul\":11449:11469   */\n      add\n        /* \"#utility.yul\":11433:11447   */\n      dup3\n        /* \"#utility.yul\":11414:11470   */\n      tag_247\n      jump\t// in\n    tag_275:\n      pop\n        /* \"#utility.yul\":11526:11530   */\n      0xa0\n        /* \"#utility.yul\":11518:11524   */\n      dup4\n        /* \"#utility.yul\":11514:11531   */\n      add\n        /* \"#utility.yul\":11508:11532   */\n      mload\n        /* \"#utility.yul\":11501:11505   */\n      0xa0\n        /* \"#utility.yul\":11490:11499   */\n      dup4\n        /* \"#utility.yul\":11486:11506   */\n      add\n        /* \"#utility.yul\":11479:11533   */\n      mstore\n        /* \"#utility.yul\":11589:11593   */\n      0xc0\n        /* \"#utility.yul\":11581:11587   */\n      dup4\n        /* \"#utility.yul\":11577:11594   */\n      add\n        /* \"#utility.yul\":11571:11595   */\n      mload\n        /* \"#utility.yul\":11564:11568   */\n      0xc0\n        /* \"#utility.yul\":11553:11562   */\n      dup4\n        /* \"#utility.yul\":11549:11569   */\n      add\n        /* \"#utility.yul\":11542:11596   */\n      mstore\n        /* \"#utility.yul\":11652:11656   */\n      0xe0\n        /* \"#utility.yul\":11644:11650   */\n      dup4\n        /* \"#utility.yul\":11640:11657   */\n      add\n        /* \"#utility.yul\":11634:11658   */\n      mload\n        /* \"#utility.yul\":11627:11631   */\n      0xe0\n        /* \"#utility.yul\":11616:11625   */\n      dup4\n        /* \"#utility.yul\":11612:11632   */\n      add\n        /* \"#utility.yul\":11605:11659   */\n      mstore\n        /* \"#utility.yul\":11678:11684   */\n      0x0100\n        /* \"#utility.yul\":11738:11740   */\n      dup1\n        /* \"#utility.yul\":11730:11736   */\n      dup5\n        /* \"#utility.yul\":11726:11741   */\n      add\n        /* \"#utility.yul\":11720:11742   */\n      mload\n        /* \"#utility.yul\":11715:11717   */\n      dup2\n        /* \"#utility.yul\":11704:11713   */\n      dup5\n        /* \"#utility.yul\":11700:11718   */\n      add\n        /* \"#utility.yul\":11693:11743   */\n      mstore\n      pop\n        /* \"#utility.yul\":11762:11768   */\n      0x0120\n        /* \"#utility.yul\":11817:11819   */\n      dup1\n        /* \"#utility.yul\":11809:11815   */\n      dup5\n        /* \"#utility.yul\":11805:11820   */\n      add\n        /* \"#utility.yul\":11799:11821   */\n      mload\n        /* \"#utility.yul\":11830:11886   */\n      tag_276\n        /* \"#utility.yul\":11882:11884   */\n      dup3\n        /* \"#utility.yul\":11871:11880   */\n      dup6\n        /* \"#utility.yul\":11867:11885   */\n      add\n        /* \"#utility.yul\":11851:11865   */\n      dup3\n        /* \"#utility.yul\":11830:11886   */\n      tag_245\n      jump\t// in\n    tag_276:\n      pop\n      pop\n        /* \"#utility.yul\":11905:11911   */\n      0x0140\n        /* \"#utility.yul\":11953:11968   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":11947:11969   */\n      mload\n        /* \"#utility.yul\":11927:11945   */\n      swap2\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":11920:11970   */\n      mstore\n        /* \"#utility.yul\":10899:11976   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11981:12341   */\n    tag_39:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":12201:12248   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":12183:12249   */\n      dup4\n      mstore\n        /* \"#utility.yul\":12280:12282   */\n      0x20\n        /* \"#utility.yul\":12265:12283   */\n      dup4\n      add\n        /* \"#utility.yul\":12258:12292   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12323:12325   */\n      0x40\n        /* \"#utility.yul\":12308:12326   */\n      dup3\n      add\n        /* \"#utility.yul\":12301:12335   */\n      mstore\n        /* \"#utility.yul\":12171:12173   */\n      0x60\n        /* \"#utility.yul\":12156:12174   */\n      add\n      swap1\n        /* \"#utility.yul\":12138:12341   */\n      jump\t// out\n        /* \"#utility.yul\":12346:12536   */\n    tag_17:\n        /* \"#utility.yul\":12520:12528   */\n      0xffffff\n        /* \"#utility.yul\":12508:12529   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":12490:12530   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12478:12480   */\n      0x20\n        /* \"#utility.yul\":12463:12481   */\n      add\n      swap1\n        /* \"#utility.yul\":12445:12536   */\n      jump\t// out\n        /* \"#utility.yul\":12541:12718   */\n    tag_141:\n        /* \"#utility.yul\":12687:12712   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":12675:12677   */\n      0x20\n        /* \"#utility.yul\":12660:12678   */\n      add\n      swap1\n        /* \"#utility.yul\":12642:12718   */\n      jump\t// out\n        /* \"#utility.yul\":12723:13155   */\n    tag_27:\n        /* \"#utility.yul\":12954:12979   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":13015:13062   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":13010:13012   */\n      0x20\n        /* \"#utility.yul\":12995:13013   */\n      dup5\n      add\n        /* \"#utility.yul\":12988:13063   */\n      mstore\n        /* \"#utility.yul\":13094:13096   */\n      0x40\n        /* \"#utility.yul\":13079:13097   */\n      dup4\n      add\n        /* \"#utility.yul\":13072:13106   */\n      mstore\n        /* \"#utility.yul\":13137:13139   */\n      0x60\n        /* \"#utility.yul\":13122:13140   */\n      dup3\n      add\n        /* \"#utility.yul\":13115:13149   */\n      mstore\n        /* \"#utility.yul\":12941:12944   */\n      0x80\n        /* \"#utility.yul\":12926:12945   */\n      add\n      swap1\n        /* \"#utility.yul\":12908:13155   */\n      jump\t// out\n        /* \"#utility.yul\":13160:13408   */\n    tag_33:\n        /* \"#utility.yul\":13334:13359   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":13390:13392   */\n      0x20\n        /* \"#utility.yul\":13375:13393   */\n      dup3\n      add\n        /* \"#utility.yul\":13368:13402   */\n      mstore\n        /* \"#utility.yul\":13322:13324   */\n      0x40\n        /* \"#utility.yul\":13307:13325   */\n      add\n      swap1\n        /* \"#utility.yul\":13289:13408   */\n      jump\t// out\n        /* \"#utility.yul\":13413:13629   */\n    tag_126:\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":13540:13542   */\n      dup1\n        /* \"#utility.yul\":13537:13538   */\n      dup5\n        /* \"#utility.yul\":13533:13543   */\n      and\n        /* \"#utility.yul\":13562:13565   */\n      dup1\n        /* \"#utility.yul\":13552:13554   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":13569:13587   */\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":13607:13617   */\n      swap3\n      and\n        /* \"#utility.yul\":13603:13623   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":13459:13629   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13634:13754   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":13700:13701   */\n      dup3\n        /* \"#utility.yul\":13690:13692   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":13705:13723   */\n      tag_288\n      tag_285\n      jump\t// in\n    tag_288:\n      pop\n        /* \"#utility.yul\":13739:13748   */\n      div\n      swap1\n        /* \"#utility.yul\":13680:13754   */\n      jump\t// out\n        /* \"#utility.yul\":13759:13927   */\n    tag_190:\n      0x00\n        /* \"#utility.yul\":13865:13866   */\n      dup2\n        /* \"#utility.yul\":13861:13862   */\n      0x00\n        /* \"#utility.yul\":13857:13863   */\n      not\n        /* \"#utility.yul\":13853:13867   */\n      div\n        /* \"#utility.yul\":13850:13851   */\n      dup4\n        /* \"#utility.yul\":13847:13868   */\n      gt\n        /* \"#utility.yul\":13842:13843   */\n      dup3\n        /* \"#utility.yul\":13835:13844   */\n      iszero\n        /* \"#utility.yul\":13828:13845   */\n      iszero\n        /* \"#utility.yul\":13824:13869   */\n      and\n        /* \"#utility.yul\":13821:13823   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":13872:13890   */\n      tag_291\n      tag_292\n      jump\t// in\n    tag_291:\n      pop\n        /* \"#utility.yul\":13912:13921   */\n      mul\n      swap1\n        /* \"#utility.yul\":13811:13927   */\n      jump\t// out\n        /* \"#utility.yul\":13932:14057   */\n    tag_84:\n      0x00\n        /* \"#utility.yul\":14000:14001   */\n      dup3\n        /* \"#utility.yul\":13997:13998   */\n      dup3\n        /* \"#utility.yul\":13994:14002   */\n      lt\n        /* \"#utility.yul\":13991:13993   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":14005:14023   */\n      tag_295\n      tag_292\n      jump\t// in\n    tag_295:\n      pop\n        /* \"#utility.yul\":14042:14051   */\n      sub\n      swap1\n        /* \"#utility.yul\":13981:14057   */\n      jump\t// out\n        /* \"#utility.yul\":14062:14189   */\n    tag_292:\n        /* \"#utility.yul\":14123:14133   */\n      0x4e487b71\n        /* \"#utility.yul\":14118:14121   */\n      0xe0\n        /* \"#utility.yul\":14114:14134   */\n      shl\n        /* \"#utility.yul\":14111:14112   */\n      0x00\n        /* \"#utility.yul\":14104:14135   */\n      mstore\n        /* \"#utility.yul\":14154:14158   */\n      0x11\n        /* \"#utility.yul\":14151:14152   */\n      0x04\n        /* \"#utility.yul\":14144:14159   */\n      mstore\n        /* \"#utility.yul\":14178:14182   */\n      0x24\n        /* \"#utility.yul\":14175:14176   */\n      0x00\n        /* \"#utility.yul\":14168:14183   */\n      revert\n        /* \"#utility.yul\":14194:14321   */\n    tag_285:\n        /* \"#utility.yul\":14255:14265   */\n      0x4e487b71\n        /* \"#utility.yul\":14250:14253   */\n      0xe0\n        /* \"#utility.yul\":14246:14266   */\n      shl\n        /* \"#utility.yul\":14243:14244   */\n      0x00\n        /* \"#utility.yul\":14236:14267   */\n      mstore\n        /* \"#utility.yul\":14286:14290   */\n      0x12\n        /* \"#utility.yul\":14283:14284   */\n      0x04\n        /* \"#utility.yul\":14276:14291   */\n      mstore\n        /* \"#utility.yul\":14310:14314   */\n      0x24\n        /* \"#utility.yul\":14307:14308   */\n      0x00\n        /* \"#utility.yul\":14300:14315   */\n      revert\n        /* \"#utility.yul\":14326:14459   */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14403:14434   */\n      dup2\n      and\n        /* \"#utility.yul\":14393:14435   */\n      dup2\n      eq\n        /* \"#utility.yul\":14383:14385   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":14449:14450   */\n      0x00\n        /* \"#utility.yul\":14446:14447   */\n      dup1\n        /* \"#utility.yul\":14439:14451   */\n      revert\n        /* \"#utility.yul\":14383:14385   */\n    tag_299:\n        /* \"#utility.yul\":14373:14459   */\n      pop\n      jump\t// out\n    stop\n    data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e 000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88\n\n    auxdata: 0xa2646970667358221220225e377ebefa2947160d5469786e2bee6a37935767bf201d20b457a848b0d65964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506115a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638187b4c5116100665780638187b4c51461013c57806389a302711461014f578063b02c43d014610164578063b44a272214610187578063e0bab4c41461018f5761009e565b8063089fe6aa146100a3578063150b7a02146100c1578063306d9c61146100e157806346ce96dd146100f9578063617d6d6e1461011a575b600080fd5b6100ab610197565b6040516100b8919061144f565b60405180910390f35b6100d46100cf366004610eac565b61019d565b6040516100b891906111fc565b6100e96101f1565b6040516100b89493929190611468565b61010c610107366004610fa1565b610482565b6040516100b892919061148c565b61012d610128366004611017565b610544565b6040516100b89392919061142e565b61010c61014a366004610fa1565b6106f5565b6101576108f4565b6040516100b89190611177565b610177610172366004610fa1565b61090c565b6040516100b894939291906111af565b61015761094c565b61015761095e565b6101f481565b60003360008051602061154f833981519152146101d55760405162461bcd60e51b81526004016101cc9061122d565b60405180910390fd5b6101df8685610976565b50630a85bd0160e11b95945050505050565b60008080806305f5e10063060438e0610220733db4b7da67dd5af61cb9b3c70501b1bdb24b2c22333085610b23565b61024073da10009cbd5d07dd0cecc66161fc93d7c9000da1333084610b23565b61026d733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2260008051602061154f83398151915284610c1b565b61029a73da10009cbd5d07dd0cecc66161fc93d7c9000da160008051602061154f83398151915283610c1b565b6040805161016081018252733db4b7da67dd5af61cb9b3c70501b1bdb24b2c22815273da10009cbd5d07dd0cecc66161fc93d7c9000da160208201526101f481830152610419196060820152610410608082015260a0810184905260c08101839052600060e0820181905261010082015230610120820152426101408201529051634418b22b60e11b815260008051602061154f83398151915290638831645690610349908490600401611380565b608060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610fb9565b929950909750955093506103af3388610976565b82851015610414576103e5733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2260008051602061154f8339815191526000610c1b565b60006103f186856114f3565b9050610412733db4b7da67dd5af61cb9b3c70501b1bdb24b2c223383610d10565b505b818410156104795761044a73da10009cbd5d07dd0cecc66161fc93d7c9000da160008051602061154f8339815191526000610c1b565b600061045685846114f3565b905061047773da10009cbd5d07dd0cecc66161fc93d7c9000da13383610d10565b505b50505090919293565b604080516080810182528281523060208201526001600160801b038183018190526060820152905163fc6f786560e01b8152600091829160008051602061154f8339815191529063fc6f7865906104dd9084906004016112b6565b6040805180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610ff4565b909350915061053e848484610dfe565b50915091565b60008381526020819052604081206002810154600390910154829182916001600160a01b03918216911661057a8233308a610b23565b61058681333089610b23565b61059f8260008051602061154f83398151915289610c1b565b6105b88160008051602061154f83398151915288610c1b565b6040805160c0810182528981526020810189905280820188905260006060820181905260808201524260a0820152905163219f5d1760e01b815260008051602061154f8339815191529063219f5d179061061690849060040161133c565b606060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610f6d565b91975095509350878510156106ac576106918360008051602061154f8339815191526000610c1b565b600061069d868a6114f3565b90506106aa843383610d10565b505b868410156106e9576106ce8260008051602061154f8339815191526000610c1b565b60006106da85896114f3565b90506106e7833383610d10565b505b50505093509350939050565b60008181526020819052604081205481906001600160a01b0316331461072d5760405162461bcd60e51b81526004016101cc90611256565b6000838152602081905260408120600101546001600160801b03169061075460028361149a565b905060006040518060a00160405280878152602001836001600160801b03168152602001600081526020016000815260200142815250905060006040518060800160405280888152602001306001600160a01b031681526020016001600160801b03801681526020016001600160801b038016815250905060008051602061154f8339815191526001600160a01b0316630c49ccbe836040518263ffffffff1660e01b815260040161080691906112f9565b6040805180830381600087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610ff4565b60405163fc6f786560e01b8152919750955060008051602061154f8339815191529063fc6f78659061088d9084906004016112b6565b6040805180830381600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190610ff4565b50506108eb878787610dfe565b50505050915091565b733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2281565b60006020819052908152604090208054600182015460028301546003909301546001600160a01b03928316936001600160801b0390921692918216911684565b60008051602061154f83398151915281565b73da10009cbd5d07dd0cecc66161fc93d7c9000da181565b60405163133f757160e31b81526000908190819060008051602061154f833981519152906399fbab88906109ae90879060040161145f565b6101806040518083038186803b1580156109c757600080fd5b505afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611042565b5050505097505050509450945050506040518060800160405280866001600160a01b03168152602001826001600160801b03168152602001846001600160a01b03168152602001836001600160a01b031681525060008086815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050505050505050565b600080856001600160a01b03166323b872dd60e01b868686604051602401610b4d9392919061118b565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b8b919061113e565b6000604051808303816000865af19150503d8060008114610bc8576040519150601f19603f3d011682016040523d82523d6000602084013e610bcd565b606091505b5091509150818015610bf7575080511580610bf7575080806020019051810190610bf79190610f46565b610c135760405162461bcd60e51b81526004016101cc90611299565b505050505050565b600080846001600160a01b031663095ea7b360e01b8585604051602401610c439291906111e3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610c81919061113e565b6000604051808303816000865af19150503d8060008114610cbe576040519150601f19603f3d011682016040523d82523d6000602084013e610cc3565b606091505b5091509150818015610ced575080511580610ced575080806020019051810190610ced9190610f46565b610d095760405162461bcd60e51b81526004016101cc90611211565b5050505050565b600080846001600160a01b031663a9059cbb60e01b8585604051602401610d389291906111e3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610d76919061113e565b6000604051808303816000865af19150503d8060008114610db3576040519150601f19603f3d011682016040523d82523d6000602084013e610db8565b606091505b5091509150818015610de2575080511580610de2575080806020019051810190610de29190610f46565b610d095760405162461bcd60e51b81526004016101cc9061127d565b6000838152602081905260409020805460028201546003909201546001600160a01b039182169282169116610e4c82846103e8610e3d896103de6114d4565b610e4791906114c0565b610d10565b610c1381846103e8610e3d886103de6114d4565b8051610e6b81611536565b919050565b8051600281900b8114610e6b57600080fd5b80516001600160801b0381168114610e6b57600080fd5b805162ffffff81168114610e6b57600080fd5b600080600080600060808688031215610ec3578081fd5b8535610ece81611536565b94506020860135610ede81611536565b935060408601359250606086013567ffffffffffffffff80821115610f01578283fd5b818801915088601f830112610f14578283fd5b813581811115610f22578384fd5b896020828501011115610f33578384fd5b9699959850939650602001949392505050565b600060208284031215610f57578081fd5b81518015158114610f66578182fd5b9392505050565b600080600060608486031215610f81578283fd5b610f8a84610e82565b925060208401519150604084015190509250925092565b600060208284031215610fb2578081fd5b5035919050565b60008060008060808587031215610fce578384fd5b84519350610fde60208601610e82565b6040860151606090960151949790965092505050565b60008060408385031215611006578182fd5b505080516020909101519092909150565b60008060006060848603121561102b578283fd5b505081359360208301359350604090920135919050565b6000806000806000806000806000806000806101808d8f031215611064578687fd5b8c516bffffffffffffffffffffffff8116811461107f578788fd5b9b5061108d60208e01610e60565b9a5061109b60408e01610e60565b99506110a960608e01610e60565b98506110b760808e01610e99565b97506110c560a08e01610e70565b96506110d360c08e01610e70565b95506110e160e08e01610e82565b94506101008d015193506101208d015192506111006101408e01610e82565b915061110f6101608e01610e82565b90509295989b509295989b509295989b565b6001600160a01b03169052565b60020b9052565b62ffffff169052565b60008251815b8181101561115e5760208186018101518583015201611144565b8181111561116c5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681526001600160801b039390931660208401529083166040830152909116606082015260800190565b6001600160a01b03929092168252602082015260400190565b6001600160e01b031991909116815260200190565b602080825260029082015261534160f01b604082015260600190565b6020808252600f908201526e1b9bdd0818481d5b9a5d8cc81b999d608a1b604082015260600190565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b60208082526002908201526114d560f21b604082015260600190565b60208082526003908201526229aa2360e91b604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b600060a082019050825182526001600160801b03602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600061016082019050611394828451611121565b60208301516113a66020840182611121565b5060408301516113b96040840182611135565b5060608301516113cc606084018261112e565b5060808301516113df608084018261112e565b5060a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015161141d82850182611121565b505061014092830151919092015290565b6001600160801b039390931683526020830191909152604082015260600190565b62ffffff91909116815260200190565b90815260200190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b60006001600160801b03808416806114b4576114b4611520565b92169190910492915050565b6000826114cf576114cf611520565b500490565b60008160001904831182151516156114ee576114ee61150a565b500290565b6000828210156115055761150561150a565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461154b57600080fd5b5056fe000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88a2646970667358221220225e377ebefa2947160d5469786e2bee6a37935767bf201d20b457a848b0d65964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8187B4C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8187B4C5 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x18F JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x306D9C61 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x46CE96DD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x617D6D6E EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP3 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x10C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x157 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x157 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DF DUP7 DUP6 PUSH2 0x976 JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH4 0x5F5E100 PUSH4 0x60438E0 PUSH2 0x220 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 CALLER ADDRESS DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x240 PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 CALLER ADDRESS DUP5 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x26D PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x29A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x160 DUP2 ADD DUP3 MSTORE PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 MSTORE PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1F4 DUP2 DUP4 ADD MSTORE PUSH2 0x419 NOT PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x410 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE ADDRESS PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x4418B22B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x88316456 SWAP1 PUSH2 0x349 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x3AF CALLER DUP9 PUSH2 0x976 JUMP JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x414 JUMPI PUSH2 0x3E5 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP7 DUP6 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x412 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP6 DUP5 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x477 PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x4DD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x53E DUP5 DUP5 DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x57A DUP3 CALLER ADDRESS DUP11 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x586 DUP2 CALLER ADDRESS DUP10 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x59F DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x5B8 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH2 0x616 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x133C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP6 LT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x691 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69D DUP7 DUP11 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6AA DUP5 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6CE DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA DUP6 DUP10 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E7 DUP4 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x754 PUSH1 0x2 DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC49CCBE DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x833 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP8 POP SWAP6 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x88D SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST POP POP PUSH2 0x8EB DUP8 DUP8 DUP8 PUSH2 0xDFE JUMP JUMPDEST POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH2 0x9AE SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x145F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xBF7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xBF7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC43 SWAP3 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCED JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xCED JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1211 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD38 SWAP3 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDE2 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xDE2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 AND PUSH2 0xE4C DUP3 DUP5 PUSH2 0x3E8 PUSH2 0xE3D DUP10 PUSH2 0x3DE PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0xC13 DUP2 DUP5 PUSH2 0x3E8 PUSH2 0xE3D DUP9 PUSH2 0x3DE PUSH2 0x14D4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE6B DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xECE DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xEDE DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF01 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF14 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF22 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF33 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF57 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF66 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF81 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xF8A DUP5 PUSH2 0xE82 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFCE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH2 0xFDE PUSH1 0x20 DUP7 ADD PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1006 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x102B JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1064 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x107F JUMPI DUP8 DUP9 REVERT JUMPDEST SWAP12 POP PUSH2 0x108D PUSH1 0x20 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP11 POP PUSH2 0x109B PUSH1 0x40 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP10 POP PUSH2 0x10A9 PUSH1 0x60 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP9 POP PUSH2 0x10B7 PUSH1 0x80 DUP15 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP8 POP PUSH2 0x10C5 PUSH1 0xA0 DUP15 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP7 POP PUSH2 0x10D3 PUSH1 0xC0 DUP15 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP6 POP PUSH2 0x10E1 PUSH1 0xE0 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x1100 PUSH2 0x140 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP2 POP PUSH2 0x110F PUSH2 0x160 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x115E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x116C JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1B9BDD0818481D5B9A5D8CC81B999D PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1394 DUP3 DUP5 MLOAD PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x13A6 PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x13B9 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x1135 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x13CC PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x112E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x13DF PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x112E JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x141D DUP3 DUP6 ADD DUP3 PUSH2 0x1121 JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x14B4 JUMPI PUSH2 0x14B4 PUSH2 0x1520 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14CF JUMPI PUSH2 0x14CF PUSH2 0x1520 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14EE PUSH2 0x150A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1505 JUMPI PUSH2 0x1505 PUSH2 0x150A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x154B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xC3 PUSH5 0x42B4A4522E DUP8 SGT SWAP10 0xCD PUSH18 0x7ABDD847AB11FE88A2646970667358221220 0x22 0x5E CALLDATACOPY PUSH31 0xBEFA2947160D5469786E2BEE6A37935767BF201D20B457A848B0D65964736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "341:10367:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14461:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:6",
														"type": ""
													}
												],
												"src": "14:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:106:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "231:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "246:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "240:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "275:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "293:1:6",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "296:5:6"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "282:10:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "282:20:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "272:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:31:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "265:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:39:6"
															},
															"nodeType": "YulIf",
															"src": "262:2:6"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "200:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "211:5:6",
														"type": ""
													}
												],
												"src": "161:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "394:132:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "404:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "413:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "404:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "504:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "513:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "516:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "506:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "448:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "459:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "466:34:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "455:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "455:46:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "445:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "445:57:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:65:6"
															},
															"nodeType": "YulIf",
															"src": "435:2:6"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "373:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "384:5:6",
														"type": ""
													}
												],
												"src": "332:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "592:106:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "602:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "602:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "676:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "685:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "688:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "678:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "678:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "678:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "657:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "664:8:6",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "653:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "643:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "643:31:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:39:6"
															},
															"nodeType": "YulIf",
															"src": "633:2:6"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "571:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "582:5:6",
														"type": ""
													}
												],
												"src": "531:167:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:850:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "890:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "899:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "907:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "892:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "892:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "892:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "864:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "873:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "860:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "885:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:33:6"
															},
															"nodeType": "YulIf",
															"src": "853:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "925:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "951:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "929:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "997:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "970:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1012:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1022:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1012:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1036:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1068:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1079:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1051:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1040:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1119:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1092:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1136:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1146:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1189:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1200:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1213:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1244:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1255:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1240:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1227:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1217:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1268:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1278:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1272:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1332:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1340:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1325:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1325:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1325:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:14:6"
															},
															"nodeType": "YulIf",
															"src": "1305:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1358:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1362:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1438:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1447:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1455:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1440:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1417:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1421:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1413:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1413:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1428:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:35:6"
															},
															"nodeType": "YulIf",
															"src": "1399:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1473:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1500:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1487:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1477:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1530:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1539:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1547:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1532:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1518:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1526:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1515:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:14:6"
															},
															"nodeType": "YulIf",
															"src": "1512:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1606:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1615:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1608:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1579:2:6"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1583:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1575:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1575:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1592:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1597:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1568:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:37:6"
															},
															"nodeType": "YulIf",
															"src": "1565:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1641:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1655:2:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1651:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:11:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:16:6",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1681:6:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "808:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "824:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "832:6:6",
														"type": ""
													}
												],
												"src": "703:990:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1776:219:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1822:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1831:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1839:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1806:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1793:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1793:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1789:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:32:6"
															},
															"nodeType": "YulIf",
															"src": "1786:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1870:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1861:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1948:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1956:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1941:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1941:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1941:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1908:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1929:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1922:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1922:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1915:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1915:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1905:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:40:6"
															},
															"nodeType": "YulIf",
															"src": "1895:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1974:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1984:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1974:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1742:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1753:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1765:6:6",
														"type": ""
													}
												],
												"src": "1698:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:227:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2161:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2170:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2178:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2163:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2163:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2163:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2136:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2145:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2132:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2157:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2128:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:32:6"
															},
															"nodeType": "YulIf",
															"src": "2125:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2196:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2206:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:42:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2257:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2277:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2288:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2273:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2267:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:25:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2301:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2311:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2096:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2104:6:6",
														"type": ""
													}
												],
												"src": "2000:342:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2417:120:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2463:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2472:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2480:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2465:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2465:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2465:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2438:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2447:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2434:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2434:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2430:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:32:6"
															},
															"nodeType": "YulIf",
															"src": "2427:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2498:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2521:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2508:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2383:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2394:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2406:6:6",
														"type": ""
													}
												],
												"src": "2347:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2674:272:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2721:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2730:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2738:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2723:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2695:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2704:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2691:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:33:6"
															},
															"nodeType": "YulIf",
															"src": "2684:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2756:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2772:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2766:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2791:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2837:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2801:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:51:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2881:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2877:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2877:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2871:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2905:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2925:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2936:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2921:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2915:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:25:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2616:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2627:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2639:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2647:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2655:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2663:6:6",
														"type": ""
													}
												],
												"src": "2542:404:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3049:157:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3095:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3104:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3112:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3097:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3097:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3097:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3070:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:32:6"
															},
															"nodeType": "YulIf",
															"src": "3059:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3130:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3146:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3140:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3165:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3185:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3196:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3181:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3181:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3175:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:25:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3007:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3018:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3030:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3038:6:6",
														"type": ""
													}
												],
												"src": "2951:255:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3315:222:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3361:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3370:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3378:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3363:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3363:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3363:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3336:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3345:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3332:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:32:6"
															},
															"nodeType": "YulIf",
															"src": "3325:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3419:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3406:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3438:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3465:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3461:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3448:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3489:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3499:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3489:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3265:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3276:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3288:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3296:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3304:6:6",
														"type": ""
													}
												],
												"src": "3211:326:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3806:960:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "3862:6:6"
																				},
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "3870:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:3:6",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:33:6"
															},
															"nodeType": "YulIf",
															"src": "3816:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3907:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3892:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "3996:6:6"
																				},
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "4004:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3989:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3989:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3989:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3939:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3950:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3957:26:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3946:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3946:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3936:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3936:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:57:6"
															},
															"nodeType": "YulIf",
															"src": "3926:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4022:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4032:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4046:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4092:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4103:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4056:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:51:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4116:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4162:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4173:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4158:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4126:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:51:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4186:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4232:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4243:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4196:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:51:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4256:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4312:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4266:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:51:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4326:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4370:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4381:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4366:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4336:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:50:6"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4326:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4395:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4439:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4450:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4435:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4435:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4405:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:50:6"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4464:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4521:3:6",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4506:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4474:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:52:6"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4535:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4555:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4566:3:6",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4551:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4545:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:26:6"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4580:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4611:3:6",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:26:6"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4625:63:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4672:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4683:3:6",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4668:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4636:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:52:6"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "4625:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4697:63:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4744:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:3:6",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4740:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4708:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:52:6"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nodeType": "YulIdentifier",
																	"src": "4697:7:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3682:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3693:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3705:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3713:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3721:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3729:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3737:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3745:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3753:6:6",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3761:6:6",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "3769:6:6",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "3777:6:6",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "3785:7:6",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "3794:7:6",
														"type": ""
													}
												],
												"src": "3542:1224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4834:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4843:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4858:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4863:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4854:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4854:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4867:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4850:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4850:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:31:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:44:6"
														}
													]
												},
												"name": "abi_encode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4801:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4808:3:6",
														"type": ""
													}
												],
												"src": "4771:106:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4926:49:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4943:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4959:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4962:5:6"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "4948:10:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4948:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4936:33:6"
														}
													]
												},
												"name": "abi_encode_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4910:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4917:3:6",
														"type": ""
													}
												],
												"src": "4882:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5025:49:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5042:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5051:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:8:6",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5047:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5047:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5035:33:6"
														}
													]
												},
												"name": "abi_encode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5009:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5016:3:6",
														"type": ""
													}
												],
												"src": "4980:94:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5216:293:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5226:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5246:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5240:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5230:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5262:12:6",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "5271:3:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5266:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5335:77:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5360:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5365:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5356:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5356:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5383:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5391:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5379:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5379:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5395:4:6",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5375:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5375:25:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5369:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5369:32:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5349:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:53:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:53:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5294:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5297:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5291:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5291:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5305:21:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5307:17:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5316:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5319:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5312:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5312:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5307:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5287:3:6",
																"statements": []
															},
															"src": "5283:129:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5438:33:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5451:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5456:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5447:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5447:16:6"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "5465:3:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5440:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5440:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5440:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5427:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5430:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5424:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:13:6"
															},
															"nodeType": "YulIf",
															"src": "5421:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5480:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5491:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5496:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5192:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5197:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5208:3:6",
														"type": ""
													}
												],
												"src": "5079:430:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5615:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5625:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5637:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5633:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5625:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5682:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5698:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5703:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5694:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5694:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5707:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5690:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5690:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5678:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5678:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5584:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5606:4:6",
														"type": ""
													}
												],
												"src": "5514:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5879:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5889:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5901:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5912:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5897:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5897:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5889:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5924:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5942:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5938:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5938:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5928:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5984:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5992:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5980:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5962:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6016:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6027:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6012:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6012:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6036:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6044:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6005:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6005:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6005:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6079:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6084:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6057:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5832:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5843:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5851:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5859:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5870:4:6",
														"type": ""
													}
												],
												"src": "5722:375:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6287:312:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6297:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6309:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6320:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6305:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6297:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6333:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6351:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6356:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6347:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6360:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6343:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6343:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6337:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6393:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6401:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6389:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6371:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6425:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6436:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6421:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6421:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6445:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6453:34:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6441:47:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:75:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:75:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6509:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6520:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6505:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "6529:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6537:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6525:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6498:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6572:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6557:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "6581:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6589:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6577:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6577:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6550:43:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6232:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6243:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6251:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6259:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6267:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6278:4:6",
														"type": ""
													}
												],
												"src": "6102:497:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6733:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6743:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6755:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6766:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6751:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6751:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6743:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6785:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6816:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6821:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6812:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6812:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6825:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6796:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6778:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6849:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6860:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6865:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6838:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6838:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6694:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6705:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6713:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6724:4:6",
														"type": ""
													}
												],
												"src": "6604:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6982:103:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6992:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7004:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7015:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6992:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7034:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7049:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7061:3:6",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7066:10:6",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7057:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7057:20:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7045:33:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7027:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7027:52:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6951:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6962:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6973:4:6",
														"type": ""
													}
												],
												"src": "6883:202:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7227:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7237:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7249:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7237:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7279:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7294:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7310:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7315:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7306:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7306:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7319:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7302:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7302:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7290:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7272:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7272:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1609__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7196:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7207:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7218:4:6",
														"type": ""
													}
												],
												"src": "7090:239:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7508:151:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7525:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7536:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7518:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7518:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7518:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7575:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7593:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7613:4:6",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7586:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7627:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7639:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7650:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7485:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7499:4:6",
														"type": ""
													}
												],
												"src": "7334:325:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7855:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7866:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7848:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7848:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7848:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7889:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7900:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7885:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7885:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7905:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7878:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7878:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7928:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7939:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7924:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7924:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7944:17:6",
																		"type": "",
																		"value": "not a univ3 nft"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7917:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7917:45:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7971:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7983:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7971:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7815:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7829:4:6",
														"type": ""
													}
												],
												"src": "7664:339:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8199:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8210:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8233:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8244:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8229:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8229:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8222:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8222:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8272:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8283:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8268:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8268:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8288:15:6",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8313:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8325:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8321:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8313:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8159:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8173:4:6",
														"type": ""
													}
												],
												"src": "8008:337:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:151:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8541:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8575:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8571:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8571:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8591:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8564:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8613:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8624:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8609:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8609:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8629:4:6",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8602:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8643:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8655:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8666:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8651:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8643:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8515:4:6",
														"type": ""
													}
												],
												"src": "8350:325:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8854:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8871:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8905:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8916:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8901:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8901:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8921:1:6",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8894:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8894:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8894:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8959:5:6",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8974:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8986:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8997:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8982:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8974:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8831:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8845:4:6",
														"type": ""
													}
												],
												"src": "8680:326:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9174:411:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9184:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9196:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9207:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9192:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9184:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9227:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9244:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9238:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9238:13:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9220:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9220:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9220:32:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9283:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "9304:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9312:4:6",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9300:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9300:17:6"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9294:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9294:24:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9328:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9333:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9324:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9324:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9337:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9320:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9320:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9290:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9290:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9261:80:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9261:80:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9350:44:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9380:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9388:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9376:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9376:17:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9370:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:24:6"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "9354:12:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9403:44:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9413:34:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9407:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9478:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9489:12:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9503:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9485:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9527:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9538:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9523:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "9559:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9567:4:6",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9555:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9555:17:6"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9549:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9549:24:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9575:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9545:33:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9516:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9516:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9516:63:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_CollectParams_$1591_memory_ptr__to_t_struct$_CollectParams_$1591_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9143:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9154:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9165:4:6",
														"type": ""
													}
												],
												"src": "9011:574:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9773:377:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9783:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9795:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9806:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9791:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9783:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9826:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9843:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9837:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9837:13:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9819:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9819:32:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9871:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9882:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9867:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9867:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "9903:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9911:4:6",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9899:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9899:17:6"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9893:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9893:24:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9919:34:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9889:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9889:65:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9860:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9860:95:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9860:95:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9975:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9986:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9971:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9971:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10003:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10011:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9999:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9999:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9993:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9993:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9964:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9964:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10038:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10049:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10034:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10066:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10074:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10062:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10062:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10056:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10027:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10027:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10112:4:6",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10097:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10129:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10137:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10125:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10125:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10119:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10119:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10090:54:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1571_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1571_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9742:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9753:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9764:4:6",
														"type": ""
													}
												],
												"src": "9590:560:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10338:399:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10348:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10360:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10371:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10356:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10348:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10391:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10402:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:13:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10384:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10384:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10384:32:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10436:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10447:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10432:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10432:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10464:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10472:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10460:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10460:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10454:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10454:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10425:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10425:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10425:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10499:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10510:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10495:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10495:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10527:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10535:4:6",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10523:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10523:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10517:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10517:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10488:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10573:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10558:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10590:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10598:4:6",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10586:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10586:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10580:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10580:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10551:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10551:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10625:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10636:4:6",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10621:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10621:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10653:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10661:4:6",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10649:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10649:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10643:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10643:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10614:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10614:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10614:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10688:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10699:4:6",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10684:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10684:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10716:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10724:4:6",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10712:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10712:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10706:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10706:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10677:54:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1547_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1547_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10307:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10318:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10329:4:6",
														"type": ""
													}
												],
												"src": "10155:582:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10899:1077:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10909:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10921:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10932:3:6",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10917:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10917:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10909:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10972:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10966:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10966:13:6"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10981:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10945:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10945:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10945:46:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11000:44:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11030:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11038:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11026:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11026:17:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11020:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:24:6"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "11004:12:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "11074:12:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11092:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11103:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11088:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11088:20:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11053:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11118:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11150:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11158:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11146:17:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11140:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:24:6"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "11122:14:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "11193:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11224:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11209:20:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "11173:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11173:57:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11239:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11271:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11279:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11267:17:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11261:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:24:6"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "11243:14:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "11313:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11333:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11344:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11329:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11329:20:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "11294:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11294:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11294:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11359:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11391:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11399:4:6",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11387:17:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11381:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11381:24:6"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "11363:14:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "11433:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11453:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11464:4:6",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:20:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "11414:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11414:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11414:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11490:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11501:4:6",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11486:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11518:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11526:4:6",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11514:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11514:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11508:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11508:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11479:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11479:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11479:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11553:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11564:4:6",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11549:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11549:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11581:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11589:4:6",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11577:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11577:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11571:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11542:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11542:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11616:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11627:4:6",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11612:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11612:20:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11644:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11652:4:6",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11640:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11640:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11634:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11634:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11605:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11605:54:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11668:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11678:6:6",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11672:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11704:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11715:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11700:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11700:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11730:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "11738:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11726:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11726:15:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11720:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11720:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11693:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11693:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11693:50:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11752:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11762:6:6",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11756:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11777:44:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11809:6:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11817:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:15:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11799:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:22:6"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "11781:14:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "11851:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11871:9:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11882:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11830:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11830:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11830:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11895:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11905:6:6",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11899:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11931:9:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11942:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11927:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11927:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11957:6:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "11965:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11953:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11953:15:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11947:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11947:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11920:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11920:50:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1519_memory_ptr__to_t_struct$_MintParams_$1519_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10868:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10879:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10890:4:6",
														"type": ""
													}
												],
												"src": "10742:1234:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12138:203:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12148:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12160:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12171:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12156:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12156:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12148:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12190:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12205:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12213:34:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:47:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:66:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12269:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12280:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12265:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12265:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12285:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12258:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12258:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12258:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12312:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12323:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12308:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12308:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12328:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12301:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12301:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12091:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12102:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12110:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12118:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12129:4:6",
														"type": ""
													}
												],
												"src": "11981:360:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12445:91:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12455:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12467:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12478:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12463:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12463:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12455:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12497:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12512:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12520:8:6",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12508:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12508:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12490:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12490:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12490:40:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12414:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12425:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12436:4:6",
														"type": ""
													}
												],
												"src": "12346:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12642:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12652:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12664:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12660:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12652:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12694:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12705:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12687:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12687:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12687:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12611:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12622:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12633:4:6",
														"type": ""
													}
												],
												"src": "12541:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12908:247:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12918:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12930:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12941:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12926:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12961:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12972:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12954:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12954:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12954:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12999:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13010:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12995:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12995:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13019:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:34:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13015:47:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12988:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12988:75:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12988:75:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13083:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13094:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13079:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13079:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13099:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13072:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13072:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13072:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13126:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13137:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13122:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13142:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13115:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13115:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12853:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12864:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12872:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12880:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12888:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12899:4:6",
														"type": ""
													}
												],
												"src": "12723:432:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13289:119:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13299:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13311:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13307:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13299:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13341:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13352:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13334:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13375:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13395:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13368:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13368:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13368:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13250:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13261:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13269:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13280:4:6",
														"type": ""
													}
												],
												"src": "13160:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13459:170:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13469:44:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13479:34:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13473:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13522:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13537:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13540:2:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13533:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:10:6"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "13526:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13567:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13569:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13569:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13569:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "13562:3:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13555:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13555:11:6"
															},
															"nodeType": "YulIf",
															"src": "13552:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13598:25:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13611:1:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13614:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13607:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13607:10:6"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "13619:3:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13603:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13603:20:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13598:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13444:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13447:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13453:1:6",
														"type": ""
													}
												],
												"src": "13413:216:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13680:74:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13703:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13705:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13705:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13705:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13700:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13693:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:9:6"
															},
															"nodeType": "YulIf",
															"src": "13690:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13734:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13743:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13746:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13734:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13665:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13668:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13674:1:6",
														"type": ""
													}
												],
												"src": "13634:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13811:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13870:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13872:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13872:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13872:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13842:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13835:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13835:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13828:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13828:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13850:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13861:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13857:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13857:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13865:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13853:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13853:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13847:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13847:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13824:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13824:45:6"
															},
															"nodeType": "YulIf",
															"src": "13821:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13901:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13916:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13919:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13912:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13912:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13901:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13790:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13793:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13799:7:6",
														"type": ""
													}
												],
												"src": "13759:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13981:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14003:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14005:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14005:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14005:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13997:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14000:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13994:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13994:8:6"
															},
															"nodeType": "YulIf",
															"src": "13991:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14034:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14046:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14049:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14042:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14034:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13963:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13966:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13972:4:6",
														"type": ""
													}
												],
												"src": "13932:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14094:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14111:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14118:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14123:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14114:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14114:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14104:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14104:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14154:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14144:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14144:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14175:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14178:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14168:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14168:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14062:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14226:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14243:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14250:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14255:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14246:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14246:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14236:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14236:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14283:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14286:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14276:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14276:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14276:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14307:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14310:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14300:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14300:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14300:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14194:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14373:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14437:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14446:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14449:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14439:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14439:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14439:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14396:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14407:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14422:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14427:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14418:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14418:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14431:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14414:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14414:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14403:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14403:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14393:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14393:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14386:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14386:50:6"
															},
															"nodeType": "YulIf",
															"src": "14383:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14362:5:6",
														"type": ""
													}
												],
												"src": "14326:133:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value4, value4) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value4, value4) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value4, value4) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_uint128_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := abi_decode_t_uint128_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(value5, value5) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(value5, value5) }\n        value0 := value\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_t_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_t_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_t_uint128_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := mload(add(headStart, 288))\n        value10 := abi_decode_t_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_t_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_int24(value, pos)\n    {\n        mstore(pos, signextend(2, value))\n    }\n    function abi_encode_t_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1609__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"SA\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"not a univ3 nft\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"ST\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"STF\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_CollectParams_$1591_memory_ptr__to_t_struct$_CollectParams_$1591_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n    }\n    function abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1571_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1571_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1547_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1547_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n    }\n    function abi_encode_tuple_t_struct$_MintParams_$1519_memory_ptr__to_t_struct$_MintParams_$1519_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 352)\n        abi_encode_t_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_t_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_t_uint24(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_t_int24(memberValue0_2, add(headStart, 0x60))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_t_int24(memberValue0_3, add(headStart, 0x80))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_t_address(memberValue0_4, add(headStart, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n    }\n    function abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638187b4c5116100665780638187b4c51461013c57806389a302711461014f578063b02c43d014610164578063b44a272214610187578063e0bab4c41461018f5761009e565b8063089fe6aa146100a3578063150b7a02146100c1578063306d9c61146100e157806346ce96dd146100f9578063617d6d6e1461011a575b600080fd5b6100ab610197565b6040516100b8919061144f565b60405180910390f35b6100d46100cf366004610eac565b61019d565b6040516100b891906111fc565b6100e96101f1565b6040516100b89493929190611468565b61010c610107366004610fa1565b610482565b6040516100b892919061148c565b61012d610128366004611017565b610544565b6040516100b89392919061142e565b61010c61014a366004610fa1565b6106f5565b6101576108f4565b6040516100b89190611177565b610177610172366004610fa1565b61090c565b6040516100b894939291906111af565b61015761094c565b61015761095e565b6101f481565b60003360008051602061154f833981519152146101d55760405162461bcd60e51b81526004016101cc9061122d565b60405180910390fd5b6101df8685610976565b50630a85bd0160e11b95945050505050565b60008080806305f5e10063060438e0610220733db4b7da67dd5af61cb9b3c70501b1bdb24b2c22333085610b23565b61024073da10009cbd5d07dd0cecc66161fc93d7c9000da1333084610b23565b61026d733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2260008051602061154f83398151915284610c1b565b61029a73da10009cbd5d07dd0cecc66161fc93d7c9000da160008051602061154f83398151915283610c1b565b6040805161016081018252733db4b7da67dd5af61cb9b3c70501b1bdb24b2c22815273da10009cbd5d07dd0cecc66161fc93d7c9000da160208201526101f481830152610419196060820152610410608082015260a0810184905260c08101839052600060e0820181905261010082015230610120820152426101408201529051634418b22b60e11b815260008051602061154f83398151915290638831645690610349908490600401611380565b608060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610fb9565b929950909750955093506103af3388610976565b82851015610414576103e5733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2260008051602061154f8339815191526000610c1b565b60006103f186856114f3565b9050610412733db4b7da67dd5af61cb9b3c70501b1bdb24b2c223383610d10565b505b818410156104795761044a73da10009cbd5d07dd0cecc66161fc93d7c9000da160008051602061154f8339815191526000610c1b565b600061045685846114f3565b905061047773da10009cbd5d07dd0cecc66161fc93d7c9000da13383610d10565b505b50505090919293565b604080516080810182528281523060208201526001600160801b038183018190526060820152905163fc6f786560e01b8152600091829160008051602061154f8339815191529063fc6f7865906104dd9084906004016112b6565b6040805180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610ff4565b909350915061053e848484610dfe565b50915091565b60008381526020819052604081206002810154600390910154829182916001600160a01b03918216911661057a8233308a610b23565b61058681333089610b23565b61059f8260008051602061154f83398151915289610c1b565b6105b88160008051602061154f83398151915288610c1b565b6040805160c0810182528981526020810189905280820188905260006060820181905260808201524260a0820152905163219f5d1760e01b815260008051602061154f8339815191529063219f5d179061061690849060040161133c565b606060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610f6d565b91975095509350878510156106ac576106918360008051602061154f8339815191526000610c1b565b600061069d868a6114f3565b90506106aa843383610d10565b505b868410156106e9576106ce8260008051602061154f8339815191526000610c1b565b60006106da85896114f3565b90506106e7833383610d10565b505b50505093509350939050565b60008181526020819052604081205481906001600160a01b0316331461072d5760405162461bcd60e51b81526004016101cc90611256565b6000838152602081905260408120600101546001600160801b03169061075460028361149a565b905060006040518060a00160405280878152602001836001600160801b03168152602001600081526020016000815260200142815250905060006040518060800160405280888152602001306001600160a01b031681526020016001600160801b03801681526020016001600160801b038016815250905060008051602061154f8339815191526001600160a01b0316630c49ccbe836040518263ffffffff1660e01b815260040161080691906112f9565b6040805180830381600087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610ff4565b60405163fc6f786560e01b8152919750955060008051602061154f8339815191529063fc6f78659061088d9084906004016112b6565b6040805180830381600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190610ff4565b50506108eb878787610dfe565b50505050915091565b733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2281565b60006020819052908152604090208054600182015460028301546003909301546001600160a01b03928316936001600160801b0390921692918216911684565b60008051602061154f83398151915281565b73da10009cbd5d07dd0cecc66161fc93d7c9000da181565b60405163133f757160e31b81526000908190819060008051602061154f833981519152906399fbab88906109ae90879060040161145f565b6101806040518083038186803b1580156109c757600080fd5b505afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611042565b5050505097505050509450945050506040518060800160405280866001600160a01b03168152602001826001600160801b03168152602001846001600160a01b03168152602001836001600160a01b031681525060008086815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050505050505050565b600080856001600160a01b03166323b872dd60e01b868686604051602401610b4d9392919061118b565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b8b919061113e565b6000604051808303816000865af19150503d8060008114610bc8576040519150601f19603f3d011682016040523d82523d6000602084013e610bcd565b606091505b5091509150818015610bf7575080511580610bf7575080806020019051810190610bf79190610f46565b610c135760405162461bcd60e51b81526004016101cc90611299565b505050505050565b600080846001600160a01b031663095ea7b360e01b8585604051602401610c439291906111e3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610c81919061113e565b6000604051808303816000865af19150503d8060008114610cbe576040519150601f19603f3d011682016040523d82523d6000602084013e610cc3565b606091505b5091509150818015610ced575080511580610ced575080806020019051810190610ced9190610f46565b610d095760405162461bcd60e51b81526004016101cc90611211565b5050505050565b600080846001600160a01b031663a9059cbb60e01b8585604051602401610d389291906111e3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610d76919061113e565b6000604051808303816000865af19150503d8060008114610db3576040519150601f19603f3d011682016040523d82523d6000602084013e610db8565b606091505b5091509150818015610de2575080511580610de2575080806020019051810190610de29190610f46565b610d095760405162461bcd60e51b81526004016101cc9061127d565b6000838152602081905260409020805460028201546003909201546001600160a01b039182169282169116610e4c82846103e8610e3d896103de6114d4565b610e4791906114c0565b610d10565b610c1381846103e8610e3d886103de6114d4565b8051610e6b81611536565b919050565b8051600281900b8114610e6b57600080fd5b80516001600160801b0381168114610e6b57600080fd5b805162ffffff81168114610e6b57600080fd5b600080600080600060808688031215610ec3578081fd5b8535610ece81611536565b94506020860135610ede81611536565b935060408601359250606086013567ffffffffffffffff80821115610f01578283fd5b818801915088601f830112610f14578283fd5b813581811115610f22578384fd5b896020828501011115610f33578384fd5b9699959850939650602001949392505050565b600060208284031215610f57578081fd5b81518015158114610f66578182fd5b9392505050565b600080600060608486031215610f81578283fd5b610f8a84610e82565b925060208401519150604084015190509250925092565b600060208284031215610fb2578081fd5b5035919050565b60008060008060808587031215610fce578384fd5b84519350610fde60208601610e82565b6040860151606090960151949790965092505050565b60008060408385031215611006578182fd5b505080516020909101519092909150565b60008060006060848603121561102b578283fd5b505081359360208301359350604090920135919050565b6000806000806000806000806000806000806101808d8f031215611064578687fd5b8c516bffffffffffffffffffffffff8116811461107f578788fd5b9b5061108d60208e01610e60565b9a5061109b60408e01610e60565b99506110a960608e01610e60565b98506110b760808e01610e99565b97506110c560a08e01610e70565b96506110d360c08e01610e70565b95506110e160e08e01610e82565b94506101008d015193506101208d015192506111006101408e01610e82565b915061110f6101608e01610e82565b90509295989b509295989b509295989b565b6001600160a01b03169052565b60020b9052565b62ffffff169052565b60008251815b8181101561115e5760208186018101518583015201611144565b8181111561116c5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681526001600160801b039390931660208401529083166040830152909116606082015260800190565b6001600160a01b03929092168252602082015260400190565b6001600160e01b031991909116815260200190565b602080825260029082015261534160f01b604082015260600190565b6020808252600f908201526e1b9bdd0818481d5b9a5d8cc81b999d608a1b604082015260600190565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b60208082526002908201526114d560f21b604082015260600190565b60208082526003908201526229aa2360e91b604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b600060a082019050825182526001600160801b03602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600061016082019050611394828451611121565b60208301516113a66020840182611121565b5060408301516113b96040840182611135565b5060608301516113cc606084018261112e565b5060808301516113df608084018261112e565b5060a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015161141d82850182611121565b505061014092830151919092015290565b6001600160801b039390931683526020830191909152604082015260600190565b62ffffff91909116815260200190565b90815260200190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b60006001600160801b03808416806114b4576114b4611520565b92169190910492915050565b6000826114cf576114cf611520565b500490565b60008160001904831182151516156114ee576114ee61150a565b500290565b6000828210156115055761150561150a565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461154b57600080fd5b5056fe000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88a2646970667358221220225e377ebefa2947160d5469786e2bee6a37935767bf201d20b457a848b0d65964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8187B4C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8187B4C5 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x18F JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x306D9C61 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x46CE96DD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x617D6D6E EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP3 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x10C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x157 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x157 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DF DUP7 DUP6 PUSH2 0x976 JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH4 0x5F5E100 PUSH4 0x60438E0 PUSH2 0x220 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 CALLER ADDRESS DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x240 PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 CALLER ADDRESS DUP5 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x26D PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x29A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x160 DUP2 ADD DUP3 MSTORE PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 MSTORE PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1F4 DUP2 DUP4 ADD MSTORE PUSH2 0x419 NOT PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x410 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE ADDRESS PUSH2 0x120 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x140 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x4418B22B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x88316456 SWAP1 PUSH2 0x349 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x3AF CALLER DUP9 PUSH2 0x976 JUMP JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x414 JUMPI PUSH2 0x3E5 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP7 DUP6 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x412 PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 DUP6 DUP5 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x477 PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x4DD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x53E DUP5 DUP5 DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0x57A DUP3 CALLER ADDRESS DUP11 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x586 DUP2 CALLER ADDRESS DUP10 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x59F DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x5B8 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH2 0x616 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x133C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP6 LT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x691 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69D DUP7 DUP11 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6AA DUP5 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6CE DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA DUP6 DUP10 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E7 DUP4 CALLER DUP4 PUSH2 0xD10 JUMP JUMPDEST POP JUMPDEST POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x754 PUSH1 0x2 DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC49CCBE DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x833 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP8 POP SWAP6 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x88D SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST POP POP PUSH2 0x8EB DUP8 DUP8 DUP8 PUSH2 0xDFE JUMP JUMPDEST POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x154F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH2 0x9AE SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x145F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xBF7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xBF7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC43 SWAP3 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xC81 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCED JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xCED JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x1211 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD38 SWAP3 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xDE2 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xDE2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 AND PUSH2 0xE4C DUP3 DUP5 PUSH2 0x3E8 PUSH2 0xE3D DUP10 PUSH2 0x3DE PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0xC13 DUP2 DUP5 PUSH2 0x3E8 PUSH2 0xE3D DUP9 PUSH2 0x3DE PUSH2 0x14D4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE6B DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xECE DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xEDE DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF01 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF14 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF22 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF33 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF57 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF66 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF81 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xF8A DUP5 PUSH2 0xE82 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFCE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH2 0xFDE PUSH1 0x20 DUP7 ADD PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1006 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x102B JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1064 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x107F JUMPI DUP8 DUP9 REVERT JUMPDEST SWAP12 POP PUSH2 0x108D PUSH1 0x20 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP11 POP PUSH2 0x109B PUSH1 0x40 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP10 POP PUSH2 0x10A9 PUSH1 0x60 DUP15 ADD PUSH2 0xE60 JUMP JUMPDEST SWAP9 POP PUSH2 0x10B7 PUSH1 0x80 DUP15 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP8 POP PUSH2 0x10C5 PUSH1 0xA0 DUP15 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP7 POP PUSH2 0x10D3 PUSH1 0xC0 DUP15 ADD PUSH2 0xE70 JUMP JUMPDEST SWAP6 POP PUSH2 0x10E1 PUSH1 0xE0 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x1100 PUSH2 0x140 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP2 POP PUSH2 0x110F PUSH2 0x160 DUP15 ADD PUSH2 0xE82 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x115E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x116C JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1B9BDD0818481D5B9A5D8CC81B999D PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1394 DUP3 DUP5 MLOAD PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x13A6 PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x13B9 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x1135 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x13CC PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x112E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x13DF PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x112E JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x141D DUP3 DUP6 ADD DUP3 PUSH2 0x1121 JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x14B4 JUMPI PUSH2 0x14B4 PUSH2 0x1520 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14CF JUMPI PUSH2 0x14CF PUSH2 0x1520 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14EE JUMPI PUSH2 0x14EE PUSH2 0x150A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1505 JUMPI PUSH2 0x1505 PUSH2 0x150A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x154B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xC3 PUSH5 0x42B4A4522E DUP8 SGT SWAP10 0xCD PUSH18 0x7ABDD847AB11FE88A2646970667358221220 0x22 0x5E CALLDATACOPY PUSH31 0xBEFA2947160D5469786E2BEE6A37935767BF201D20B457A848B0D65964736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "341:10367:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1198:352;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2334:2528::-;;;:::i;:::-;;;;;;;;;;:::i;5200:855::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;8179:1836::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6394:1500::-;;;;;;:::i;:::-;;:::i;624:73::-;;;:::i;:::-;;;;;;;:::i;975:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;394:144::-;;;:::i;545:72::-;;;:::i;704:36::-;737:3;704:36;:::o;1198:352::-;1354:6;1381:10;-1:-1:-1;;;;;;;;;;;1381:49:4;1373:77;;;;-1:-1:-1;;;1373:77:4;;;;;;;:::i;:::-;;;;;;;;;1461:33;1476:8;1486:7;1461:14;:33::i;:::-;-1:-1:-1;;;;1198:352:4;;;;;;;:::o;2334:2528::-;2411:15;;;;2775:9;2819;2881:79;655:42;2919:10;2939:4;2775:9;2881:31;:79::i;:::-;2971:78;575:42;3008:10;3028:4;3035:13;2971:31;:78::i;:::-;3103:84;655:42;-1:-1:-1;;;;;;;;;;;3173:13:4;3103:26;:84::i;:::-;3198:83;575:42;-1:-1:-1;;;;;;;;;;;3267:13:4;3198:26;:83::i;:::-;3511:463;;;;;;;;655:42;3511:463;;575:42;3511:463;;;;737:3;3511:463;;;;-1:-1:-1;;3511:463:4;;;;3707:4;3511:463;;;;;;;;;;;;;;;;3443:52;3511:463;;;;;;;;;;3909:4;3511:463;;;;3943:15;3511:463;;;;4154:39;;-1:-1:-1;;;4154:39:4;;-1:-1:-1;;;;;;;;;;;495:42:4;4154:31;;:39;;3511:463;;4154:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4113:80;;-1:-1:-1;4113:80:4;;-1:-1:-1;4113:80:4;-1:-1:-1;4113:80:4;-1:-1:-1;4235:35:4;4250:10;4113:80;4235:14;:35::i;:::-;4353:13;4343:7;:23;4339:253;;;4383:72;655:42;-1:-1:-1;;;;;;;;;;;4453:1:4;4383:26;:72::i;:::-;4470:15;4488:23;4504:7;4488:13;:23;:::i;:::-;4470:41;;4526:54;655:42;4560:10;4572:7;4526:27;:54::i;:::-;4339:253;;4618:13;4608:7;:23;4604:251;;;4648:71;575:42;-1:-1:-1;;;;;;;;;;;4717:1:4;4648:26;:71::i;:::-;4734:15;4752:23;4768:7;4752:13;:23;:::i;:::-;4734:41;;4790:53;575:42;4823:10;4835:7;4790:27;:53::i;:::-;4604:251;;2334:2528;;;;;;;:::o;5200:855::-;5641:232;;;;;;;;;;;5756:4;5641:232;;;;-1:-1:-1;;;;;5641:232:4;;;;;;;;;;5907:42;;-1:-1:-1;;;5907:42:4;;5259:15;;;;-1:-1:-1;;;;;;;;;;;495:42:4;5907:34;;:42;;5641:232;;5907:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5886:63;;-1:-1:-1;5886:63:4;-1:-1:-1;6008:39:4;6021:7;5886:63;;6008:12;:39::i;:::-;5200:855;;;;:::o;8179:1836::-;8359:17;8481;;;;;;;;;;:24;;;;8533;;;;;8359:17;;;;-1:-1:-1;;;;;8481:24:4;;;;8533;8568:78;8481:24;8608:10;8628:4;8635:10;8568:31;:78::i;:::-;8657;8689:6;8697:10;8717:4;8724:10;8657:31;:78::i;:::-;8748:83;8775:6;-1:-1:-1;;;;;;;;;;;8820:10:4;8748:26;:83::i;:::-;8842;8869:6;-1:-1:-1;;;;;;;;;;;8914:10:4;8842:26;:83::i;:::-;9019:301;;;;;;;;;;;;;;;;;;;;;;;8938:65;9019:301;;;;;;;;;;9289:15;9019:301;;;;9365:52;;-1:-1:-1;;;9365:52:4;;-1:-1:-1;;;;;;;;;;;495:42:4;9365:44;;:52;;9019:301;;9365:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9333:84;;-1:-1:-1;9333:84:4;-1:-1:-1;9333:84:4;-1:-1:-1;9498:20:4;;;9494:251;;;9535:74;9562:6;-1:-1:-1;;;;;;;;;;;9607:1:4;9535:26;:74::i;:::-;9624:15;9642:20;9655:7;9642:10;:20;:::i;:::-;9624:38;;9677:56;9705:6;9713:10;9725:7;9677:27;:56::i;:::-;9494:251;;9771:10;9761:7;:20;9757:251;;;9798:74;9825:6;-1:-1:-1;;;;;;;;;;;9870:1:4;9798:26;:74::i;:::-;9887:15;9905:20;9918:7;9905:10;:20;:::i;:::-;9887:38;;9940:56;9968:6;9976:10;9988:7;9940:27;:56::i;:::-;9757:251;;8179:1836;;;;;;;;;;:::o;6394:1500::-;6462:15;6577:17;;;;;;;;;;:23;6462:15;;-1:-1:-1;;;;;6577:23:4;6563:10;:37;6555:63;;;;-1:-1:-1;;;6555:63:4;;;;;;;:::i;:::-;6672:17;6692;;;;;;;;;;:27;;;-1:-1:-1;;;;;6692:27:4;;6754:13;6766:1;6692:27;6754:13;:::i;:::-;6730:37;;6951:65;7032:254;;;;;;;;7112:7;7032:254;;;;7149:13;-1:-1:-1;;;;;7032:254:4;;;;;7193:1;7032:254;;;;7225:1;7032:254;;;;7255:15;7032:254;;;6951:335;;7307:56;7379:274;;;;;;;;7449:7;7379:274;;;;7494:4;-1:-1:-1;;;;;7379:274:4;;;;;-1:-1:-1;;;;;7379:274:4;;;;;;-1:-1:-1;;;;;7379:274:4;;;;;7307:346;;-1:-1:-1;;;;;;;;;;;;;;;;7687:44:4;;7732:6;7687:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7750:43;;-1:-1:-1;;;7750:43:4;;7666:73;;-1:-1:-1;7666:73:4;-1:-1:-1;;;;;;;;;;;;495:42:4;7750:34;;:43;;7785:7;;7750:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7847:39;7860:7;7869;7878;7847:12;:39::i;:::-;6394:1500;;;;;;;:::o;624:73::-;655:42;624:73;:::o;975:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;975:43:4;;;;-1:-1:-1;;;;;975:43:4;;;;;;;;;;:::o;394:144::-;-1:-1:-1;;;;;;;;;;;394:144:4;:::o;545:72::-;575:42;545:72;:::o;1558:370::-;1719:45;;-1:-1:-1;;;1719:45:4;;1639:14;;;;;;-1:-1:-1;;;;;;;;;;;495:42:4;1719:36;;:45;;1756:7;;1719:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1634:130;;;;;;;;;;;;;;;1843:77;;;;;;;;1859:5;-1:-1:-1;;;;;1843:77:4;;;;;1877:9;-1:-1:-1;;;;;1843:77:4;;;;;1896:6;-1:-1:-1;;;;;1843:77:4;;;;;1912:6;-1:-1:-1;;;;;1843:77:4;;;;1823:8;:17;1832:7;1823:17;;;;;;;;;;;:97;;;;;;;;;;;;;-1:-1:-1;;;;;1823:97:4;;;;;-1:-1:-1;;;;;1823:97:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:97:4;;;;;-1:-1:-1;;;;;1823:97:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:97:4;;;;;-1:-1:-1;;;;;1823:97:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:97:4;;;;;-1:-1:-1;;;;;1823:97:4;;;;;;;;;1558:370;;;;;:::o;561:358:3:-;701:12;715:17;748:5;-1:-1:-1;;;;;748:10:3;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;759:69:3;;;;;;;;;;;;;;-1:-1:-1;;;;;759:69:3;-1:-1:-1;;;;;;759:69:3;;;;;;;;;;748:81;;;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:3;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:3;;;;;;;:::i;:::-;561:358;;;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;-1:-1:-1;;;;;2021:10:3;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2032:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;2032:58:3;-1:-1:-1;;;;;;2032:58:3;;;;;;;;;;2021:70;;;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:3;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:3;;;;;;;:::i;:::-;1873:307;;;;;:::o;1211:309::-;1325:12;1339:17;1360:5;-1:-1:-1;;;;;1360:10:3;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1371:59:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1371:59:3;-1:-1:-1;;;;;;1371:59:3;;;;;;;;;;1360:71;;;;1371:59;1360:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:3;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1441:72;;;;-1:-1:-1;;;1441:72:3;;;;;;;:::i;10207:496:4:-;10367:13;10383:17;;;;;;;;;;:23;;10436:24;;;;10488;;;;;-1:-1:-1;;;;;10383:23:4;;;;10436:24;;;10488;10564:60;10436:24;10383:23;10619:4;10607:11;:7;10615:3;10607:11;:::i;:::-;:16;;;;:::i;:::-;10564:27;:60::i;:::-;10635;10663:6;10671:5;10690:4;10678:11;:7;10686:3;10678:11;:::i;14:142:6:-;95:13;;117:33;95:13;117:33;:::i;:::-;76:80;;;:::o;161:166::-;240:13;;293:1;282:20;;;272:31;;262:2;;317:1;314;307:12;332:194;413:13;;-1:-1:-1;;;;;455:46:6;;445:57;;435:2;;516:1;513;506:12;531:167;611:13;;664:8;653:20;;643:31;;633:2;;688:1;685;678:12;703:990;;;;;;885:3;873:9;864:7;860:23;856:33;853:2;;;907:6;899;892:22;853:2;951:9;938:23;970:33;997:5;970:33;:::i;:::-;1022:5;-1:-1:-1;1079:2:6;1064:18;;1051:32;1092:35;1051:32;1092:35;:::i;:::-;1146:7;-1:-1:-1;1200:2:6;1185:18;;1172:32;;-1:-1:-1;1255:2:6;1240:18;;1227:32;1278:18;1308:14;;;1305:2;;;1340:6;1332;1325:22;1305:2;1383:6;1372:9;1368:22;1358:32;;1428:7;1421:4;1417:2;1413:13;1409:27;1399:2;;1455:6;1447;1440:22;1399:2;1500;1487:16;1526:2;1518:6;1515:14;1512:2;;;1547:6;1539;1532:22;1512:2;1597:7;1592:2;1583:6;1579:2;1575:15;1571:24;1568:37;1565:2;;;1623:6;1615;1608:22;1565:2;843:850;;;;-1:-1:-1;843:850:6;;-1:-1:-1;1659:2:6;1651:11;;1681:6;843:850;-1:-1:-1;;;843:850:6:o;1698:297::-;;1818:2;1806:9;1797:7;1793:23;1789:32;1786:2;;;1839:6;1831;1824:22;1786:2;1876:9;1870:16;1929:5;1922:13;1915:21;1908:5;1905:32;1895:2;;1956:6;1948;1941:22;1895:2;1984:5;1776:219;-1:-1:-1;;;1776:219:6:o;2000:342::-;;;;2157:2;2145:9;2136:7;2132:23;2128:32;2125:2;;;2178:6;2170;2163:22;2125:2;2206:42;2238:9;2206:42;:::i;:::-;2196:52;;2288:2;2277:9;2273:18;2267:25;2257:35;;2332:2;2321:9;2317:18;2311:25;2301:35;;2115:227;;;;;:::o;2347:190::-;;2459:2;2447:9;2438:7;2434:23;2430:32;2427:2;;;2480:6;2472;2465:22;2427:2;-1:-1:-1;2508:23:6;;2417:120;-1:-1:-1;2417:120:6:o;2542:404::-;;;;;2716:3;2704:9;2695:7;2691:23;2687:33;2684:2;;;2738:6;2730;2723:22;2684:2;2772:9;2766:16;2756:26;;2801:51;2848:2;2837:9;2833:18;2801:51;:::i;:::-;2892:2;2877:18;;2871:25;2936:2;2921:18;;;2915:25;2674:272;;2791:61;;-1:-1:-1;2674:272:6;-1:-1:-1;;;2674:272:6:o;2951:255::-;;;3091:2;3079:9;3070:7;3066:23;3062:32;3059:2;;;3112:6;3104;3097:22;3059:2;-1:-1:-1;;3140:16:6;;3196:2;3181:18;;;3175:25;3140:16;;3175:25;;-1:-1:-1;3049:157:6:o;3211:326::-;;;;3357:2;3345:9;3336:7;3332:23;3328:32;3325:2;;;3378:6;3370;3363:22;3325:2;-1:-1:-1;;3406:23:6;;;3476:2;3461:18;;3448:32;;-1:-1:-1;3527:2:6;3512:18;;;3499:32;;3315:222;-1:-1:-1;3315:222:6:o;3542:1224::-;;;;;;;;;;;;;3848:3;3836:9;3827:7;3823:23;3819:33;3816:2;;;3870:6;3862;3855:22;3816:2;3907:9;3901:16;3957:26;3950:5;3946:38;3939:5;3936:49;3926:2;;4004:6;3996;3989:22;3926:2;4032:5;-1:-1:-1;4056:51:6;4103:2;4088:18;;4056:51;:::i;:::-;4046:61;;4126:51;4173:2;4162:9;4158:18;4126:51;:::i;:::-;4116:61;;4196:51;4243:2;4232:9;4228:18;4196:51;:::i;:::-;4186:61;;4266:51;4312:3;4301:9;4297:19;4266:51;:::i;:::-;4256:61;;4336:50;4381:3;4370:9;4366:19;4336:50;:::i;:::-;4326:60;;4405:50;4450:3;4439:9;4435:19;4405:50;:::i;:::-;4395:60;;4474:52;4521:3;4510:9;4506:19;4474:52;:::i;:::-;4464:62;;4566:3;4555:9;4551:19;4545:26;4535:36;;4611:3;4600:9;4596:19;4590:26;4580:36;;4636:52;4683:3;4672:9;4668:19;4636:52;:::i;:::-;4625:63;;4708:52;4755:3;4744:9;4740:19;4708:52;:::i;:::-;4697:63;;3806:960;;;;;;;;;;;;;;:::o;4771:106::-;-1:-1:-1;;;;;4839:31:6;4827:44;;4817:60::o;4882:93::-;4959:1;4948:20;4936:33;;4926:49::o;4980:94::-;5058:8;5047:20;5035:33;;5025:49::o;5079:430::-;;5246:6;5240:13;5271:3;5283:129;5297:6;5294:1;5291:13;5283:129;;;5395:4;5379:14;;;5375:25;;5369:32;5356:11;;;5349:53;5312:12;5283:129;;;5430:6;5427:1;5424:13;5421:2;;;5465:3;5456:6;5451:3;5447:16;5440:29;5421:2;-1:-1:-1;5487:16:6;;;;;5216:293;-1:-1:-1;;5216:293:6:o;5514:203::-;-1:-1:-1;;;;;5678:32:6;;;;5660:51;;5648:2;5633:18;;5615:102::o;5722:375::-;-1:-1:-1;;;;;5980:15:6;;;5962:34;;6032:15;;;;6027:2;6012:18;;6005:43;6079:2;6064:18;;6057:34;;;;5912:2;5897:18;;5879:218::o;6102:497::-;-1:-1:-1;;;;;6389:15:6;;;6371:34;;-1:-1:-1;;;;;6441:47:6;;;;6436:2;6421:18;;6414:75;6525:15;;;6520:2;6505:18;;6498:43;6577:15;;;6572:2;6557:18;;6550:43;6320:3;6305:19;;6287:312::o;6604:274::-;-1:-1:-1;;;;;6796:32:6;;;;6778:51;;6860:2;6845:18;;6838:34;6766:2;6751:18;;6733:145::o;6883:202::-;-1:-1:-1;;;;;;7045:33:6;;;;7027:52;;7015:2;7000:18;;6982:103::o;7334:325::-;7536:2;7518:21;;;7575:1;7555:18;;;7548:29;-1:-1:-1;;;7608:2:6;7593:18;;7586:32;7650:2;7635:18;;7508:151::o;7664:339::-;7866:2;7848:21;;;7905:2;7885:18;;;7878:30;-1:-1:-1;;;7939:2:6;7924:18;;7917:45;7994:2;7979:18;;7838:165::o;8008:337::-;8210:2;8192:21;;;8249:2;8229:18;;;8222:30;-1:-1:-1;;;8283:2:6;8268:18;;8261:43;8336:2;8321:18;;8182:163::o;8350:325::-;8552:2;8534:21;;;8591:1;8571:18;;;8564:29;-1:-1:-1;;;8624:2:6;8609:18;;8602:32;8666:2;8651:18;;8524:151::o;8680:326::-;8882:2;8864:21;;;8921:1;8901:18;;;8894:29;-1:-1:-1;;;8954:2:6;8939:18;;8932:33;8997:2;8982:18;;8854:152::o;9011:574::-;9238:13;;9220:32;;9312:4;9300:17;;;9294:24;-1:-1:-1;;;;;9290:50:6;9268:20;;;9261:80;9388:4;9376:17;;;9370:24;-1:-1:-1;;;;;9485:21:6;;;9463:20;;;9456:51;;;;9567:4;9555:17;;;9549:24;9545:33;9523:20;;;9516:63;;;;9207:3;9192:19;;9174:411::o;9590:560::-;;9806:3;9795:9;9791:19;9783:27;;9843:6;9837:13;9826:9;9819:32;-1:-1:-1;;;;;9911:4:6;9903:6;9899:17;9893:24;9889:65;9882:4;9871:9;9867:20;9860:95;10011:4;10003:6;9999:17;9993:24;9986:4;9975:9;9971:20;9964:54;10074:4;10066:6;10062:17;10056:24;10049:4;10038:9;10034:20;10027:54;10137:4;10129:6;10125:17;10119:24;10112:4;10101:9;10097:20;10090:54;9773:377;;;;:::o;10155:582::-;;10371:3;10360:9;10356:19;10348:27;;10408:6;10402:13;10391:9;10384:32;10472:4;10464:6;10460:17;10454:24;10447:4;10436:9;10432:20;10425:54;10535:4;10527:6;10523:17;10517:24;10510:4;10499:9;10495:20;10488:54;10598:4;10590:6;10586:17;10580:24;10573:4;10562:9;10558:20;10551:54;10661:4;10653:6;10649:17;10643:24;10636:4;10625:9;10621:20;10614:54;10724:4;10716:6;10712:17;10706:24;10699:4;10688:9;10684:20;10677:54;10338:399;;;;:::o;10742:1234::-;;10932:3;10921:9;10917:19;10909:27;;10945:46;10981:9;10972:6;10966:13;10945:46;:::i;:::-;11038:4;11030:6;11026:17;11020:24;11053:56;11103:4;11092:9;11088:20;11074:12;11053:56;:::i;:::-;;11158:4;11150:6;11146:17;11140:24;11173:57;11224:4;11213:9;11209:20;11193:14;11173:57;:::i;:::-;;11279:4;11271:6;11267:17;11261:24;11294:56;11344:4;11333:9;11329:20;11313:14;11294:56;:::i;:::-;;11399:4;11391:6;11387:17;11381:24;11414:56;11464:4;11453:9;11449:20;11433:14;11414:56;:::i;:::-;;11526:4;11518:6;11514:17;11508:24;11501:4;11490:9;11486:20;11479:54;11589:4;11581:6;11577:17;11571:24;11564:4;11553:9;11549:20;11542:54;11652:4;11644:6;11640:17;11634:24;11627:4;11616:9;11612:20;11605:54;11678:6;11738:2;11730:6;11726:15;11720:22;11715:2;11704:9;11700:18;11693:50;;11762:6;11817:2;11809:6;11805:15;11799:22;11830:56;11882:2;11871:9;11867:18;11851:14;11830:56;:::i;:::-;-1:-1:-1;;11905:6:6;11953:15;;;11947:22;11927:18;;;;11920:50;10899:1077;:::o;11981:360::-;-1:-1:-1;;;;;12201:47:6;;;;12183:66;;12280:2;12265:18;;12258:34;;;;12323:2;12308:18;;12301:34;12171:2;12156:18;;12138:203::o;12346:190::-;12520:8;12508:21;;;;12490:40;;12478:2;12463:18;;12445:91::o;12541:177::-;12687:25;;;12675:2;12660:18;;12642:76::o;12723:432::-;12954:25;;;-1:-1:-1;;;;;13015:47:6;;;;13010:2;12995:18;;12988:75;13094:2;13079:18;;13072:34;13137:2;13122:18;;13115:34;12941:3;12926:19;;12908:247::o;13160:248::-;13334:25;;;13390:2;13375:18;;13368:34;13322:2;13307:18;;13289:119::o;13413:216::-;;-1:-1:-1;;;;;13540:2:6;13537:1;13533:10;13562:3;13552:2;;13569:18;;:::i;:::-;13607:10;;13603:20;;;;;13459:170;-1:-1:-1;;13459:170:6:o;13634:120::-;;13700:1;13690:2;;13705:18;;:::i;:::-;-1:-1:-1;13739:9:6;;13680:74::o;13759:168::-;;13865:1;13861;13857:6;13853:14;13850:1;13847:21;13842:1;13835:9;13828:17;13824:45;13821:2;;;13872:18;;:::i;:::-;-1:-1:-1;13912:9:6;;13811:116::o;13932:125::-;;14000:1;13997;13994:8;13991:2;;;14005:18;;:::i;:::-;-1:-1:-1;14042:9:6;;13981:76::o;14062:127::-;14123:10;14118:3;14114:20;14111:1;14104:31;14154:4;14151:1;14144:15;14178:4;14175:1;14168:15;14194:127;14255:10;14250:3;14246:20;14243:1;14236:31;14286:4;14283:1;14276:15;14310:4;14307:1;14300:15;14326:133;-1:-1:-1;;;;;14403:31:6;;14393:42;;14383:2;;14449:1;14446;14439:12;14383:2;14373:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1108000",
								"executionCost": "1154",
								"totalCost": "1109154"
							},
							"external": {
								"DAI()": "340",
								"USDC()": "274",
								"collectAllFees(uint256)": "infinite",
								"decreaseLiquidityInHalf(uint256)": "infinite",
								"deposits(uint256)": "3840",
								"increaseLiquidityCurrentRange(uint256,uint256,uint256)": "infinite",
								"mintNewPosition()": "infinite",
								"nonfungiblePositionManager()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"poolFee()": "241"
							},
							"internal": {
								"_createDeposit(address,uint256)": "infinite",
								"_sendToOwner(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 10708,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220225e377ebefa2947160d5469786e2bee6a37935767bf201d20b457a848b0d65964736f6c63430008000033",
									".code": [
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "8187B4C5"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "8187B4C5"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "B02C43D0"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "B44A2722"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "89FE6AA"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "306D9C61"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "46CE96DD"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "617D6D6E"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 10708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 704,
											"end": 740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 704,
											"end": 740,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1430,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1373,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1476,
											"end": 1484,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1461,
											"end": 1494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1461,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1550,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH",
											"source": 4,
											"value": "60438E0"
										},
										{
											"begin": 2881,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": 2919,
											"end": 2929,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2881,
											"end": 2960,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2881,
											"end": 2960,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2881,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3032,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3048,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2971,
											"end": 3049,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2971,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2971,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3103,
											"end": 3187,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3103,
											"end": 3187,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3103,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3267,
											"end": 3280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3198,
											"end": 3281,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3281,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3198,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "419"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4418B22B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 495,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4185,
											"name": "PUSH",
											"source": 4,
											"value": "88316456"
										},
										{
											"begin": 4154,
											"end": 4185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4154,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4235,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4250,
											"end": 4260,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4193,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4235,
											"end": 4270,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4235,
											"end": 4270,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4235,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4350,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4366,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4383,
											"end": 4455,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4383,
											"end": 4455,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4383,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4488,
											"end": 4501,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4488,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4488,
											"end": 4511,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4511,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4488,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": 4560,
											"end": 4570,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4526,
											"end": 4580,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4526,
											"end": 4580,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4526,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4339,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 4631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 4615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 4631,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4648,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4648,
											"end": 4719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4648,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4648,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4768,
											"end": 4775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4765,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": 4823,
											"end": 4833,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4835,
											"end": 4842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4790,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4604,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 4862,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5756,
											"end": 5760,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC6F7865"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 495,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "FC6F7865"
										},
										{
											"begin": 5907,
											"end": 5941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6008,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 6055,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8498,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8568,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8481,
											"end": 8505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8618,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8628,
											"end": 8632,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8635,
											"end": 8645,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 8568,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 8568,
											"end": 8646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8568,
											"end": 8646,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8568,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8657,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8734,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8657,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 8657,
											"end": 8735,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8657,
											"end": 8735,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8657,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8775,
											"end": 8781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8830,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8748,
											"end": 8831,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8831,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8748,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8914,
											"end": 8924,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8842,
											"end": 8925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8842,
											"end": 8925,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8842,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9304,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "219F5D17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 495,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "PUSH",
											"source": 4,
											"value": "219F5D17"
										},
										{
											"begin": 9365,
											"end": 9409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9365,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9333,
											"end": 9417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9333,
											"end": 9417,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9333,
											"end": 9417,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9333,
											"end": 9417,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9562,
											"end": 9568,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9607,
											"end": 9608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9624,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9642,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 9655,
											"end": 9662,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9642,
											"end": 9652,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9642,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9642,
											"end": 9662,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9642,
											"end": 9662,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 9642,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9624,
											"end": 9662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9624,
											"end": 9662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9677,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9705,
											"end": 9711,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9723,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9732,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9677,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9677,
											"end": 9733,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9677,
											"end": 9733,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9677,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9494,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9771,
											"end": 9781,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9761,
											"end": 9768,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9798,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9825,
											"end": 9831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9870,
											"end": 9871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 9798,
											"end": 9872,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9798,
											"end": 9872,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9798,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9918,
											"end": 9925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9915,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9968,
											"end": 9974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 9986,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9988,
											"end": 9995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9940,
											"end": 9996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9940,
											"end": 9996,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9940,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9757,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 10015,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6462,
											"end": 6477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6600,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6462,
											"end": 6477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6462,
											"end": 6477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6577,
											"end": 6600,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6573,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6600,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6766,
											"end": 6767,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6692,
											"end": 6719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 6767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 6767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7149,
											"end": 7162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7255,
											"end": 7270,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7456,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7498,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7731,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7731,
											"name": "PUSH",
											"source": 4,
											"value": "C49CCBE"
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7687,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC6F7865"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7666,
											"end": 7739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7666,
											"end": 7739,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7666,
											"end": 7739,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 495,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7784,
											"name": "PUSH",
											"source": 4,
											"value": "FC6F7865"
										},
										{
											"begin": 7750,
											"end": 7784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7785,
											"end": 7792,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7785,
											"end": 7792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7860,
											"end": 7867,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7876,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7885,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 7894,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 655,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": 624,
											"end": 697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1018,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 394,
											"end": 538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 394,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 538,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": 545,
											"end": 617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 617,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "133F7571"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 495,
											"end": 537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "PUSH",
											"source": 4,
											"value": "99FBAB88"
										},
										{
											"begin": 1719,
											"end": 1755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1864,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 870,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10207,
											"end": 10703,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10207,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10367,
											"end": 10380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10512,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10564,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10436,
											"end": 10460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10406,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10619,
											"end": 10623,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 10607,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10607,
											"end": 10614,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "3DE"
										},
										{
											"begin": 10607,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10607,
											"end": 10618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10618,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10607,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10607,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10564,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 10564,
											"end": 10624,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10564,
											"end": 10624,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10564,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 10663,
											"end": 10669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10690,
											"end": 10694,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 10678,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10678,
											"end": 10685,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "3DE"
										},
										{
											"begin": 10678,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10678,
											"end": 10689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 76,
											"end": 156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 76,
											"end": 156,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 161,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 240,
											"end": 253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 240,
											"end": 253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 282,
											"end": 302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 282,
											"end": 302,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 272,
											"end": 303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 272,
											"end": 303,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 332,
											"end": 526,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 332,
											"end": 526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 455,
											"end": 501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 455,
											"end": 501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 445,
											"end": 502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 445,
											"end": 502,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 435,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 435,
											"end": 437,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 531,
											"end": 698,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 531,
											"end": 698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 664,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 643,
											"end": 674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 643,
											"end": 674,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 688,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 678,
											"end": 690,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 703,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 860,
											"end": 883,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 856,
											"end": 889,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 853,
											"end": 855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 892,
											"end": 914,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 853,
											"end": 855,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 938,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1081,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1082,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1092,
											"end": 1127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1092,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1204,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1308,
											"end": 1322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1308,
											"end": 1322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1308,
											"end": 1322,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1425,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1462,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1651,
											"end": 1662,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 1693,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1698,
											"end": 1995,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1698,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1821,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1846,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1936,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1937,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1963,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1995,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1995,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2000,
											"end": 2342,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2000,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2342,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2145,
											"end": 2154,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2160,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2185,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2206,
											"end": 2248,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2206,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2206,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2342,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2347,
											"end": 2537,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2347,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2462,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2487,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2531,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2537,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2704,
											"end": 2713,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2714,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2938,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 2940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2946,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2946,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2852,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2674,
											"end": 2946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2674,
											"end": 2946,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2951,
											"end": 3206,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2951,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 3206,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3077,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3089,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3119,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3181,
											"end": 3199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3200,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3049,
											"end": 3206,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3211,
											"end": 3537,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3211,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3360,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3537,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3851,
											"name": "PUSH",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP16",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3876,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3877,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3917,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3985,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4011,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4173,
											"end": 4175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4158,
											"end": 4176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4243,
											"end": 4245,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4196,
											"end": 4247,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4247,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4196,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4247,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4312,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4317,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4370,
											"end": 4379,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4336,
											"end": 4386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4386,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4336,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4386,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4450,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4405,
											"end": 4455,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4405,
											"end": 4455,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4405,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4526,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4555,
											"end": 4564,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4571,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4614,
											"name": "PUSH",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4616,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "PUSH",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4672,
											"end": 4681,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 4766,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 4877,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4771,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4839,
											"end": 4870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4877,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4882,
											"end": 4975,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4882,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4975,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4980,
											"end": 5074,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4980,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 5047,
											"end": 5067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5074,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5079,
											"end": 5509,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5079,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5304,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5367,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5283,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5437,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5454,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5440,
											"end": 5469,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5509,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5514,
											"end": 5717,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5514,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5717,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5722,
											"end": 6097,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5722,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 5996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 5996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6029,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6012,
											"end": 6030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6005,
											"end": 6048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 5914,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5897,
											"end": 5915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 6097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6102,
											"end": 6599,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6102,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6389,
											"end": 6404,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6404,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6371,
											"end": 6405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6371,
											"end": 6405,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6488,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6488,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6438,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6574,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6305,
											"end": 6324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6599,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6604,
											"end": 6878,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6604,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6778,
											"end": 6829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6778,
											"end": 6829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6751,
											"end": 6769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6751,
											"end": 6769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6883,
											"end": 7085,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6883,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7000,
											"end": 7018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7085,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7334,
											"end": 7659,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7334,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7586,
											"end": 7618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7635,
											"end": 7653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7635,
											"end": 7653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7659,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7664,
											"end": 8003,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 7664,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD0818481D5B9A5D8CC81B999D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 8003,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8008,
											"end": 8345,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8008,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8212,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8345,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8350,
											"end": 8675,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8350,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8552,
											"end": 8554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8624,
											"end": 8626,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8666,
											"end": 8668,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8675,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8680,
											"end": 9006,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8680,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 8999,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 9006,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9011,
											"end": 9585,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9011,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9220,
											"end": 9252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9220,
											"end": 9252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9312,
											"end": 9316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9300,
											"end": 9317,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9290,
											"end": 9340,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9393,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9571,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9555,
											"end": 9572,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9555,
											"end": 9572,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9555,
											"end": 9572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9192,
											"end": 9211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9192,
											"end": 9211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9585,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9590,
											"end": 10150,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9590,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9791,
											"end": 9810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 9849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 9835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9903,
											"end": 9909,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9893,
											"end": 9917,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 9954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 9886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9871,
											"end": 9880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9860,
											"end": 9955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10003,
											"end": 10009,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9999,
											"end": 10016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9993,
											"end": 10017,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 9990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 9991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9964,
											"end": 10018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10078,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10053,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10038,
											"end": 10047,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10027,
											"end": 10081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10141,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10129,
											"end": 10135,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10125,
											"end": 10142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10112,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10090,
											"end": 10144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 10150,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 10150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 10150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 10150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 10150,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10155,
											"end": 10737,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10155,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10155,
											"end": 10737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 10360,
											"end": 10369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10415,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10391,
											"end": 10400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10384,
											"end": 10416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10460,
											"end": 10477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10478,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10527,
											"end": 10533,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10523,
											"end": 10540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10499,
											"end": 10508,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10602,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10590,
											"end": 10596,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10577,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10551,
											"end": 10605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10653,
											"end": 10659,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10667,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10625,
											"end": 10634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10668,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10728,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 10716,
											"end": 10722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 10729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10730,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10699,
											"end": 10703,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10684,
											"end": 10704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10677,
											"end": 10731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10737,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10742,
											"end": 11976,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10742,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 11976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10935,
											"name": "PUSH",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10921,
											"end": 10930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10981,
											"end": 10990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10972,
											"end": 10978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10966,
											"end": 10979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 10945,
											"end": 10991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10945,
											"end": 10991,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10945,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11038,
											"end": 11042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11026,
											"end": 11043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11103,
											"end": 11107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11092,
											"end": 11101,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11088,
											"end": 11108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11158,
											"end": 11162,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11146,
											"end": 11163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11140,
											"end": 11164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11224,
											"end": 11228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11213,
											"end": 11222,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11209,
											"end": 11229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11283,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11271,
											"end": 11277,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11267,
											"end": 11284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11285,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11344,
											"end": 11348,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11333,
											"end": 11342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11329,
											"end": 11349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11313,
											"end": 11327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11399,
											"end": 11403,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11453,
											"end": 11462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11518,
											"end": 11524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11532,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11490,
											"end": 11499,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11486,
											"end": 11506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11479,
											"end": 11533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 11593,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11577,
											"end": 11594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11571,
											"end": 11595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11564,
											"end": 11568,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 11553,
											"end": 11562,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11652,
											"end": 11656,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 11644,
											"end": 11650,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11640,
											"end": 11657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11627,
											"end": 11631,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 11616,
											"end": 11625,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11605,
											"end": 11659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11684,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11738,
											"end": 11740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11730,
											"end": 11736,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11720,
											"end": 11742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11704,
											"end": 11713,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 11743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 11743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11762,
											"end": 11768,
											"name": "PUSH",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 11817,
											"end": 11819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11805,
											"end": 11820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11799,
											"end": 11821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11830,
											"end": 11886,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11830,
											"end": 11886,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 11830,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11905,
											"end": 11911,
											"name": "PUSH",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11947,
											"end": 11969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11927,
											"end": 11945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11927,
											"end": 11945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11927,
											"end": 11945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11927,
											"end": 11945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11920,
											"end": 11970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10899,
											"end": 11976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10899,
											"end": 11976,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11981,
											"end": 12341,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 11981,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12201,
											"end": 12248,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12201,
											"end": 12248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12201,
											"end": 12248,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12201,
											"end": 12248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12183,
											"end": 12249,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12183,
											"end": 12249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12280,
											"end": 12282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12265,
											"end": 12283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12308,
											"end": 12326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12308,
											"end": 12326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12301,
											"end": 12335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12171,
											"end": 12173,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12341,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12346,
											"end": 12536,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 12346,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12520,
											"end": 12528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 12508,
											"end": 12529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12480,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12445,
											"end": 12536,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12541,
											"end": 12718,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 12541,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12687,
											"end": 12712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12687,
											"end": 12712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12687,
											"end": 12712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12675,
											"end": 12677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12660,
											"end": 12678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12718,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12723,
											"end": 13155,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 12723,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12954,
											"end": 12979,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12954,
											"end": 12979,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12954,
											"end": 12979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13015,
											"end": 13062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13015,
											"end": 13062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13015,
											"end": 13062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13015,
											"end": 13062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13010,
											"end": 13012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12988,
											"end": 13063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13094,
											"end": 13096,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13072,
											"end": 13106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13115,
											"end": 13149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12941,
											"end": 12944,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12926,
											"end": 12945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12926,
											"end": 12945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12908,
											"end": 13155,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13160,
											"end": 13408,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 13160,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13334,
											"end": 13359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13334,
											"end": 13359,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13334,
											"end": 13359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13390,
											"end": 13392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13368,
											"end": 13402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13322,
											"end": 13324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13307,
											"end": 13325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13289,
											"end": 13408,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13413,
											"end": 13629,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 13413,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13413,
											"end": 13629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13552,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 13552,
											"end": 13554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13607,
											"end": 13617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13607,
											"end": 13617,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13623,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13623,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13459,
											"end": 13629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13459,
											"end": 13629,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13634,
											"end": 13754,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 13634,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13634,
											"end": 13754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13690,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 13690,
											"end": 13692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13739,
											"end": 13748,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13739,
											"end": 13748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13680,
											"end": 13754,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13759,
											"end": 13927,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 13759,
											"end": 13927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13759,
											"end": 13927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13861,
											"end": 13862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13853,
											"end": 13867,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13850,
											"end": 13851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13847,
											"end": 13868,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13842,
											"end": 13843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13835,
											"end": 13844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13828,
											"end": 13845,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13824,
											"end": 13869,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13872,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13872,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 13872,
											"end": 13890,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13872,
											"end": 13890,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 13872,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13912,
											"end": 13921,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13912,
											"end": 13921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13811,
											"end": 13927,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13932,
											"end": 14057,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 13932,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13932,
											"end": 14057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13997,
											"end": 13998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13994,
											"end": 14002,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14042,
											"end": 14051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14042,
											"end": 14051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13981,
											"end": 14057,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14062,
											"end": 14189,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 14062,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14133,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 14118,
											"end": 14121,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 14114,
											"end": 14134,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14104,
											"end": 14135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14158,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14144,
											"end": 14159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14178,
											"end": 14182,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14175,
											"end": 14176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 14183,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14194,
											"end": 14321,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 14194,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14255,
											"end": 14265,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 14250,
											"end": 14253,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 14246,
											"end": 14266,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 14243,
											"end": 14244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14236,
											"end": 14267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14286,
											"end": 14290,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 14283,
											"end": 14284,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14276,
											"end": 14291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14307,
											"end": 14308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14315,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14326,
											"end": 14459,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 14326,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14403,
											"end": 14434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14393,
											"end": 14435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14393,
											"end": 14435,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14446,
											"end": 14447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14439,
											"end": 14451,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14373,
											"end": 14459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14373,
											"end": 14459,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E": "000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"USDC()": "89a30271",
							"collectAllFees(uint256)": "46ce96dd",
							"decreaseLiquidityInHalf(uint256)": "8187b4c5",
							"deposits(uint256)": "b02c43d0",
							"increaseLiquidityCurrentRange(uint256,uint256,uint256)": "617d6d6e",
							"mintNewPosition()": "306d9c61",
							"nonfungiblePositionManager()": "b44a2722",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"poolFee()": "089fe6aa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"collectAllFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"decreaseLiquidityInHalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd1\",\"type\":\"uint256\"}],\"name\":\"increaseLiquidityCurrentRange\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNewPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectAllFees(uint256)\":{\"details\":\"The contract must hold the erc721 token before it can collect fees\",\"params\":{\"tokenId\":\"The id of the erc721 token\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidityInHalf(uint256)\":{\"params\":{\"tokenId\":\"The id of the erc721 token\"},\"returns\":{\"amount0\":\"The amount received back in token0\",\"amount1\":\"The amount returned back in token1\"}},\"increaseLiquidityCurrentRange(uint256,uint256,uint256)\":{\"details\":\"Pool must be initialized already to add liquidity\",\"params\":{\"amount0\":\"The amount to add of token0\",\"amount1\":\"The amount to add of token1\",\"tokenId\":\"The id of the erc721 token\"}},\"mintNewPosition()\":{\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for the position\",\"tokenId\":\"The id of the newly minted ERC721\"}}},\"stateVariables\":{\"deposits\":{\"details\":\"deposits[tokenId] => Deposit\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectAllFees(uint256)\":{\"notice\":\"Collects the fees associated with provided liquidity\"},\"decreaseLiquidityInHalf(uint256)\":{\"notice\":\"A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\"},\"increaseLiquidityCurrentRange(uint256,uint256,uint256)\":{\"notice\":\"Increases liquidity in the current range\"},\"mintNewPosition()\":{\"notice\":\"Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswapv3lp.sol\":\"LiquidityExamples\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xe2bb2ec5150e6007beecb75ce88e7a03458b8d01aa968ec265093cdb6d8d3af7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42068b48f0f59086bd90db67b51ab3e70ab4701e9e0602a9f048031e4f31831a\",\"dweb:/ipfs/QmZEhUMidPVxfGzGrQ39tACokCmknPr3yfxDgh9hjuZpwE\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/uniswapv3lp.sol\":{\"keccak256\":\"0x82d43a589359f57b7f34796899ae074f79f91e5efd7306480091863aae1c62b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be4d5216f0d19690e6e1ebab074a9a7b44f7d310d1e9792569a5c840f33dc90\",\"dweb:/ipfs/QmQwR6rFYWkumzbx8wkj4nDfLZW8efeXNGBdYcuywBcoZB\"]},\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x1472f97bbd815a116416bca5680e2c4bf57b0877cdd0aa0c77411bded6a2687c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e1a5310dd384bbbbbce64e548d9970e5a31125ab105a7bea357a87ec568a9\",\"dweb:/ipfs/QmcA1g874tP74FbL6TNZy7pAU4jbEVtkcwaZvLomRQwauL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 830,
								"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
								"label": "deposits",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Deposit)824_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Deposit)824_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LiquidityExamples.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)824_storage"
							},
							"t_struct(Deposit)824_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityExamples.Deposit",
								"members": [
									{
										"astId": 817,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 819,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "liquidity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									},
									{
										"astId": 821,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "token0",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 823,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "token1",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectAllFees(uint256)": {
								"notice": "Collects the fees associated with provided liquidity"
							},
							"decreaseLiquidityInHalf(uint256)": {
								"notice": "A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery."
							},
							"increaseLiquidityCurrentRange(uint256,uint256,uint256)": {
								"notice": "Increases liquidity in the current range"
							},
							"mintNewPosition()": {
								"notice": "Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"positions(uint256)": "99fbab88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x1472f97bbd815a116416bca5680e2c4bf57b0877cdd0aa0c77411bded6a2687c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e1a5310dd384bbbbbce64e548d9970e5a31125ab105a7bea357a87ec568a9\",\"dweb:/ipfs/QmcA1g874tP74FbL6TNZy7pAU4jbEVtkcwaZvLomRQwauL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0"
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							95
						]
					},
					"id": 96,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 91,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 95,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 96,
							"src": "294:692:1"
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							620
						]
					},
					"id": 621,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 97,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 98,
								"nodeType": "StructuredDocumentation",
								"src": "70:235:2",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 620,
							"linearizedBaseContracts": [
								620
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "328:108:2",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 103,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "441:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 100,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "441:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "476:7:2",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 101,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "477:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "489:107:2",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 108,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "601:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 105,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "601:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 107,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "636:9:2",
										"subExpression": {
											"id": 106,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 103,
											"src": "637:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "652:116:2",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 112,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "773:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 110,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "816:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "832:116:2",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 116,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "953:92:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 114,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "953:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "996:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1439:2443:2",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1449:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1449:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 126,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1467:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1474:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1467:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 141,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "1518:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1511:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 139,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1511:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1511:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 137,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1503:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1503:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1467:57:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1486:13:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 133,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 119,
																			"src": "1494:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1487:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 131,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1487:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1487:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1478:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 129,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1478:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1478:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1449:75:2"
											},
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "1535:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1535:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 148,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1551:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1561:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1551:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1568:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1551:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1609:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1551:93:2",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1572:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1535:109:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 157,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1668:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1658:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1675:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1658:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "IfStatement",
												"src": "1654:83:2",
												"trueBody": {
													"expression": {
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 162,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1678:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 163,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1687:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1695:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1687:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 166,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1686:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1686:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1678:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ExpressionStatement",
													"src": "1678:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 172,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1751:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1761:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1751:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1751:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1747:83:2",
												"trueBody": {
													"expression": {
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 177,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1771:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 178,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1780:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1788:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1780:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1779:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1827:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1779:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1771:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 185,
													"nodeType": "ExpressionStatement",
													"src": "1771:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 187,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1844:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1854:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1844:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1861:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1844:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "IfStatement",
												"src": "1840:83:2",
												"trueBody": {
													"expression": {
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 192,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1864:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 193,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1873:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1881:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1873:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 196,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1872:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1920:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1872:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1864:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"nodeType": "ExpressionStatement",
													"src": "1864:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 202,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1937:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1937:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1955:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1937:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"nodeType": "IfStatement",
												"src": "1933:84:2",
												"trueBody": {
													"expression": {
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 207,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1958:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 208,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1967:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1975:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "1967:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 211,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1966:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2014:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1966:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1958:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 215,
													"nodeType": "ExpressionStatement",
													"src": "1958:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 217,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2031:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2031:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2049:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2031:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "IfStatement",
												"src": "2027:84:2",
												"trueBody": {
													"expression": {
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 222,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2052:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 223,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2061:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2069:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2061:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2060:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2060:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2052:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"nodeType": "ExpressionStatement",
													"src": "2052:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 232,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2125:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2135:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2125:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2143:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2125:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "IfStatement",
												"src": "2121:84:2",
												"trueBody": {
													"expression": {
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 237,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2146:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 238,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2155:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2163:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2155:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 241,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2154:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2202:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2154:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2146:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 245,
													"nodeType": "ExpressionStatement",
													"src": "2146:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 247,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2219:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2237:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2219:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"nodeType": "IfStatement",
												"src": "2215:84:2",
												"trueBody": {
													"expression": {
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 252,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2240:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 253,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2249:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2257:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2249:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2248:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2296:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2248:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2240:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 260,
													"nodeType": "ExpressionStatement",
													"src": "2240:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 262,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2323:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2313:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2332:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2313:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "IfStatement",
												"src": "2309:85:2",
												"trueBody": {
													"expression": {
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 267,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2335:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 268,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2344:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2352:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2344:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2343:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2391:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2343:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2335:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 275,
													"nodeType": "ExpressionStatement",
													"src": "2335:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 277,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2418:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2408:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2427:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2408:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2404:85:2",
												"trueBody": {
													"expression": {
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 282,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2430:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 283,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2439:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2447:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2439:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2438:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2486:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2438:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2430:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 290,
													"nodeType": "ExpressionStatement",
													"src": "2430:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 292,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2503:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2522:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2503:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2499:85:2",
												"trueBody": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 297,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2525:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 298,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2534:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2542:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2534:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2533:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2581:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2533:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2525:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2525:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 307,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2608:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2598:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2617:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2598:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "IfStatement",
												"src": "2594:85:2",
												"trueBody": {
													"expression": {
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 312,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2620:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 313,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2629:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2637:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2629:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2628:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2628:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2620:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 320,
													"nodeType": "ExpressionStatement",
													"src": "2620:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 322,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2693:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2703:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2693:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2713:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2693:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "IfStatement",
												"src": "2689:86:2",
												"trueBody": {
													"expression": {
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 327,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2716:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 328,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2725:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2733:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2725:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2724:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2772:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2724:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2716:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 335,
													"nodeType": "ExpressionStatement",
													"src": "2716:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 337,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2789:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2789:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2809:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2789:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "2785:86:2",
												"trueBody": {
													"expression": {
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 342,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2812:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 343,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2821:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2829:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2821:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2820:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2868:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2820:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2812:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 350,
													"nodeType": "ExpressionStatement",
													"src": "2812:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 352,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2885:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2895:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2885:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2905:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2885:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2881:86:2",
												"trueBody": {
													"expression": {
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 357,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2908:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 358,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2917:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2925:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2917:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2916:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2916:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2908:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 365,
													"nodeType": "ExpressionStatement",
													"src": "2908:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 367,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2981:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2991:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "2981:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3001:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2981:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "2977:86:2",
												"trueBody": {
													"expression": {
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 372,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3004:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 373,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "3013:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3021:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3013:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 376,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3012:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3060:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3012:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3004:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 380,
													"nodeType": "ExpressionStatement",
													"src": "3004:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 382,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3077:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3087:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3077:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3098:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3077:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "3073:86:2",
												"trueBody": {
													"expression": {
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 387,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 388,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "3110:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3118:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3110:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 391,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3109:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3156:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3109:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3101:58:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 395,
													"nodeType": "ExpressionStatement",
													"src": "3101:58:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 397,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3173:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3173:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3194:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3173:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "3169:85:2",
												"trueBody": {
													"expression": {
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 402,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 403,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "3206:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3214:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3206:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 406,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3205:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3251:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3205:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3197:57:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ExpressionStatement",
													"src": "3197:57:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 412,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3268:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3278:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3268:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3289:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3268:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "3264:83:2",
												"trueBody": {
													"expression": {
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 417,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3292:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 418,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "3301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3309:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3301:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3300:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3344:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3300:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3292:55:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 425,
													"nodeType": "ExpressionStatement",
													"src": "3292:55:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 427,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3361:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3361:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3382:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3361:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "3357:78:2",
												"trueBody": {
													"expression": {
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 432,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3385:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "3394:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3402:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3394:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3393:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3432:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3393:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3385:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 440,
													"nodeType": "ExpressionStatement",
													"src": "3385:50:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 442,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3450:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3457:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3450:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "3446:47:2",
												"trueBody": {
													"expression": {
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 445,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3460:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3473:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 447,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3473:7:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 446,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3468:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3468:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3468:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 451,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "3488:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3468:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3460:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 454,
													"nodeType": "ExpressionStatement",
													"src": "3460:33:2"
												}
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 459,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "3827:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3836:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3827:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3826:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 463,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 147,
																						"src": "3843:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 466,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 464,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3852:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 465,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3857:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3852:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 467,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3851:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3843:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3864:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3843:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3872:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3843:30:2",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3868:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3842:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3826:48:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3818:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 457,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3818:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3818:57:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3803:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "3803:72:2"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "1052:297:2",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1382:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 118,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1382:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:12:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1417:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 121,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:22:2"
									},
									"scope": 620,
									"src": "1354:2528:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4386:4196:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4503:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 490,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "4519:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4503:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 492,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4537:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 493,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "4552:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4537:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4503:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4568:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4495:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "4495:77:2"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "4582:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4582:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "4606:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 501,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4598:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4598:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4623:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4598:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4582:43:2"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "4636:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"id": 510,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 500,
													"src": "4648:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4636:17:2"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "4663:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4663:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"hexValue": "30",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4677:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4663:15:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4698:139:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4712:58:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:1:2",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4731:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4734:34:2",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4728:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:41:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4721:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:49:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4716:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4783:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4793:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4798:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4790:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4813:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4822:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4825:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4818:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4813:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "4783:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "4793:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4731:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4813:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4825:1:2",
														"valueSize": 1
													}
												],
												"id": 516,
												"nodeType": "InlineAssembly",
												"src": "4689:148:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4855:123:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4869:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4882:1:2",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4888:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:18:2",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4885:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4885:25:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:33:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4873:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4924:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4934:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4939:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4931:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4963:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4966:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4954:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "4924:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "4934:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4888:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4954:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "4966:1:2",
														"valueSize": 1
													}
												],
												"id": 517,
												"nodeType": "InlineAssembly",
												"src": "4846:132:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4996:115:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5010:34:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:1:2",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5029:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:10:2",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5026:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5026:17:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:25:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5014:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5067:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5072:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5064:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5087:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5096:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5099:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5087:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5057:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5067:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5029:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5087:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5099:1:2",
														"valueSize": 1
													}
												],
												"id": 518,
												"nodeType": "InlineAssembly",
												"src": "4987:124:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5129:111:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5143:30:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5156:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5162:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5165:6:2",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5159:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5159:13:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:21:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5147:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5196:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5201:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5193:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5216:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5225:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5228:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5216:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5186:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5196:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5162:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5216:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5228:1:2",
														"valueSize": 1
													}
												],
												"id": 519,
												"nodeType": "InlineAssembly",
												"src": "5120:120:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5258:109:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5272:28:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:1:2",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5291:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5294:4:2",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5288:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:11:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:19:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5276:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5313:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5328:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5320:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5343:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5352:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5355:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5343:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5313:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5323:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5291:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5343:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5355:1:2",
														"valueSize": 1
													}
												],
												"id": 520,
												"nodeType": "InlineAssembly",
												"src": "5249:118:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5385:108:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5399:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5418:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5421:3:2",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5415:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:10:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:18:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5403:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5439:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5449:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5454:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5446:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5469:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5478:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5481:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5469:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5439:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5449:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5418:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5469:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5481:1:2",
														"valueSize": 1
													}
												],
												"id": 521,
												"nodeType": "InlineAssembly",
												"src": "5376:117:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5511:108:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5525:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5544:1:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5547:3:2",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5541:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5541:10:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:18:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5529:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5565:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5580:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5572:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5565:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5595:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5604:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5607:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5595:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5565:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5575:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5544:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5595:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5607:1:2",
														"valueSize": 1
													}
												],
												"id": 522,
												"nodeType": "InlineAssembly",
												"src": "5502:117:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5637:73:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5663:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:3:2",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5660:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:10:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5655:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5683:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5693:3:2"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5698:1:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:10:2"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5683:3:2",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "5693:3:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5663:1:2",
														"valueSize": 1
													}
												],
												"id": 523,
												"nodeType": "InlineAssembly",
												"src": "5628:82:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "5724:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5731:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5724:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 536,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5775:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "5779:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5789:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 539,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "5795:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5789:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5788:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5779:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5775:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 544,
													"nodeType": "ExpressionStatement",
													"src": "5775:24:2"
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "5720:79:2",
												"trueBody": {
													"expression": {
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 527,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5736:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "5740:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 529,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "5750:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5756:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5750:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 532,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5749:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5740:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5736:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 535,
													"nodeType": "ExpressionStatement",
													"src": "5736:24:2"
												}
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "5810:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 546,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5810:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 550,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "5833:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5826:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 548,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5826:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5826:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5826:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5825:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5848:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5825:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5810:40:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5870:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5884:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5893:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5902:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5905:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5898:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5898:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5884:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5921:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5934:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5939:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5925:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5954:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "5966:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:2",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "5981:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5973:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5963:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "5954:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6006:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6009:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5997:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "5954:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5884:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5902:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5905:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5939:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "5997:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6009:1:2",
														"valueSize": 1
													}
												],
												"id": 558,
												"nodeType": "InlineAssembly",
												"src": "5861:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6039:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6053:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6062:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6071:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6074:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6067:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6053:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6090:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6103:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6108:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6099:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6094:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6123:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6135:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6146:2:2",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6150:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6132:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6123:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6166:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6175:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6178:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6166:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6123:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6053:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6071:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6074:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6108:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6166:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6178:1:2",
														"valueSize": 1
													}
												],
												"id": 559,
												"nodeType": "InlineAssembly",
												"src": "6030:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6208:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6222:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6240:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6243:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6227:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6222:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6259:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6277:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6263:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6292:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6304:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6315:2:2",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6319:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6311:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6301:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6292:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6335:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6344:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6347:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6335:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6292:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6222:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6240:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6243:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6277:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6335:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6347:1:2",
														"valueSize": 1
													}
												],
												"id": 560,
												"nodeType": "InlineAssembly",
												"src": "6199:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6377:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6391:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6409:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6412:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6405:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6391:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6428:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6446:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6432:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6461:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6473:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6484:2:2",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6488:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6480:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6480:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6470:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6470:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6461:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6504:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6513:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6516:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6504:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6461:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6391:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6409:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6412:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6446:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6504:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6516:1:2",
														"valueSize": 1
													}
												],
												"id": 561,
												"nodeType": "InlineAssembly",
												"src": "6368:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6546:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6560:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6578:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6581:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6574:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6574:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6565:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6560:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6597:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6610:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6615:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6606:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6606:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6601:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6630:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6642:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:2",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6657:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6639:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6630:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6673:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6682:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6685:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6673:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6630:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6560:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6578:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6581:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6615:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6673:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6685:1:2",
														"valueSize": 1
													}
												],
												"id": 562,
												"nodeType": "InlineAssembly",
												"src": "6537:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6715:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6729:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6738:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6747:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6750:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6729:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6766:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6784:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6770:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6799:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6811:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6822:2:2",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6826:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6818:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6818:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6808:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6799:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6842:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6842:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6799:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6729:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6747:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6750:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6784:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6842:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6854:1:2",
														"valueSize": 1
													}
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "6706:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6884:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6898:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6907:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6916:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6919:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6898:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6935:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6953:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6939:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6968:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6980:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6991:2:2",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6995:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6987:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6968:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7011:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7020:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7011:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6968:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6898:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6916:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6919:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6953:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7011:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7023:1:2",
														"valueSize": 1
													}
												],
												"id": 564,
												"nodeType": "InlineAssembly",
												"src": "6875:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7053:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7067:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7085:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7088:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7067:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7104:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7122:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7108:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7137:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7149:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:2",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7164:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7156:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7146:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7137:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7180:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7189:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7185:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7180:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7137:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7067:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7085:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7088:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7122:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7180:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7192:1:2",
														"valueSize": 1
													}
												],
												"id": 565,
												"nodeType": "InlineAssembly",
												"src": "7044:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7222:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7236:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7245:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7254:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7257:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7250:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7241:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7236:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7273:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7291:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7282:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7277:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7306:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7318:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7329:2:2",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7333:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7315:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7306:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7349:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7358:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7361:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7349:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7306:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7236:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7254:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7257:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7291:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7349:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7361:1:2",
														"valueSize": 1
													}
												],
												"id": 566,
												"nodeType": "InlineAssembly",
												"src": "7213:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7391:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7405:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7414:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7423:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7426:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7405:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7442:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7455:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7460:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7446:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7475:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7487:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:2",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7502:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7494:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7484:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7475:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7518:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7518:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7475:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7405:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7423:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7426:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7460:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7518:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7530:1:2",
														"valueSize": 1
													}
												],
												"id": 567,
												"nodeType": "InlineAssembly",
												"src": "7382:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7560:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7574:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7592:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7595:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7588:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7579:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7574:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7611:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7624:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7629:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7615:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7644:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7656:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7667:2:2",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7671:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7653:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7644:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7687:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7696:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7699:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7692:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7687:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7644:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7574:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7592:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7595:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7629:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7687:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7699:1:2",
														"valueSize": 1
													}
												],
												"id": 568,
												"nodeType": "InlineAssembly",
												"src": "7551:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7729:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7743:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7752:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7761:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7764:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7757:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7748:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7743:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7780:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7793:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7789:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7784:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7813:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7825:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7836:2:2",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7840:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7822:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7813:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7856:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7865:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7868:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7856:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7813:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7743:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7761:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7764:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7798:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7856:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7868:1:2",
														"valueSize": 1
													}
												],
												"id": 569,
												"nodeType": "InlineAssembly",
												"src": "7720:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7898:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7912:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7930:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7933:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7917:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7912:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7949:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7962:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7967:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7953:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7982:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7994:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:2",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8009:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8001:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8001:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7991:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7982:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8025:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:2"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8037:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8030:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8025:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7982:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7912:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7930:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7933:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "7967:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8025:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8037:1:2",
														"valueSize": 1
													}
												],
												"id": 570,
												"nodeType": "InlineAssembly",
												"src": "7889:160:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8067:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8081:24:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:3:2",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8099:1:2"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8102:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8095:9:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:19:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8081:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8118:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8131:3:2",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8136:1:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:11:2"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8122:1:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8151:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8163:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8174:2:2",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8178:1:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8170:10:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8160:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:21:2"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8151:5:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "8151:5:2",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:5:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8081:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8099:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8102:1:2",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "8136:1:2",
														"valueSize": 1
													}
												],
												"id": 571,
												"nodeType": "InlineAssembly",
												"src": "8058:133:2"
											},
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "8201:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 572,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8201:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8224:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8232:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8224:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8201:55:2"
											},
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "8285:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 578,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8285:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 582,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "8308:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8324:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8308:53:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 585,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8307:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8366:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8307:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8301:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 580,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8301:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8301:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8285:85:2"
											},
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "8380:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 590,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8380:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 594,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "8402:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8418:39:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8402:55:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8401:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8462:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8401:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8395:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 592,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8395:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8380:86:2"
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "8477:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "8484:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 604,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "8495:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8484:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 608,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "8533:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 607,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8514:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8514:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 610,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "8544:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8514:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 613,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "8568:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8514:61:2",
															"trueExpression": {
																"id": 612,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "8559:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8484:91:2",
														"trueExpression": {
															"id": 606,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8504:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8477:98:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "8477:98:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3888:408:2",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4329:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 482,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:2"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 485,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4374:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:12:2"
									},
									"scope": 620,
									"src": "4301:4281:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 621,
							"src": "305:8279:2"
						}
					],
					"src": "45:8540:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							791
						]
					},
					"id": 792,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 622,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 623,
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													636,
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 635,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 637,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 643,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 639,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 654,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 662,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 661,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 663,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 658,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 791,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													683,
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 682,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 684,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 690,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 693,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 686,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 700,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 706,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 708,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 707,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 709,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 704,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 712,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 791,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													729,
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 728,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 730,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 736,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 739,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 734,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 732,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 745,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 746,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 731,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 752,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 731,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 754,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 753,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 755,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 750,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 758,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 791,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													773,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 772,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 783,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 778,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 774,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 791,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 792,
							"src": "129:2408:3"
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/uniswapv3lp.sol": {
				"ast": {
					"absolutePath": "contracts/uniswapv3lp.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC721Receiver": [
							95
						],
						"INonfungiblePositionManager": [
							1609
						],
						"LiquidityExamples": [
							1429
						],
						"TickMath": [
							620
						],
						"TransferHelper": [
							791
						]
					},
					"id": 1430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"id": 794,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "58:19:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 795,
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 96,
							"src": "81:66:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/INonfungiblePositionManager.sol",
							"file": "../interfaces/INonfungiblePositionManager.sol",
							"id": 796,
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 1610,
							"src": "149:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 797,
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 792,
							"src": "206:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 798,
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 621,
							"src": "278:59:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 799,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "371:15:4"
									},
									"id": 800,
									"nodeType": "InheritanceSpecifier",
									"src": "371:15:4"
								}
							],
							"contractDependencies": [
								95
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1429,
							"linearizedBaseContracts": [
								1429,
								95
							],
							"name": "LiquidityExamples",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "b44a2722",
									"id": 806,
									"mutability": "constant",
									"name": "nonfungiblePositionManager",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "394:144:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
										"typeString": "contract INonfungiblePositionManager"
									},
									"typeName": {
										"id": 802,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 801,
											"name": "INonfungiblePositionManager",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1609,
											"src": "394:27:4"
										},
										"referencedDeclaration": 1609,
										"src": "394:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
												"id": 804,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "495:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 803,
											"name": "INonfungiblePositionManager",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1609,
											"src": "467:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
												"typeString": "type(contract INonfungiblePositionManager)"
											}
										},
										"id": 805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "467:71:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0bab4c4",
									"id": 809,
									"mutability": "constant",
									"name": "DAI",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "545:72:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 807,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "545:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307844413130303039634264354430376464304365436336363136314643393344376339303030646131",
										"id": 808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "575:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89a30271",
									"id": 812,
									"mutability": "constant",
									"name": "USDC",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "624:73:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833444234423744413637646435614636314362396233433730353031423142644232346232433232",
										"id": 811,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "655:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 815,
									"mutability": "constant",
									"name": "poolFee",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "704:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 813,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "704:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "737:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityExamples.Deposit",
									"id": 824,
									"members": [
										{
											"constant": false,
											"id": 817,
											"mutability": "mutable",
											"name": "owner",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "825:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 816,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "825:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 819,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "849:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 818,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 821,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "877:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 820,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "877:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 823,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 824,
											"src": "902:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 822,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "902:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nodeType": "StructDefinition",
									"scope": 1429,
									"src": "799:125:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "932:37:4",
										"text": "@dev deposits[tokenId] => Deposit"
									},
									"functionSelector": "b02c43d0",
									"id": 830,
									"mutability": "mutable",
									"name": "deposits",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "975:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
										"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit)"
									},
									"typeName": {
										"id": 829,
										"keyType": {
											"id": 826,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "983:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "975:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
											"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit)"
										},
										"valueType": {
											"id": 828,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 827,
												"name": "Deposit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "994:7:4"
											},
											"referencedDeclaration": 824,
											"src": "994:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$824_storage_ptr",
												"typeString": "struct LiquidityExamples.Deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1362:188:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 845,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1381:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1381:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 849,
																		"name": "nonfungiblePositionManager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1403:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1395:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1395:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1395:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1381:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206120756e697633206e6674",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1432:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e",
																"typeString": "literal_string \"not a univ3 nft\""
															},
															"value": "not a univ3 nft"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e",
																"typeString": "literal_string \"not a univ3 nft\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1373:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1373:77:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1476:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "1486:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 855,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "1461:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "1461:33:4"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 860,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1512:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																"typeString": "contract LiquidityExamples"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "1512:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1512:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 843,
												"id": 863,
												"nodeType": "Return",
												"src": "1505:37:4"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 840,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1336:8:4"
									},
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1234:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1261:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1279:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1305:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1305:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:103:4"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1354:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 841,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1354:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:8:4"
									},
									"scope": 1429,
									"src": "1198:352:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "1623:305:4",
										"statements": [
											{
												"assignments": [
													null,
													null,
													873,
													875,
													null,
													null,
													null,
													877,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "1639:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 872,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1639:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "1655:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 874,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1655:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "1677:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 876,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1677:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 880,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "1756:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 878,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "1719:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1496,
														"src": "1719:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1634:130:4"
											},
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 883,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1823:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 885,
														"indexExpression": {
															"id": 884,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "1832:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1823:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 887,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "1859:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 888,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "1877:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 889,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "1896:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 890,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "1912:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 886,
															"name": "Deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "1843:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Deposit_$824_storage_ptr_$",
																"typeString": "type(struct LiquidityExamples.Deposit storage pointer)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"owner",
															"liquidity",
															"token0",
															"token1"
														],
														"nodeType": "FunctionCall",
														"src": "1843:77:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_memory_ptr",
															"typeString": "struct LiquidityExamples.Deposit memory"
														}
													},
													"src": "1823:97:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$824_storage",
														"typeString": "struct LiquidityExamples.Deposit storage ref"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "1823:97:4"
											}
										]
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1582:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1597:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:32:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:0:4"
									},
									"scope": 1429,
									"src": "1558:370:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "2539:2323:4",
										"statements": [
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "amount0ToMint",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "2751:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2751:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"hexValue": "313030303030303030",
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2775:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000_by_1",
														"typeString": "int_const 100000000"
													},
													"value": "100000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2751:33:4"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "amount1ToMint",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "2795:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2795:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"hexValue": "313030393430303030",
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2819:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100940000_by_1",
														"typeString": "int_const 100940000"
													},
													"value": "100940000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2795:33:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 918,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "2913:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 919,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2919:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2919:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 923,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2939:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2931:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 921,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2931:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2931:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "2946:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 915,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2881:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "2881:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2881:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2881:79:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 931,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3003:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 932,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3008:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3008:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 936,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3028:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3020:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 934,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3020:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3020:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "3035:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 928,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2971:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "2971:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2971:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "2971:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "3130:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 947,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3144:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3136:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3136:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3136:35:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3173:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 941,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3103:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "3103:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:84:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "3103:84:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3225:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 958,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3238:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3230:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3230:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3230:35:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "3267:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 952,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3198:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "3198:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "3198:83:4"
											},
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "3443:52:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1519_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.MintParams"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "INonfungiblePositionManager.MintParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1519,
																"src": "3443:38:4"
															},
															"referencedDeclaration": 1519,
															"src": "3443:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1519_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"id": 970,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "3577:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3608:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3635:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "3672:5:4",
															"subExpression": {
																"hexValue": "31303530",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3673:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1050_by_1",
																	"typeString": "int_const 1050"
																},
																"value": "1050"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_rational_minus_1050_by_1",
																"typeString": "int_const -1050"
															}
														},
														{
															"hexValue": "31303430",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3707:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1040_by_1",
																"typeString": "int_const 1040"
															},
															"value": "1040"
														},
														{
															"id": 976,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3746:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 977,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "3794:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3838:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3870:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3909:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3901:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 984,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3943:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3943:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_rational_minus_1050_by_1",
																"typeString": "int_const -1050"
															},
															{
																"typeIdentifier": "t_rational_1040_by_1",
																"typeString": "int_const 1040"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 968,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "3511:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "MintParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1519,
														"src": "3511:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MintParams_$1519_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee",
														"tickLower",
														"tickUpper",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"recipient",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "3511:463:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1519_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3443:531:4"
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 988,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4114:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 989,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4123:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 990,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "4134:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 991,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "4143:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 992,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4113:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 995,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4186:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintParams_$1519_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_MintParams_$1519_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															],
															"expression": {
																"id": 993,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "4154:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1534,
															"src": "4154:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1519_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4154:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"src": "4113:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "4113:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1000,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4250:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4250:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4262:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 999,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "4235:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4235:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "4235:35:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4343:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1006,
														"name": "amount0ToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "4353:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4343:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "4339:253:4",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "4368:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1011,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "4410:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1014,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "4424:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4416:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1012,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4416:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4416:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1008,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "4383:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 764,
																	"src": "4383:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4383:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1018,
															"nodeType": "ExpressionStatement",
															"src": "4383:72:4"
														},
														{
															"assignments": [
																1020
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1020,
																	"mutability": "mutable",
																	"name": "refund0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1034,
																	"src": "4470:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1019,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4470:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1024,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1021,
																	"name": "amount0ToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "4488:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1022,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "4504:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4488:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4470:41:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1028,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "4554:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1029,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4560:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4560:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1031,
																		"name": "refund0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "4572:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1025,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "4526:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 718,
																	"src": "4526:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4526:54:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "ExpressionStatement",
															"src": "4526:54:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "4608:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1037,
														"name": "amount1ToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4618:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4608:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "IfStatement",
												"src": "4604:251:4",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "4633:222:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1042,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4675:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1045,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "4688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4680:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4680:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4680:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1039,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "4648:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 764,
																	"src": "4648:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4648:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "4648:71:4"
														},
														{
															"assignments": [
																1051
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1051,
																	"mutability": "mutable",
																	"name": "refund1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1065,
																	"src": "4734:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1050,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4734:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1055,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1052,
																	"name": "amount1ToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4752:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1053,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "4768:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4752:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4734:41:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1059,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "4818:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1060,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4823:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4823:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1062,
																		"name": "refund1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "4835:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1056,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "4790:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 718,
																	"src": "4790:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4790:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1064,
															"nodeType": "ExpressionStatement",
															"src": "4790:53:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "1936:392:4",
										"text": "@notice Calls the mint function defined in periphery, mints the same amount of each token.\n For this example we are providing 1000 DAI and 1000 USDC in liquidity\n @return tokenId The id of the newly minted ERC721\n @return liquidity The amount of liquidity for the position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "306d9c61",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNewPosition",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:2:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2411:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2441:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 900,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2503:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2396:133:4"
									},
									"scope": 1429,
									"src": "2334:2528:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "5293:762:4",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 1117,
														"src": "5570:55:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.CollectParams"
														},
														"typeName": {
															"id": 1081,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1080,
																"name": "INonfungiblePositionManager.CollectParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1591,
																"src": "5570:41:4"
															},
															"referencedDeclaration": 1591,
															"src": "5570:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1591_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "5711:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1088,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5756:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5748:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1086,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5748:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5748:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5797:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1091,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "5797:7:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1090,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5792:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5792:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5792:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5845:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1096,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "5845:7:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1095,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5840:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5840:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5840:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1083,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "5641:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "CollectParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "5641:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CollectParams_$1591_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"recipient",
														"amount0Max",
														"amount1Max"
													],
													"nodeType": "FunctionCall",
													"src": "5641:232:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5570:303:4"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1102,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "5887:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1103,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "5896:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1104,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5886:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1107,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "5942:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															],
															"expression": {
																"id": 1105,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5907:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "collect",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1602,
															"src": "5907:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$1591_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5907:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "5886:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "5886:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1112,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "6021:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1113,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "6030:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1114,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "6039:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1111,
														"name": "_sendToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6008:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "6008:39:4"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "4870:324:4",
										"text": "@notice Collects the fees associated with provided liquidity\n @dev The contract must hold the erc721 token before it can collect fees\n @param tokenId The id of the erc721 token\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "46ce96dd",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collectAllFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5224:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5223:17:4"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5259:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5276:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5258:34:4"
									},
									"scope": 1429,
									"src": "5200:855:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "6496:1398:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1129,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6563:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6563:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1131,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "6577:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																			"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"id": 1132,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "6586:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6577:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Deposit_$824_storage",
																		"typeString": "struct LiquidityExamples.Deposit storage ref"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 817,
																"src": "6577:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6563:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6602:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6555:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6555:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "6555:63:4"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "6672:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1139,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6672:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1141,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6692:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "6701:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6692:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 819,
													"src": "6692:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6672:47:4"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "halfLiquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "6730:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1146,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1148,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "6754:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6766:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "6754:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6730:37:4"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "6951:65:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
														},
														"typeName": {
															"id": 1155,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1154,
																"name": "INonfungiblePositionManager.DecreaseLiquidityParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1571,
																"src": "6951:51:4"
															},
															"referencedDeclaration": 1571,
															"src": "6951:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"id": 1159,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "7112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1160,
															"name": "halfLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "7149:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"hexValue": "30",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7225:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1163,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7255:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7255:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1157,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "7032:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "DecreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1571,
														"src": "7032:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$1571_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"liquidity",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "7032:254:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6951:335:4"
											},
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "params2",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "7307:56:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.CollectParams"
														},
														"typeName": {
															"id": 1170,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1169,
																"name": "INonfungiblePositionManager.CollectParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1591,
																"src": "7307:41:4"
															},
															"referencedDeclaration": 1591,
															"src": "7307:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1591_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [
														{
															"id": 1174,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "7449:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7494:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7486:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7486:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7486:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "333430323832333636393230393338343633343633333734363037343331373638323131343535",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7529:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															"value": "340282366920938463463374607431768211455"
														},
														{
															"hexValue": "333430323832333636393230393338343633343633333734363037343331373638323131343535",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7598:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															"value": "340282366920938463463374607431768211455"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															{
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															}
														],
														"expression": {
															"id": 1172,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "7379:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "CollectParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "7379:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CollectParams_$1591_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"recipient",
														"amount0Max",
														"amount1Max"
													],
													"nodeType": "FunctionCall",
													"src": "7379:274:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7307:346:4"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1183,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "7667:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1184,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "7676:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7666:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1188,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7732:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 1186,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7687:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decreaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1582,
															"src": "7687:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$1571_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7687:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "7666:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "7666:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "params2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "7785:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_CollectParams_$1591_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams memory"
															}
														],
														"expression": {
															"id": 1192,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "7750:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "collect",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "7750:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$1591_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7750:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "7750:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "7860:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1200,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "7869:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "7878:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_sendToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "7847:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7847:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "7847:39:4"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "6063:325:4",
										"text": "@notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\n @param tokenId The id of the erc721 token\n @return amount0 The amount received back in token0\n @return amount1 The amount returned back in token1"
									},
									"functionSelector": "8187b4c5",
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidityInHalf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6426:17:4"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6462:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "6479:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6479:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:34:4"
									},
									"scope": 1429,
									"src": "6394:1500:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "8453:1562:4",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "8464:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1221,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8464:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1223,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "8481:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1225,
														"indexExpression": {
															"id": 1224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "8490:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8481:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 821,
													"src": "8481:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8464:41:4"
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "8516:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1228,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8516:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1230,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "8533:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1232,
														"indexExpression": {
															"id": 1231,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "8542:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8533:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 823,
													"src": "8533:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8516:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "8600:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1239,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8608:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8608:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1243,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8628:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8620:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1241,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8620:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "8635:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1235,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8568:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "8568:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8568:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "8568:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "8689:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1252,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8697:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8697:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1256,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8717:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1429",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8709:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8709:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "8724:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1248,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8657:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "8657:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8657:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "8657:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1264,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "8775:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1267,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "8791:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8783:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8783:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8783:35:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "8820:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1261,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8748:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "8748:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "8748:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1275,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "8869:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1278,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "8885:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8877:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8877:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8877:35:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "8914:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1272,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8842:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "8842:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8842:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "8842:83:4"
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "8938:65:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
														},
														"typeName": {
															"id": 1286,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1285,
																"name": "INonfungiblePositionManager.IncreaseLiquidityParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1547,
																"src": "8938:51:4"
															},
															"referencedDeclaration": 1547,
															"src": "8938:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"arguments": [
														{
															"id": 1290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9099:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1291,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9141:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1292,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9186:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9227:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9259:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1295,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9289:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9289:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1288,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "9019:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1609_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "IncreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "9019:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$1547_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "9019:301:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8938:382:4"
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1299,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "9334:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1300,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "9345:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1301,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "9354:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9333:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1305,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "9410:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 1303,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "9365:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "increaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1560,
															"src": "9365:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$1547_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9365:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"src": "9333:84:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "9333:84:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1309,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "9498:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1310,
														"name": "amountAdd0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9508:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9498:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "9494:251:4",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "9520:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "9562:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1318,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "9578:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9570:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1316,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9570:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9570:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9607:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1312,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "9535:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 764,
																	"src": "9535:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9535:74:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "9535:74:4"
														},
														{
															"assignments": [
																1324
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1324,
																	"mutability": "mutable",
																	"name": "refund0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1338,
																	"src": "9624:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9624:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1328,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1325,
																	"name": "amountAdd0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "9642:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1326,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "9655:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9642:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9624:38:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1332,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "9705:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1333,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9713:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9713:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1335,
																		"name": "refund0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "9725:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1329,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "9677:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 718,
																	"src": "9677:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9677:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "9677:56:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "9761:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1341,
														"name": "amountAdd1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "9771:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9761:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "9757:251:4",
												"trueBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "9783:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1346,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "9825:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1349,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "9841:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1609",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9833:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9833:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9833:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1343,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "9798:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 764,
																	"src": "9798:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9798:74:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1353,
															"nodeType": "ExpressionStatement",
															"src": "9798:74:4"
														},
														{
															"assignments": [
																1355
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1355,
																	"mutability": "mutable",
																	"name": "refund1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1369,
																	"src": "9887:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1354,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9887:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1359,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "amountAdd1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "9905:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1357,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "9918:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9905:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9887:38:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1363,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "9968:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1364,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9976:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9976:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1366,
																		"name": "refund1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "9988:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "9940:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 718,
																	"src": "9940:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9940:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1368,
															"nodeType": "ExpressionStatement",
															"src": "9940:56:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "7902:271:4",
										"text": "@notice Increases liquidity in the current range\n @dev Pool must be initialized already to add liquidity\n @param tokenId The id of the erc721 token\n @param amount0 The amount to add of token0\n @param amount1 The amount to add of token1"
									},
									"functionSelector": "617d6d6e",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidityCurrentRange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8228:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8228:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "amountAdd0",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8254:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8254:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amountAdd1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8283:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8217:91:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8359:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1214,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8359:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8391:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8344:103:4"
									},
									"scope": 1429,
									"src": "8179:1836:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "10322:381:4",
										"statements": [
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "10367:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1382,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10367:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1384,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "10383:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1386,
														"indexExpression": {
															"id": 1385,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "10392:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10383:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 817,
													"src": "10383:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10367:39:4"
											},
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "10419:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10419:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1391,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "10436:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1393,
														"indexExpression": {
															"id": 1392,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "10445:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10436:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 821,
													"src": "10436:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10419:41:4"
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "10471:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1396,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10471:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1398,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "10488:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$824_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1400,
														"indexExpression": {
															"id": 1399,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "10497:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10488:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$824_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 823,
													"src": "10488:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10471:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "10592:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "10600:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1408,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "10607:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393930",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10615:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_990_by_1",
																		"typeString": "int_const 990"
																	},
																	"value": "990"
																},
																"src": "10607:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10619:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "10607:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1403,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "10564:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "10564:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10564:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "10564:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1418,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "10663:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1419,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "10671:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1420,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "10678:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393930",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10686:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_990_by_1",
																		"typeString": "int_const 990"
																	},
																	"value": "990"
																},
																"src": "10678:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10690:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "10678:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1415,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "10635:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$791_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "10635:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10635:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "10635:60:4"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "10023:178:4",
										"text": "@notice Transfers funds to owner of NFT\n @param tokenId The id of the erc721\n @param amount0 The amount of token0\n @param amount1 The amount of token1"
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "10239:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "10265:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "10291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10228:85:4"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10322:0:4"
									},
									"scope": 1429,
									"src": "10207:496:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1430,
							"src": "341:10367:4"
						}
					],
					"src": "33:10675:4"
				},
				"id": 4
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"INonfungiblePositionManager": [
							1609
						]
					},
					"id": 1610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1431,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"id": 1432,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "59:19:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "82:180:5",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1609,
							"linearizedBaseContracts": [
								1609
							],
							"name": "INonfungiblePositionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "308:463:5",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 1444,
									"name": "IncreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "801:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "826:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1437,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "845:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "862:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:78:5"
									},
									"src": "777:102:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "885:423:5",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 1455,
									"name": "DecreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1338:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1363:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1448,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1382:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "1399:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:78:5"
									},
									"src": "1314:102:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "1422:527:5",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 1466,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1969:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1994:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2013:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2030:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:78:5"
									},
									"src": "1955:92:5"
								},
								{
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "2055:1171:5",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3251:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:17:5"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3332:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1471,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3332:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3359:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3390:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3419:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3448:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1479,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1481,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3473:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3503:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1483,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3503:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3533:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1485,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3565:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3612:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3659:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1491,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3693:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1493,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:406:5"
									},
									"scope": 1609,
									"src": "3232:492:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1519,
									"members": [
										{
											"constant": false,
											"id": 1498,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3761:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1497,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3761:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3786:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1499,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3786:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1502,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3811:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1501,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3811:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1504,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3832:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1503,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "3832:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1506,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3858:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1505,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "3858:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1508,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3884:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1507,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3884:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1510,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3917:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1509,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3917:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1512,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3950:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1511,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3950:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1514,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "3979:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1513,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3979:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1516,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "4008:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1515,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4008:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1518,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "4036:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1517,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4036:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nodeType": "StructDefinition",
									"scope": 1609,
									"src": "3732:328:5",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "4068:593:5",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4681:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1519_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1521,
														"name": "MintParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1519,
														"src": "4681:10:5"
													},
													"referencedDeclaration": 1519,
													"src": "4681:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1519_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:28:5"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4776:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4806:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1527,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "4868:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4761:133:5"
									},
									"scope": 1609,
									"src": "4667:228:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1547,
									"members": [
										{
											"constant": false,
											"id": 1536,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "4945:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1535,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4945:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "4971:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1537,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4971:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1540,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "5004:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1539,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5004:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1542,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "5037:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5037:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1544,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "5066:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1543,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5066:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "5095:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5095:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1609,
									"src": "4903:216:5",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "5127:830:5",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "5990:39:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "IncreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1547,
														"src": "5990:23:5"
													},
													"referencedDeclaration": 1547,
													"src": "5990:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1547_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5989:41:5"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "6098:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1553,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "6130:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "6160:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6083:103:5"
									},
									"scope": 1609,
									"src": "5963:224:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1571,
									"members": [
										{
											"constant": false,
											"id": 1562,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "6237:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1561,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6237:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1564,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "6263:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1563,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6263:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1566,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "6291:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1565,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6291:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1568,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "6320:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1567,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6320:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1570,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1571,
											"src": "6349:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1569,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6349:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1609,
									"src": "6195:178:5",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "6381:709:5",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "7123:39:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1573,
														"name": "DecreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "7123:23:5"
													},
													"referencedDeclaration": 1571,
													"src": "7123:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1571_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:41:5"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "7217:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7217:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "7234:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:34:5"
									},
									"scope": 1609,
									"src": "7096:155:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1591,
									"members": [
										{
											"constant": false,
											"id": 1584,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1591,
											"src": "7291:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1583,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7291:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1586,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1591,
											"src": "7317:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1585,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7317:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1588,
											"mutability": "mutable",
											"name": "amount0Max",
											"nodeType": "VariableDeclaration",
											"scope": 1591,
											"src": "7345:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1587,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7345:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1590,
											"mutability": "mutable",
											"name": "amount1Max",
											"nodeType": "VariableDeclaration",
											"scope": 1591,
											"src": "7374:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1589,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7374:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nodeType": "StructDefinition",
									"scope": 1609,
									"src": "7259:141:5",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "7408:495:5",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "7926:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1591_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1594,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1593,
														"name": "CollectParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1591,
														"src": "7926:13:5"
													},
													"referencedDeclaration": 1591,
													"src": "7926:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1591_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:31:5"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "7983:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "8000:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7982:34:5"
									},
									"scope": 1609,
									"src": "7909:108:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "8025:215:5",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "8260:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:17:5"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8293:0:5"
									},
									"scope": 1609,
									"src": "8246:48:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1610,
							"src": "262:8035:5"
						}
					],
					"src": "33:8264:5"
				},
				"id": 5
			}
		}
	}
}