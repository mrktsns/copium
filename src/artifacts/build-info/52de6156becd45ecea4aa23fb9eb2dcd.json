{
	"id": "52de6156becd45ecea4aa23fb9eb2dcd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/uniswapv3lp.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport '../interfaces/INonfungiblePositionManager.sol';\r\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\r\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ninterface LPtoken is IERC20 {\r\n    function mint(address recipient, uint256 _amount) external;\r\n    function burn(address _from, uint256 _amount) external ;\r\n}\r\n\r\ncontract LiquidityExamples is IERC721Receiver,Ownable {\r\n    INonfungiblePositionManager public constant nonfungiblePositionManager = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88);\r\n    address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1;\r\n    address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22;\r\n    uint24 public constant poolFee = 500;\r\n\r\n\r\n    /// @notice Represents the deposit of an NFT\r\n    struct Deposit {\r\n        address owner;\r\n        uint128 liquidity;\r\n        address token0;\r\n        address token1;\r\n      \r\n    }\r\n\r\n    /// @dev deposits[tokenId] => Deposit\r\n    mapping(uint256 => Deposit) public deposits;\r\n\r\n    mapping(uint256 => LPtoken) public LPs;\r\n\r\n    // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens\r\n    // Note that the operator is recorded as the owner of the deposited NFT\r\n    function onERC721Received(\r\n        address operator,\r\n        address,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external override returns (bytes4) {\r\n        require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft');\r\n        _createDeposit(operator, tokenId);\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function _createDeposit(address owner, uint256 tokenId) internal {\r\n        (, , address token0, address token1, , , , uint128 liquidity, , , , ) =\r\n            nonfungiblePositionManager.positions(tokenId);\r\n        // set the owner and data for position\r\n        deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1});\r\n    }\r\n\r\n    function slippagify(uint256 amount, uint256 slippage) internal pure returns(uint256) {\r\n        require(slippage >= 0 && slippage <= 1e5, \"not in range\");\r\n        return amount*(1e5-slippage)/1e5;\r\n    }\r\n\r\n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token.\r\n    /// For this example we are providing 1000 DAI and 1000 USDC in liquidity\r\n    /// @return tokenId The id of the newly minted ERC721\r\n    /// @return liquidity The amount of liquidity for the position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mintNewPosition(address t0, address t1, int24 tlow,  int24 tup, uint256 amount0ToMint, uint256 amount1ToMint, uint256 slippage, LPtoken _LPtoken)\r\n        external onlyOwner\r\n        returns  (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        )\r\n        {\r\n\r\n        // transfer tokens to contract\r\n        TransferHelper.safeTransferFrom(t0, msg.sender, address(this), amount0ToMint);\r\n        TransferHelper.safeTransferFrom(t1, msg.sender, address(this), amount1ToMint);\r\n\r\n        // Approve the position manager\r\n        TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), amount0ToMint);\r\n        TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), amount1ToMint);\r\n\r\n        // The values for tickLower and tickUpper may not work for all tick spacings.\r\n        // Setting amount0Min and amount1Min to 0 is unsafe.\r\n        INonfungiblePositionManager.MintParams memory params =\r\n            INonfungiblePositionManager.MintParams({\r\n                token0: t0,\r\n                token1: t1,\r\n                fee: poolFee,\r\n                tickLower: tlow,\r\n                tickUpper: tup,\r\n                amount0Desired: amount0ToMint,\r\n                amount1Desired: amount1ToMint,\r\n                amount0Min: slippagify(amount0ToMint, slippage),\r\n                amount1Min: 0,\r\n                recipient: address(this),\r\n                deadline: block.timestamp\r\n            });\r\n\r\n        // Note that the pool must already be created and initialized in order to mint\r\n        (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);\r\n\r\n        // Create a deposit\r\n        _createDeposit(msg.sender, tokenId);\r\n        //record lp token\r\n        LPs[tokenId] = _LPtoken;\r\n        // Remove allowance and refund in both assets.\r\n        if (amount0 < amount0ToMint) {\r\n            TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), 0);\r\n            uint256 refund0 = amount0ToMint - amount0;\r\n            TransferHelper.safeTransfer(t0, msg.sender, refund0);\r\n        }\r\n\r\n        if (amount1 < amount1ToMint) {\r\n            TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), 0);\r\n            uint256 refund1 = amount1ToMint - amount1;\r\n            TransferHelper.safeTransfer(t1, msg.sender, refund1);\r\n        }\r\n        _LPtoken.mint(msg.sender, liquidity);\r\n    }\r\n\r\n    /// @notice Collects the fees associated with provided liquidity\r\n    /// @dev The contract must hold the erc721 token before it can collect fees\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collectFees(uint256 tokenId) external onlyOwner returns (uint256 amount0, uint256 amount1) {\r\n        // Caller must own the ERC721 position, meaning it must be a deposit\r\n        // set amount0Max and amount1Max to type(uint128).max to collect all fees\r\n        // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`\r\n        INonfungiblePositionManager.CollectParams memory params =\r\n            INonfungiblePositionManager.CollectParams({\r\n                tokenId: tokenId,\r\n                recipient: address(this),\r\n                amount0Max: type(uint128).max,\r\n                amount1Max: type(uint128).max\r\n            });\r\n\r\n        (amount0, amount1) = nonfungiblePositionManager.collect(params);\r\n\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        // send collected fees back to owner\r\n        _sendToOwner(tokenId, IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)));\r\n    }\r\n\r\n    /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @return amount0 The amount received back in token0\r\n    /// @return amount1 The amount returned back in token1\r\n    function decreaseLiquidity(uint256 tokenId, uint128 _liquidity, uint256 slippage) external returns (uint256 amount0, uint256 amount1) {\r\n        // caller must be the owner of the NFT\r\n        LPtoken lp = LPs[tokenId];\r\n        require(lp.balanceOf(msg.sender) >= _liquidity, \"balance too low\");\r\n\r\n        // amount0Min and amount1Min are price slippage checks\r\n        // if the amount received after burning is not greater than these minimums, transaction will fail\r\n        INonfungiblePositionManager.DecreaseLiquidityParams memory params =\r\n            INonfungiblePositionManager.DecreaseLiquidityParams({\r\n                tokenId: tokenId,\r\n                liquidity: _liquidity,\r\n                amount0Min: slippagify(_liquidity*45/100, slippage),\r\n                amount1Min:  slippagify(_liquidity*45/100, slippage),\r\n                deadline: block.timestamp\r\n            });\r\n        \r\n        INonfungiblePositionManager.CollectParams memory params2 =\r\n            INonfungiblePositionManager.CollectParams({\r\n                tokenId: tokenId,\r\n                recipient: address(this),\r\n                amount0Max:340282366920938463463374607431768211455,\r\n                amount1Max:340282366920938463463374607431768211455\r\n            });\r\n\r\n        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);\r\n        nonfungiblePositionManager.collect(params2);\r\n\r\n        // send liquidity back to owner\r\n        _sendToOwner(tokenId, amount0, amount1);\r\n        \r\n        //burn lp \r\n        lp.burn(msg.sender, _liquidity);\r\n    }\r\n\r\n    /// @notice Increases liquidity in the current range\r\n    /// @dev Pool must be initialized already to add liquidity\r\n    /// @param tokenId The id of the erc721 token\r\n    /// @param amount0 The amount to add of token0\r\n    /// @param amount1 The amount to add of token1\r\n    function increaseLiquidityCurrentRange(\r\n        uint256 tokenId,\r\n        uint256 amountAdd0,\r\n        uint256 amountAdd1,\r\n        uint256 slippage\r\n    )\r\n        external\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        )\r\n    {\r\n        LPtoken lp = LPs[tokenId];\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0);\r\n        TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1);\r\n\r\n        TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0);\r\n        TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1);\r\n\r\n        INonfungiblePositionManager.IncreaseLiquidityParams memory params =\r\n            INonfungiblePositionManager.IncreaseLiquidityParams({\r\n                tokenId: tokenId,\r\n                amount0Desired: amountAdd0,\r\n                amount1Desired: amountAdd1,\r\n                amount0Min: slippagify(amountAdd0, slippage),\r\n                amount1Min: slippagify(amountAdd1, slippage),\r\n                deadline: block.timestamp\r\n            });\r\n\r\n        (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params);\r\n        \r\n        // Remove allowance and refund in both assets.\r\n        if (amount0 < amountAdd0) {\r\n            TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0);\r\n            uint256 refund0 = amountAdd0 - amount0;\r\n            TransferHelper.safeTransfer(token0, msg.sender, refund0);\r\n        }\r\n\r\n        if (amount1 < amountAdd1) {\r\n            TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0);\r\n            uint256 refund1 = amountAdd1 - amount1;\r\n            TransferHelper.safeTransfer(token1, msg.sender, refund1);\r\n        }\r\n        lp.mint(msg.sender, liquidity);\r\n    }\r\n\r\n    /// @notice Transfers funds to owner of NFT\r\n    /// @param tokenId The id of the erc721\r\n    /// @param amount0 The amount of token0\r\n    /// @param amount1 The amount of token1\r\n    function _sendToOwner(\r\n        uint256 tokenId,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) private {\r\n        // get owner of contract\r\n        address owner = deposits[tokenId].owner;\r\n\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        // send collected fees to owner\r\n        TransferHelper.safeTransfer(token0, owner, amount0);\r\n        TransferHelper.safeTransfer(token1, owner, amount1);\r\n    }\r\n\r\n    /// @notice Transfers funds to owner of lptokens\r\n    /// @param tokenId The id of the erc721\r\n    /// @param amount0 The amount of token0\r\n    /// @param amount1 The amount of token1\r\n    function _sendToUser(\r\n        uint256 tokenId,\r\n        address user,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) private {\r\n        // get owner of contract\r\n        address owner = deposits[tokenId].owner;\r\n\r\n        address token0 = deposits[tokenId].token0;\r\n        address token1 = deposits[tokenId].token1;\r\n        // send back to users\r\n        TransferHelper.safeTransfer(token0, user, amount0*997/1000);\r\n        TransferHelper.safeTransfer(token1, user, amount1*997/1000);\r\n        //0.3% fees collected when remove liquidity\r\n        TransferHelper.safeTransfer(token0, owner, amount0*3/1000);\r\n        TransferHelper.safeTransfer(token1, owner, amount1*3/1000);\r\n    }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return fee The fee associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":305:8584  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":305:8584  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a9f8e1fd925e81235bc6e1f459ea307929f5b379ff1fce73559ec08ec02c93de64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9f8e1fd925e81235bc6e1f459ea307929f5b379ff1fce73559ec08ec02c93de64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xF8 0xE1 REVERT SWAP3 0x5E DUP2 0x23 JUMPDEST 0xC6 0xE1 DELEGATECALL MSIZE 0xEA ADDRESS PUSH26 0x29F5B379FF1FCE73559EC08EC02C93DE64736F6C634300080C00 CALLER ",
							"sourceMap": "305:8279:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;305:8279:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9f8e1fd925e81235bc6e1f459ea307929f5b379ff1fce73559ec08ec02c93de64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xF8 0xE1 REVERT SWAP3 0x5E DUP2 0x23 JUMPDEST 0xC6 0xE1 DELEGATECALL MSIZE 0xEA ADDRESS PUSH26 0x29F5B379FF1FCE73559EC08EC02C93DE64736F6C634300080C00 CALLER ",
							"sourceMap": "305:8279:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 305,
									"end": 8584,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9f8e1fd925e81235bc6e1f459ea307929f5b379ff1fce73559ec08ec02c93de64736f6c634300080c0033",
									".code": [
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 8584,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xe2bb2ec5150e6007beecb75ce88e7a03458b8d01aa968ec265093cdb6d8d3af7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42068b48f0f59086bd90db67b51ab3e70ab4701e9e0602a9f048031e4f31831a\",\"dweb:/ipfs/QmZEhUMidPVxfGzGrQ39tACokCmknPr3yfxDgh9hjuZpwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207446faba40d6cecf1e7406142dabc704f2547223196725d0adac3b2b8dae8b5864736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207446faba40d6cecf1e7406142dabc704f2547223196725d0adac3b2b8dae8b5864736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x46FABA40D6CECF1E7406142DABC704F25472231967 0x25 0xD0 0xAD 0xAC EXTCODESIZE 0x2B DUP14 0xAE DUP12 PC PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "129:2408:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;129:2408:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207446faba40d6cecf1e7406142dabc704f2547223196725d0adac3b2b8dae8b5864736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x46FABA40D6CECF1E7406142DABC704F25472231967 0x25 0xD0 0xAD 0xAC EXTCODESIZE 0x2B DUP14 0xAE DUP12 PC PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "129:2408:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207446faba40d6cecf1e7406142dabc704f2547223196725d0adac3b2b8dae8b5864736f6c634300080c0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/uniswapv3lp.sol": {
				"LPtoken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswapv3lp.sol\":\"LPtoken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xe2bb2ec5150e6007beecb75ce88e7a03458b8d01aa968ec265093cdb6d8d3af7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42068b48f0f59086bd90db67b51ab3e70ab4701e9e0602a9f048031e4f31831a\",\"dweb:/ipfs/QmZEhUMidPVxfGzGrQ39tACokCmknPr3yfxDgh9hjuZpwE\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/uniswapv3lp.sol\":{\"keccak256\":\"0x40be80663573d818e6366f4ddbce96601003a0070acbace5cdfd19c854dbd681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4008902eff7c686476d8e1031690562faff357299dfe473a1348e382c50c71b9\",\"dweb:/ipfs/QmSTVbHRuPvLZREyzwod1bgFGvTChtGJNVUsjjZWk7Rqhs\"]},\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x1472f97bbd815a116416bca5680e2c4bf57b0877cdd0aa0c77411bded6a2687c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e1a5310dd384bbbbbce64e548d9970e5a31125ab105a7bea357a87ec568a9\",\"dweb:/ipfs/QmcA1g874tP74FbL6TNZy7pAU4jbEVtkcwaZvLomRQwauL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LiquidityExamples": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "LPs",
							"outputs": [
								{
									"internalType": "contract LPtoken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								}
							],
							"name": "increaseLiquidityCurrentRange",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tlow",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tup",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "amount0ToMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1ToMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								},
								{
									"internalType": "contract LPtoken",
									"name": "_LPtoken",
									"type": "address"
								}
							],
							"name": "mintNewPosition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonfungiblePositionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectFees(uint256)": {
								"details": "The contract must hold the erc721 token before it can collect fees",
								"params": {
									"tokenId": "The id of the erc721 token"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity(uint256,uint128,uint256)": {
								"params": {
									"tokenId": "The id of the erc721 token"
								},
								"returns": {
									"amount0": "The amount received back in token0",
									"amount1": "The amount returned back in token1"
								}
							},
							"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)": {
								"details": "Pool must be initialized already to add liquidity",
								"params": {
									"amount0": "The amount to add of token0",
									"amount1": "The amount to add of token1",
									"tokenId": "The id of the erc721 token"
								}
							},
							"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)": {
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for the position",
									"tokenId": "The id of the newly minted ERC721"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"deposits": {
								"details": "deposits[tokenId] => Deposit"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/uniswapv3lp.sol\":618:12484  contract LiquidityExamples is IERC721Receiver,Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/uniswapv3lp.sol\":618:12484  contract LiquidityExamples is IERC721Receiver,Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/uniswapv3lp.sol\":618:12484  contract LiquidityExamples is IERC721Receiver,Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/uniswapv3lp.sol\":618:12484  contract LiquidityExamples is IERC721Receiver,Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa7459ac8\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb44a2722\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb44a2722\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xff0388a0\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0xa7459ac8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb02c43d0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb17acdcd\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x957c524f\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5846ce4e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/uniswapv3lp.sol\":989:1025  uint24 public constant poolFee = 500 */\n    tag_3:\n      tag_20\n        /* \"contracts/uniswapv3lp.sol\":1022:1025  500 */\n      0x01f4\n        /* \"contracts/uniswapv3lp.sol\":989:1025  uint24 public constant poolFee = 500 */\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":285:293   */\n      0xffffff\n        /* \"#utility.yul\":273:294   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":255:295   */\n      dup2\n      mstore\n        /* \"#utility.yul\":243:245   */\n      0x20\n        /* \"#utility.yul\":228:246   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":989:1025  uint24 public constant poolFee = 500 */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/uniswapv3lp.sol\":1540:1892  function onERC721Received(... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1545:1578   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1527:1579   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":1540:1892  function onERC721Received(... */\n      tag_22\n        /* \"#utility.yul\":1383:1585   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":8911:10913  function increaseLiquidityCurrentRange(... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2200:2247   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":2182:2248   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2264:2282   */\n      dup5\n      add\n        /* \"#utility.yul\":2257:2291   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2307:2325   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2300:2334   */\n      mstore\n        /* \"#utility.yul\":2170:2172   */\n      0x60\n        /* \"#utility.yul\":2155:2173   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":8911:10913  function increaseLiquidityCurrentRange(... */\n      tag_22\n        /* \"#utility.yul\":1980:2340   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/uniswapv3lp.sol\":909:982  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n    tag_7:\n      tag_38\n        /* \"contracts/uniswapv3lp.sol\":940:982  0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      0x3db4b7da67dd5af61cb9b3c70501b1bdb24b2c22\n        /* \"contracts/uniswapv3lp.sol\":909:982  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2618:2650   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2600:2651   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2588:2590   */\n      0x20\n        /* \"#utility.yul\":2573:2591   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":909:982  address public constant USDC = 0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22 */\n      tag_22\n        /* \"#utility.yul\":2454:2657   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_38)\n        /* \"contracts/uniswapv3lp.sol\":7058:8626  function decreaseLiquidity(uint256 tokenId, uint128 _liquidity, uint256 slippage) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_9:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3375:3400   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3431:3433   */\n      0x20\n        /* \"#utility.yul\":3416:3434   */\n      dup4\n      add\n        /* \"#utility.yul\":3409:3443   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3348:3366   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":7058:8626  function decreaseLiquidity(uint256 tokenId, uint128 _liquidity, uint256 slippage) external returns (uint256 amount0, uint256 amount1) {... */\n      tag_22\n        /* \"#utility.yul\":3201:3449   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":1322:1360  mapping(uint256 => LPtoken) public LPs */\n    tag_10:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/uniswapv3lp.sol\":1270:1313  mapping(uint256 => Deposit) public deposits */\n    tag_11:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_58:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      dup3\n      and\n      swap2\n      and\n      dup5\n      jump\n    tag_57:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4149:4164   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":4131:4165   */\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4201:4248   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      dup6\n      add\n        /* \"#utility.yul\":4174:4249   */\n      mstore\n        /* \"#utility.yul\":4285:4300   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":4265:4283   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":4258:4301   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4337:4352   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4332:4334   */\n      0x60\n        /* \"#utility.yul\":4317:4335   */\n      dup3\n      add\n        /* \"#utility.yul\":4310:4353   */\n      mstore\n        /* \"#utility.yul\":4080:4083   */\n      0x80\n        /* \"#utility.yul\":4065:4084   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":1270:1313  mapping(uint256 => Deposit) public deposits */\n      tag_22\n        /* \"#utility.yul\":3862:4359   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":5689:6719  function collectFees(uint256 tokenId) external onlyOwner returns (uint256 amount0, uint256 amount1) {... */\n    tag_12:\n      tag_45\n      tag_63\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":679:823  INonfungiblePositionManager public constant nonfungiblePositionManager = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88) */\n    tag_13:\n      tag_38\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"contracts/uniswapv3lp.sol\":830:902  address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n    tag_14:\n      tag_38\n        /* \"contracts/uniswapv3lp.sol\":860:902  0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\n        /* \"contracts/uniswapv3lp.sol\":830:902  address public constant DAI = 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_36\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":2888:5351  function mintNewPosition(address t0, address t1, int24 tlow,  int24 tup, uint256 amount0ToMint, uint256 amount1ToMint, uint256 slippage, LPtoken _LPtoken)... */\n    tag_16:\n      tag_77\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6246:6271   */\n      swap5\n      dup6\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6307:6354   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6302:6304   */\n      0x20\n        /* \"#utility.yul\":6287:6305   */\n      dup6\n      add\n        /* \"#utility.yul\":6280:6355   */\n      mstore\n        /* \"#utility.yul\":6371:6389   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":6364:6398   */\n      mstore\n        /* \"#utility.yul\":6429:6431   */\n      0x60\n        /* \"#utility.yul\":6414:6432   */\n      dup3\n      add\n        /* \"#utility.yul\":6407:6441   */\n      mstore\n        /* \"#utility.yul\":6233:6236   */\n      0x80\n        /* \"#utility.yul\":6218:6237   */\n      add\n        /* \"contracts/uniswapv3lp.sol\":2888:5351  function mintNewPosition(address t0, address t1, int24 tlow,  int24 tup, uint256 amount0ToMint, uint256 amount1ToMint, uint256 slippage, LPtoken _LPtoken)... */\n      tag_22\n        /* \"#utility.yul\":6015:6447   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":1540:1892  function onERC721Received(... */\n    tag_27:\n        /* \"contracts/uniswapv3lp.sol\":1696:1702  bytes4 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":1723:1733  msg.sender */\n      caller\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":1723:1772  msg.sender == address(nonfungiblePositionManager) */\n      eq\n        /* \"contracts/uniswapv3lp.sol\":1715:1792  require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft') */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6654:6656   */\n      0x20\n        /* \"contracts/uniswapv3lp.sol\":1715:1792  require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6636:6657   */\n      mstore\n        /* \"#utility.yul\":6693:6695   */\n      0x0f\n        /* \"#utility.yul\":6673:6691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6666:6696   */\n      mstore\n      shl(0x8a, 0x1b9bdd0818481d5b9a5d8cc81b999d)\n        /* \"#utility.yul\":6712:6730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6705:6750   */\n      mstore\n        /* \"#utility.yul\":6767:6785   */\n      0x64\n      add\n        /* \"contracts/uniswapv3lp.sol\":1715:1792  require(msg.sender == address(nonfungiblePositionManager), 'not a univ3 nft') */\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/uniswapv3lp.sol\":1803:1836  _createDeposit(operator, tokenId) */\n      tag_87\n        /* \"contracts/uniswapv3lp.sol\":1818:1826  operator */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":1828:1835  tokenId */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":1803:1817  _createDeposit */\n      tag_88\n        /* \"contracts/uniswapv3lp.sol\":1803:1836  _createDeposit(operator, tokenId) */\n      jump\t// in\n    tag_87:\n      pop\n      shl(0xe1, 0x0a85bd01)\n        /* \"contracts/uniswapv3lp.sol\":1540:1892  function onERC721Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":8911:10913  function increaseLiquidityCurrentRange(... */\n    tag_33:\n        /* \"contracts/uniswapv3lp.sol\":9118:9135  uint128 liquidity */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9236:9248  LPs[tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9236:9239  LPs */\n      0x02\n        /* \"contracts/uniswapv3lp.sol\":9236:9248  LPs[tokenId] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sload\n      0x01\n        /* \"contracts/uniswapv3lp.sol\":9276:9293  deposits[tokenId] */\n      swap1\n      swap3\n      mstore\n      dup4\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":9276:9300  deposits[tokenId].token0 */\n      swap2\n      dup3\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":9328:9352  deposits[tokenId].token1 */\n      0x03\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":9118:9135  uint128 liquidity */\n      dup4\n      swap3\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":9236:9248  LPs[tokenId] */\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/uniswapv3lp.sol\":9276:9300  deposits[tokenId].token0 */\n      swap2\n      dup2\n      and\n      swap2\n        /* \"contracts/uniswapv3lp.sol\":9328:9352  deposits[tokenId].token1 */\n      and\n        /* \"contracts/uniswapv3lp.sol\":9363:9441  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0) */\n      tag_90\n        /* \"contracts/uniswapv3lp.sol\":9276:9300  deposits[tokenId].token0 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":9403:9413  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":9423:9427  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":9430:9440  amountAdd0 */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":9363:9394  TransferHelper.safeTransferFrom */\n      tag_91\n        /* \"contracts/uniswapv3lp.sol\":9363:9441  TransferHelper.safeTransferFrom(token0, msg.sender, address(this), amountAdd0) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/uniswapv3lp.sol\":9452:9530  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1) */\n      tag_92\n        /* \"contracts/uniswapv3lp.sol\":9484:9490  token1 */\n      dup2\n        /* \"contracts/uniswapv3lp.sol\":9492:9502  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":9512:9516  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":9519:9529  amountAdd1 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":9452:9483  TransferHelper.safeTransferFrom */\n      tag_91\n        /* \"contracts/uniswapv3lp.sol\":9452:9530  TransferHelper.safeTransferFrom(token1, msg.sender, address(this), amountAdd1) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/uniswapv3lp.sol\":9543:9626  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0) */\n      tag_93\n        /* \"contracts/uniswapv3lp.sol\":9570:9576  token0 */\n      dup3\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9615:9625  amountAdd0 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":9543:9569  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":9543:9626  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), amountAdd0) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/uniswapv3lp.sol\":9637:9720  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1) */\n      tag_95\n        /* \"contracts/uniswapv3lp.sol\":9664:9670  token1 */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9709:9719  amountAdd1 */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":9637:9663  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":9637:9720  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), amountAdd1) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/uniswapv3lp.sol\":9733:9798  INonfungiblePositionManager.IncreaseLiquidityParams memory params */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":9894:9901  tokenId */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":9936:9946  amountAdd0 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":9981:9991  amountAdd1 */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":10022:10054  slippagify(amountAdd0, slippage) */\n      tag_96\n        /* \"contracts/uniswapv3lp.sol\":10033:10043  amountAdd0 */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":10045:10053  slippage */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":10022:10032  slippagify */\n      tag_97\n        /* \"contracts/uniswapv3lp.sol\":10022:10054  slippagify(amountAdd0, slippage) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":10085:10117  slippagify(amountAdd1, slippage) */\n      tag_98\n        /* \"contracts/uniswapv3lp.sol\":10096:10106  amountAdd1 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":10108:10116  slippage */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":10085:10095  slippagify */\n      tag_97\n        /* \"contracts/uniswapv3lp.sol\":10085:10117  slippagify(amountAdd1, slippage) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":10146:10161  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":9814:10177  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":10222:10274  nonfungiblePositionManager.increaseLiquidity(params) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x219f5d17)\n      dup2\n      mstore\n        /* \"#utility.yul\":7043:7056   */\n      dup4\n      mload\n        /* \"contracts/uniswapv3lp.sol\":10222:10274  nonfungiblePositionManager.increaseLiquidity(params) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7025:7057   */\n      mstore\n        /* \"#utility.yul\":7101:7118   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":7095:7119   */\n      mload\n        /* \"#utility.yul\":7073:7093   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7066:7120   */\n      mstore\n        /* \"#utility.yul\":7164:7181   */\n      dup3\n      add\n        /* \"#utility.yul\":7158:7182   */\n      mload\n        /* \"#utility.yul\":7136:7156   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7129:7183   */\n      mstore\n        /* \"#utility.yul\":7239:7243   */\n      0x60\n        /* \"#utility.yul\":7227:7244   */\n      dup3\n      add\n        /* \"#utility.yul\":7221:7245   */\n      mload\n        /* \"#utility.yul\":7199:7219   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7192:7246   */\n      mstore\n        /* \"#utility.yul\":7302:7306   */\n      0x80\n        /* \"#utility.yul\":7290:7307   */\n      dup3\n      add\n        /* \"#utility.yul\":7284:7308   */\n      mload\n        /* \"#utility.yul\":7262:7282   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7255:7309   */\n      mstore\n        /* \"#utility.yul\":7365:7369   */\n      0xa0\n        /* \"#utility.yul\":7353:7370   */\n      dup3\n      add\n        /* \"#utility.yul\":7347:7371   */\n      mload\n        /* \"#utility.yul\":7325:7345   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":7318:7372   */\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":9733:10177  INonfungiblePositionManager.IncreaseLiquidityParams memory params =... */\n      swap1\n      swap2\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":780:822  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":10222:10266  nonfungiblePositionManager.increaseLiquidity */\n      0x219f5d17\n      swap1\n        /* \"#utility.yul\":6997:7016   */\n      0xc4\n      add\n        /* \"contracts/uniswapv3lp.sol\":10222:10274  nonfungiblePositionManager.increaseLiquidity(params) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/uniswapv3lp.sol\":10190:10274  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params) */\n      swap2\n      swap9\n      pop\n      swap7\n      pop\n      swap5\n      pop\n        /* \"contracts/uniswapv3lp.sol\":10355:10375  amount0 < amountAdd0 */\n      dup10\n      dup7\n      lt\n        /* \"contracts/uniswapv3lp.sol\":10351:10602  if (amount0 < amountAdd0) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":10392:10466  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0) */\n      tag_106\n        /* \"contracts/uniswapv3lp.sol\":10419:10425  token0 */\n      dup4\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":10464:10465  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":10392:10418  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":10392:10466  TransferHelper.safeApprove(token0, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/uniswapv3lp.sol\":10481:10496  uint256 refund0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":10499:10519  amountAdd0 - amount0 */\n      tag_107\n        /* \"contracts/uniswapv3lp.sol\":10512:10519  amount0 */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":10499:10509  amountAdd0 */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":10499:10519  amountAdd0 - amount0 */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/uniswapv3lp.sol\":10481:10519  uint256 refund0 = amountAdd0 - amount0 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":10534:10590  TransferHelper.safeTransfer(token0, msg.sender, refund0) */\n      tag_109\n        /* \"contracts/uniswapv3lp.sol\":10562:10568  token0 */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":10570:10580  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":10582:10589  refund0 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":10534:10561  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":10534:10590  TransferHelper.safeTransfer(token0, msg.sender, refund0) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/uniswapv3lp.sol\":10377:10602  {... */\n      pop\n        /* \"contracts/uniswapv3lp.sol\":10351:10602  if (amount0 < amountAdd0) {... */\n    tag_105:\n        /* \"contracts/uniswapv3lp.sol\":10628:10638  amountAdd1 */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":10618:10625  amount1 */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":10618:10638  amount1 < amountAdd1 */\n      lt\n        /* \"contracts/uniswapv3lp.sol\":10614:10865  if (amount1 < amountAdd1) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":10655:10729  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0) */\n      tag_112\n        /* \"contracts/uniswapv3lp.sol\":10682:10688  token1 */\n      dup3\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":10727:10728  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":10655:10681  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":10655:10729  TransferHelper.safeApprove(token1, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/uniswapv3lp.sol\":10744:10759  uint256 refund1 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":10762:10782  amountAdd1 - amount1 */\n      tag_113\n        /* \"contracts/uniswapv3lp.sol\":10775:10782  amount1 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":10762:10772  amountAdd1 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":10762:10782  amountAdd1 - amount1 */\n      tag_108\n      jump\t// in\n    tag_113:\n        /* \"contracts/uniswapv3lp.sol\":10744:10782  uint256 refund1 = amountAdd1 - amount1 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":10797:10853  TransferHelper.safeTransfer(token1, msg.sender, refund1) */\n      tag_114\n        /* \"contracts/uniswapv3lp.sol\":10825:10831  token1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":10833:10843  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":10845:10852  refund1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":10797:10824  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":10797:10853  TransferHelper.safeTransfer(token1, msg.sender, refund1) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/uniswapv3lp.sol\":10640:10865  {... */\n      pop\n        /* \"contracts/uniswapv3lp.sol\":10614:10865  if (amount1 < amountAdd1) {... */\n    tag_111:\n        /* \"contracts/uniswapv3lp.sol\":10875:10905  lp.mint(msg.sender, liquidity) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":10875:10882  lp.mint */\n      dup6\n      and\n      swap1\n      0x40c10f19\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":10875:10905  lp.mint(msg.sender, liquidity) */\n      tag_115\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":10883:10893  msg.sender */\n      caller\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":10895:10904  liquidity */\n      dup12\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":10875:10905  lp.mint(msg.sender, liquidity) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_115:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":9212:10913  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":8911:10913  function increaseLiquidityCurrentRange(... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":7058:8626  function decreaseLiquidity(uint256 tokenId, uint128 _liquidity, uint256 slippage) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_48:\n        /* \"contracts/uniswapv3lp.sol\":7158:7173  uint256 amount0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":7264:7276  LPs[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7264:7267  LPs */\n      0x02\n        /* \"contracts/uniswapv3lp.sol\":7264:7276  LPs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/uniswapv3lp.sol\":7295:7319  lp.balanceOf(msg.sender) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7308:7318  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":7295:7319  lp.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2600:2651   */\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7158:7173  uint256 amount0 */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7264:7276  LPs[tokenId] */\n      and\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7295:7333  lp.balanceOf(msg.sender) >= _liquidity */\n      dup7\n      and\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7264:7276  LPs[tokenId] */\n      dup3\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":7295:7307  lp.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2573:2591   */\n      0x24\n      add\n        /* \"contracts/uniswapv3lp.sol\":7295:7319  lp.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/uniswapv3lp.sol\":7295:7333  lp.balanceOf(msg.sender) >= _liquidity */\n      lt\n      iszero\n        /* \"contracts/uniswapv3lp.sol\":7287:7353  require(lp.balanceOf(msg.sender) >= _liquidity, \"balance too low\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8877:8879   */\n      0x20\n        /* \"contracts/uniswapv3lp.sol\":7287:7353  require(lp.balanceOf(msg.sender) >= _liquidity, \"balance too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8859:8880   */\n      mstore\n        /* \"#utility.yul\":8916:8918   */\n      0x0f\n        /* \"#utility.yul\":8896:8914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8889:8919   */\n      mstore\n      shl(0x88, 0x62616c616e636520746f6f206c6f77)\n        /* \"#utility.yul\":8935:8953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8928:8973   */\n      mstore\n        /* \"#utility.yul\":8990:9008   */\n      0x64\n      add\n        /* \"contracts/uniswapv3lp.sol\":7287:7353  require(lp.balanceOf(msg.sender) >= _liquidity, \"balance too low\") */\n      tag_85\n        /* \"#utility.yul\":8675:9014   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":7287:7353  require(lp.balanceOf(msg.sender) >= _liquidity, \"balance too low\") */\n    tag_133:\n        /* \"contracts/uniswapv3lp.sol\":7618:7946  INonfungiblePositionManager.DecreaseLiquidityParams({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup8\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      dup8\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7537:7602  INonfungiblePositionManager.DecreaseLiquidityParams memory params */\n      0x00\n      swap2\n        /* \"contracts/uniswapv3lp.sol\":7618:7946  INonfungiblePositionManager.DecreaseLiquidityParams({... */\n      dup2\n      add\n        /* \"contracts/uniswapv3lp.sol\":7776:7815  slippagify(_liquidity*45/100, slippage) */\n      tag_136\n        /* \"contracts/uniswapv3lp.sol\":7801:7804  100 */\n      0x64\n        /* \"contracts/uniswapv3lp.sol\":7787:7800  _liquidity*45 */\n      tag_137\n        /* \"contracts/uniswapv3lp.sol\":7735:7745  _liquidity */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":7798:7800  45 */\n      0x2d\n        /* \"contracts/uniswapv3lp.sol\":7787:7800  _liquidity*45 */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/uniswapv3lp.sol\":7787:7804  _liquidity*45/100 */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":7776:7815  slippagify(_liquidity*45/100, slippage) */\n      and\n        /* \"contracts/uniswapv3lp.sol\":7806:7814  slippage */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":7776:7786  slippagify */\n      tag_97\n        /* \"contracts/uniswapv3lp.sol\":7776:7815  slippagify(_liquidity*45/100, slippage) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/uniswapv3lp.sol\":7618:7946  INonfungiblePositionManager.DecreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":7847:7886  slippagify(_liquidity*45/100, slippage) */\n      tag_141\n        /* \"contracts/uniswapv3lp.sol\":7872:7875  100 */\n      0x64\n        /* \"contracts/uniswapv3lp.sol\":7858:7871  _liquidity*45 */\n      tag_137\n        /* \"contracts/uniswapv3lp.sol\":7858:7868  _liquidity */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":7869:7871  45 */\n      0x2d\n        /* \"contracts/uniswapv3lp.sol\":7858:7871  _liquidity*45 */\n      tag_138\n      jump\t// in\n        /* \"contracts/uniswapv3lp.sol\":7847:7886  slippagify(_liquidity*45/100, slippage) */\n    tag_141:\n        /* \"contracts/uniswapv3lp.sol\":7618:7946  INonfungiblePositionManager.DecreaseLiquidityParams({... */\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7915:7930  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":7618:7946  INonfungiblePositionManager.DecreaseLiquidityParams({... */\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8039:8313  INonfungiblePositionManager.CollectParams({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup1\n      dup3\n      add\n      dup4\n      mstore\n      dup12\n      dup3\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8154:8158  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":8039:8313  INonfungiblePositionManager.CollectParams({... */\n      dup3\n      dup6\n      add\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup1\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8347:8399  nonfungiblePositionManager.decreaseLiquidity(params) */\n      dup5\n      mload\n      shl(0xe1, 0x0624e65f)\n      dup2\n      mstore\n        /* \"#utility.yul\":9911:9924   */\n      dup8\n      mload\n        /* \"contracts/uniswapv3lp.sol\":8347:8399  nonfungiblePositionManager.decreaseLiquidity(params) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9893:9925   */\n      mstore\n        /* \"#utility.yul\":9973:9990   */\n      swap6\n      dup8\n      add\n        /* \"#utility.yul\":9967:9991   */\n      mload\n        /* \"#utility.yul\":9963:10028   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9941:9961   */\n      0x24\n      dup7\n      add\n        /* \"#utility.yul\":9934:10029   */\n      mstore\n        /* \"#utility.yul\":10073:10090   */\n      swap3\n      dup6\n      add\n        /* \"#utility.yul\":10067:10091   */\n      mload\n        /* \"#utility.yul\":10045:10065   */\n      0x44\n      dup6\n      add\n        /* \"#utility.yul\":10038:10092   */\n      mstore\n        /* \"#utility.yul\":10136:10153   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":10130:10154   */\n      mload\n        /* \"#utility.yul\":10108:10128   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":10101:10155   */\n      mstore\n        /* \"#utility.yul\":10199:10216   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":10193:10217   */\n      mload\n        /* \"#utility.yul\":10171:10191   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":10164:10218   */\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":7537:7946  INonfungiblePositionManager.DecreaseLiquidityParams memory params =... */\n      swap2\n      swap3\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":780:822  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8347:8391  nonfungiblePositionManager.decreaseLiquidity */\n      0x0c49ccbe\n      swap1\n        /* \"#utility.yul\":9865:9884   */\n      0xa4\n      add\n        /* \"contracts/uniswapv3lp.sol\":8347:8399  nonfungiblePositionManager.decreaseLiquidity(params) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/uniswapv3lp.sol\":8410:8453  nonfungiblePositionManager.collect(params2) */\n      mload(0x40)\n      shl(0xe0, 0xfc6f7865)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":8326:8399  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params) */\n      swap2\n      swap7\n      pop\n      swap5\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":780:822  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8410:8444  nonfungiblePositionManager.collect */\n      0xfc6f7865\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8410:8453  nonfungiblePositionManager.collect(params2) */\n      tag_150\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8445:8452  params2 */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8410:8453  nonfungiblePositionManager.collect(params2) */\n      0x04\n      add\n      tag_151\n      jump\t// in\n    tag_150:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_154:\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":8507:8546  _sendToOwner(tokenId, amount0, amount1) */\n      tag_155\n        /* \"contracts/uniswapv3lp.sol\":8520:8527  tokenId */\n      dup9\n        /* \"contracts/uniswapv3lp.sol\":8529:8536  amount0 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":8538:8545  amount1 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":8507:8519  _sendToOwner */\n      tag_156\n        /* \"contracts/uniswapv3lp.sol\":8507:8546  _sendToOwner(tokenId, amount0, amount1) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/uniswapv3lp.sol\":8587:8618  lp.burn(msg.sender, _liquidity) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":8587:8594  lp.burn */\n      dup5\n      and\n      swap1\n      0x9dc29fac\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8587:8618  lp.burn(msg.sender, _liquidity) */\n      tag_157\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8595:8605  msg.sender */\n      caller\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8607:8617  _liquidity */\n      dup12\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":8587:8618  lp.burn(msg.sender, _liquidity) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":7192:8626  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":7058:8626  function decreaseLiquidity(uint256 tokenId, uint128 _liquidity, uint256 slippage) external returns (uint256 amount0, uint256 amount1) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":5689:6719  function collectFees(uint256 tokenId) external onlyOwner returns (uint256 amount0, uint256 amount1) {... */\n    tag_64:\n        /* \"contracts/uniswapv3lp.sol\":5755:5770  uint256 amount0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":5772:5787  uint256 amount1 */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/uniswapv3lp.sol\":6137:6369  INonfungiblePositionManager.CollectParams({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6252:6256  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":6137:6369  INonfungiblePositionManager.CollectParams({... */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6403:6445  nonfungiblePositionManager.collect(params) */\n      swap1\n      mload\n      shl(0xe0, 0xfc6f7865)\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":780:822  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6403:6437  nonfungiblePositionManager.collect */\n      0xfc6f7865\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6403:6445  nonfungiblePositionManager.collect(params) */\n      tag_164\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6137:6369  INonfungiblePositionManager.CollectParams({... */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6403:6445  nonfungiblePositionManager.collect(params) */\n      0x04\n      add\n      tag_151\n      jump\t// in\n    tag_164:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_167:\n        /* \"contracts/uniswapv3lp.sol\":6458:6472  address token0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":6475:6492  deposits[tokenId] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6475:6483  deposits */\n      0x01\n        /* \"contracts/uniswapv3lp.sol\":6475:6492  deposits[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":6475:6499  deposits[tokenId].token0 */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":6527:6551  deposits[tokenId].token1 */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":6630:6669  IERC20(token0).balanceOf(address(this)) */\n      swap2\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6663:6667  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":6630:6669  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2600:2651   */\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6382:6445  (amount0, amount1) = nonfungiblePositionManager.collect(params) */\n      swap4\n      swap7\n      pop\n      swap2\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":6475:6499  deposits[tokenId].token0 */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/uniswapv3lp.sol\":6527:6551  deposits[tokenId].token1 */\n      swap2\n      and\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6608:6711  _sendToOwner(tokenId, IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this))) */\n      tag_168\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6475:6492  deposits[tokenId] */\n      dup8\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6475:6499  deposits[tokenId].token0 */\n      dup5\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":6630:6654  IERC20(token0).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2573:2591   */\n      0x24\n      add\n        /* \"contracts/uniswapv3lp.sol\":6630:6669  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_172:\n        /* \"contracts/uniswapv3lp.sol\":6671:6710  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":6704:6708  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":6671:6710  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2600:2651   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":6671:6695  IERC20(token1).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2573:2591   */\n      0x24\n      add\n        /* \"contracts/uniswapv3lp.sol\":6671:6710  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_176:\n        /* \"contracts/uniswapv3lp.sol\":6608:6620  _sendToOwner */\n      tag_156\n        /* \"contracts/uniswapv3lp.sol\":6608:6711  _sendToOwner(tokenId, IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this))) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/uniswapv3lp.sol\":5789:6719  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":5689:6719  function collectFees(uint256 tokenId) external onlyOwner returns (uint256 amount0, uint256 amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11260:11262   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11242:11263   */\n      mstore\n        /* \"#utility.yul\":11299:11301   */\n      0x26\n        /* \"#utility.yul\":11279:11297   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11272:11302   */\n      mstore\n        /* \"#utility.yul\":11338:11372   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11318:11336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11311:11373   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11389:11407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11382:11418   */\n      mstore\n        /* \"#utility.yul\":11435:11454   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_85\n        /* \"#utility.yul\":11058:11460   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":2888:5351  function mintNewPosition(address t0, address t1, int24 tlow,  int24 tup, uint256 amount0ToMint, uint256 amount1ToMint, uint256 slippage, LPtoken _LPtoken)... */\n    tag_80:\n        /* \"contracts/uniswapv3lp.sol\":3104:3119  uint256 tokenId */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":3134:3151  uint128 liquidity */\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":3166:3181  uint256 amount0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":3196:3211  uint256 amount1 */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/uniswapv3lp.sol\":3285:3362  TransferHelper.safeTransferFrom(t0, msg.sender, address(this), amount0ToMint) */\n      tag_187\n        /* \"contracts/uniswapv3lp.sol\":3317:3319  t0 */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":3321:3331  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":3341:3345  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":3348:3361  amount0ToMint */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":3285:3316  TransferHelper.safeTransferFrom */\n      tag_91\n        /* \"contracts/uniswapv3lp.sol\":3285:3362  TransferHelper.safeTransferFrom(t0, msg.sender, address(this), amount0ToMint) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/uniswapv3lp.sol\":3373:3450  TransferHelper.safeTransferFrom(t1, msg.sender, address(this), amount1ToMint) */\n      tag_188\n        /* \"contracts/uniswapv3lp.sol\":3405:3407  t1 */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":3409:3419  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":3429:3433  this */\n      address\n        /* \"contracts/uniswapv3lp.sol\":3436:3449  amount1ToMint */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":3373:3404  TransferHelper.safeTransferFrom */\n      tag_91\n        /* \"contracts/uniswapv3lp.sol\":3373:3450  TransferHelper.safeTransferFrom(t1, msg.sender, address(this), amount1ToMint) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/uniswapv3lp.sol\":3504:3586  TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), amount0ToMint) */\n      tag_189\n        /* \"contracts/uniswapv3lp.sol\":3531:3533  t0 */\n      dup13\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3572:3585  amount0ToMint */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":3504:3530  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":3504:3586  TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), amount0ToMint) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/uniswapv3lp.sol\":3597:3679  TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), amount1ToMint) */\n      tag_190\n        /* \"contracts/uniswapv3lp.sol\":3624:3626  t1 */\n      dup12\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":3665:3678  amount1ToMint */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":3597:3623  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":3597:3679  TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), amount1ToMint) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/uniswapv3lp.sol\":3841:3893  INonfungiblePositionManager.MintParams memory params */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":3975:3977  t0 */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4004:4006  t1 */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":1022:1025  500 */\n      0x01f4\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4067:4071  tlow */\n      dup13\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4101:4104  tup */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4139:4152  amount0ToMint */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4187:4200  amount1ToMint */\n      dup10\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4231:4266  slippagify(amount0ToMint, slippage) */\n      tag_191\n        /* \"contracts/uniswapv3lp.sol\":4242:4255  amount0ToMint */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":4257:4265  slippage */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":4231:4241  slippagify */\n      tag_97\n        /* \"contracts/uniswapv3lp.sol\":4231:4266  slippagify(amount0ToMint, slippage) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4297:4298  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4336:4340  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":4370:4385  block.timestamp */\n      timestamp\n        /* \"contracts/uniswapv3lp.sol\":3909:4401  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/uniswapv3lp.sol\":3841:4401  INonfungiblePositionManager.MintParams memory params =... */\n      swap1\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":4543:4574  nonfungiblePositionManager.mint */\n      and\n      0x88316456\n        /* \"contracts/uniswapv3lp.sol\":4575:4581  params */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":4543:4582  nonfungiblePositionManager.mint(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/uniswapv3lp.sol\":4502:4582  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      swap3\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4624:4659  _createDeposit(msg.sender, tokenId) */\n      tag_198\n        /* \"contracts/uniswapv3lp.sol\":4639:4649  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":4502:4582  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":4624:4638  _createDeposit */\n      tag_88\n        /* \"contracts/uniswapv3lp.sol\":4624:4659  _createDeposit(msg.sender, tokenId) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/uniswapv3lp.sol\":4697:4709  LPs[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":4697:4700  LPs */\n      0x02\n        /* \"contracts/uniswapv3lp.sol\":4697:4709  LPs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":4697:4720  LPs[tokenId] = _LPtoken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/uniswapv3lp.sol\":4791:4814  amount0 < amount0ToMint */\n      dup9\n      dup4\n      lt\n        /* \"contracts/uniswapv3lp.sol\":4787:5036  if (amount0 < amount0ToMint) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":4831:4901  TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), 0) */\n      tag_200\n        /* \"contracts/uniswapv3lp.sol\":4858:4860  t0 */\n      dup14\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":4899:4900  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4831:4857  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":4831:4901  TransferHelper.safeApprove(t0, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/uniswapv3lp.sol\":4916:4931  uint256 refund0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":4934:4957  amount0ToMint - amount0 */\n      tag_201\n        /* \"contracts/uniswapv3lp.sol\":4950:4957  amount0 */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":4934:4947  amount0ToMint */\n      dup12\n        /* \"contracts/uniswapv3lp.sol\":4934:4957  amount0ToMint - amount0 */\n      tag_108\n      jump\t// in\n    tag_201:\n        /* \"contracts/uniswapv3lp.sol\":4916:4957  uint256 refund0 = amount0ToMint - amount0 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4972:5024  TransferHelper.safeTransfer(t0, msg.sender, refund0) */\n      tag_202\n        /* \"contracts/uniswapv3lp.sol\":5000:5002  t0 */\n      dup15\n        /* \"contracts/uniswapv3lp.sol\":5004:5014  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":5016:5023  refund0 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":4972:4999  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":4972:5024  TransferHelper.safeTransfer(t0, msg.sender, refund0) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/uniswapv3lp.sol\":4816:5036  {... */\n      pop\n        /* \"contracts/uniswapv3lp.sol\":4787:5036  if (amount0 < amount0ToMint) {... */\n    tag_199:\n        /* \"contracts/uniswapv3lp.sol\":5062:5075  amount1ToMint */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":5052:5059  amount1 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":5052:5075  amount1 < amount1ToMint */\n      lt\n        /* \"contracts/uniswapv3lp.sol\":5048:5297  if (amount1 < amount1ToMint) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/uniswapv3lp.sol\":5092:5162  TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), 0) */\n      tag_204\n        /* \"contracts/uniswapv3lp.sol\":5119:5121  t1 */\n      dup13\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":5160:5161  0 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":5092:5118  TransferHelper.safeApprove */\n      tag_94\n        /* \"contracts/uniswapv3lp.sol\":5092:5162  TransferHelper.safeApprove(t1, address(nonfungiblePositionManager), 0) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/uniswapv3lp.sol\":5177:5192  uint256 refund1 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":5195:5218  amount1ToMint - amount1 */\n      tag_205\n        /* \"contracts/uniswapv3lp.sol\":5211:5218  amount1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":5195:5208  amount1ToMint */\n      dup11\n        /* \"contracts/uniswapv3lp.sol\":5195:5218  amount1ToMint - amount1 */\n      tag_108\n      jump\t// in\n    tag_205:\n        /* \"contracts/uniswapv3lp.sol\":5177:5218  uint256 refund1 = amount1ToMint - amount1 */\n      swap1\n      pop\n        /* \"contracts/uniswapv3lp.sol\":5233:5285  TransferHelper.safeTransfer(t1, msg.sender, refund1) */\n      tag_206\n        /* \"contracts/uniswapv3lp.sol\":5261:5263  t1 */\n      dup14\n        /* \"contracts/uniswapv3lp.sol\":5265:5275  msg.sender */\n      caller\n        /* \"contracts/uniswapv3lp.sol\":5277:5284  refund1 */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":5233:5260  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":5233:5285  TransferHelper.safeTransfer(t1, msg.sender, refund1) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/uniswapv3lp.sol\":5077:5297  {... */\n      pop\n        /* \"contracts/uniswapv3lp.sol\":5048:5297  if (amount1 < amount1ToMint) {... */\n    tag_203:\n        /* \"contracts/uniswapv3lp.sol\":5307:5343  _LPtoken.mint(msg.sender, liquidity) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":5307:5320  _LPtoken.mint */\n      dup8\n      and\n      swap1\n      0x40c10f19\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5307:5343  _LPtoken.mint(msg.sender, liquidity) */\n      tag_207\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5321:5331  msg.sender */\n      caller\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5333:5342  liquidity */\n      dup9\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":5307:5343  _LPtoken.mint(msg.sender, liquidity) */\n      0x04\n      add\n      tag_116\n      jump\t// in\n    tag_207:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":3232:5351  {... */\n      pop\n        /* \"contracts/uniswapv3lp.sol\":2888:5351  function mintNewPosition(address t0, address t1, int24 tlow,  int24 tup, uint256 amount0ToMint, uint256 amount1ToMint, uint256 slippage, LPtoken _LPtoken)... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":1900:2270  function _createDeposit(address owner, uint256 tokenId) internal {... */\n    tag_88:\n        /* \"contracts/uniswapv3lp.sol\":2061:2106  nonfungiblePositionManager.positions(tokenId) */\n      mload(0x40)\n      shl(0xe3, 0x133f7571)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":13374:13399   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":1981:1995  address token0 */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":780:822  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":2061:2097  nonfungiblePositionManager.positions */\n      0x99fbab88\n      swap1\n        /* \"#utility.yul\":13347:13365   */\n      0x24\n      add\n        /* \"contracts/uniswapv3lp.sol\":2061:2106  nonfungiblePositionManager.positions(tokenId) */\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"contracts/uniswapv3lp.sol\":1976:2106  (, , address token0, address token1, , , , uint128 liquidity, , , , ) =... */\n      pop\n      pop\n      pop\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":2185:2262  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/uniswapv3lp.sol\":2201:2206  owner */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":2185:2262  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":2219:2228  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":2185:2262  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":2238:2244  token0 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":2185:2262  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/uniswapv3lp.sol\":2254:2260  token1 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":2185:2262  Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/uniswapv3lp.sol\":2165:2173  deposits */\n      0x01\n        /* \"contracts/uniswapv3lp.sol\":2165:2182  deposits[tokenId] */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":2174:2181  tokenId */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":2165:2182  deposits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":2165:2262  deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0x80, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":1965:2270  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/uniswapv3lp.sol\":1900:2270  function _createDeposit(address owner, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_91:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15311:15326   */\n      dup6\n      dup2\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":15293:15327   */\n      mstore\n        /* \"#utility.yul\":15363:15378   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":15343:15361   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":15336:15379   */\n      mstore\n        /* \"#utility.yul\":15395:15413   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15388:15422   */\n      dup6\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":15228:15246   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      tag_221\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      tag_222\n      jump\t// in\n    tag_221:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_225\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_224)\n    tag_225:\n      0x60\n      swap2\n      pop\n    tag_224:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      tag_228\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16348:16350   */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16330:16351   */\n      mstore\n        /* \"#utility.yul\":16387:16388   */\n      0x03\n        /* \"#utility.yul\":16367:16385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16360:16389   */\n      mstore\n      shl(0xe9, 0x29aa23)\n        /* \"#utility.yul\":16405:16423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16398:16431   */\n      mstore\n        /* \"#utility.yul\":16448:16466   */\n      0x64\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_85\n        /* \"#utility.yul\":16146:16472   */\n      jump\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n    tag_230:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_94:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16669:16701   */\n      dup5\n      dup2\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":16651:16702   */\n      mstore\n        /* \"#utility.yul\":16718:16736   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":16711:16745   */\n      dup6\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":16624:16642   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_236\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_222\n      jump\t// in\n    tag_236:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_239\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_238)\n    tag_239:\n      0x60\n      swap2\n      pop\n    tag_238:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      tag_242\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_242:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16958:16960   */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16940:16961   */\n      mstore\n        /* \"#utility.yul\":16997:16998   */\n      0x02\n        /* \"#utility.yul\":16977:16995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16970:16999   */\n      mstore\n      shl(0xf0, 0x5341)\n        /* \"#utility.yul\":17015:17033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17008:17040   */\n      mstore\n        /* \"#utility.yul\":17057:17075   */\n      0x64\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_85\n        /* \"#utility.yul\":16756:17081   */\n      jump\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n    tag_243:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":2278:2482  function slippagify(uint256 amount, uint256 slippage) internal pure returns(uint256) {... */\n    tag_97:\n        /* \"contracts/uniswapv3lp.sol\":2354:2361  uint256 */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":2411:2414  1e5 */\n      0x0186a0\n        /* \"contracts/uniswapv3lp.sol\":2399:2407  slippage */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":2399:2414  slippage <= 1e5 */\n      gt\n      iszero\n        /* \"contracts/uniswapv3lp.sol\":2374:2431  require(slippage >= 0 && slippage <= 1e5, \"not in range\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17288:17290   */\n      0x20\n        /* \"contracts/uniswapv3lp.sol\":2374:2431  require(slippage >= 0 && slippage <= 1e5, \"not in range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17270:17291   */\n      mstore\n        /* \"#utility.yul\":17327:17329   */\n      0x0c\n        /* \"#utility.yul\":17307:17325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17300:17330   */\n      mstore\n      shl(0xa0, 0x6e6f7420696e2072616e6765)\n        /* \"#utility.yul\":17346:17364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17339:17381   */\n      mstore\n        /* \"#utility.yul\":17398:17416   */\n      0x64\n      add\n        /* \"contracts/uniswapv3lp.sol\":2374:2431  require(slippage >= 0 && slippage <= 1e5, \"not in range\") */\n      tag_85\n        /* \"#utility.yul\":17086:17422   */\n      jump\n        /* \"contracts/uniswapv3lp.sol\":2374:2431  require(slippage >= 0 && slippage <= 1e5, \"not in range\") */\n    tag_248:\n        /* \"contracts/uniswapv3lp.sol\":2471:2474  1e5 */\n      0x0186a0\n        /* \"contracts/uniswapv3lp.sol\":2457:2469  1e5-slippage */\n      tag_251\n        /* \"contracts/uniswapv3lp.sol\":2461:2469  slippage */\n      dup4\n        /* \"contracts/uniswapv3lp.sol\":2471:2474  1e5 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":2457:2469  1e5-slippage */\n      tag_108\n      jump\t// in\n    tag_251:\n        /* \"contracts/uniswapv3lp.sol\":2449:2470  amount*(1e5-slippage) */\n      tag_252\n      swap1\n        /* \"contracts/uniswapv3lp.sol\":2449:2455  amount */\n      dup6\n        /* \"contracts/uniswapv3lp.sol\":2449:2470  amount*(1e5-slippage) */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/uniswapv3lp.sol\":2449:2474  amount*(1e5-slippage)/1e5 */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/uniswapv3lp.sol\":2442:2474  return amount*(1e5-slippage)/1e5 */\n      swap4\n        /* \"contracts/uniswapv3lp.sol\":2278:2482  function slippagify(uint256 amount, uint256 slippage) internal pure returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_110:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16669:16701   */\n      dup5\n      dup2\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":16651:16702   */\n      mstore\n        /* \"#utility.yul\":16718:16736   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":16711:16745   */\n      dup6\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":16624:16642   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      tag_258\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      tag_222\n      jump\t// in\n    tag_258:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_261\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_260)\n    tag_261:\n      0x60\n      swap2\n      pop\n    tag_260:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      tag_264\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_264:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17927:17929   */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17909:17930   */\n      mstore\n        /* \"#utility.yul\":17966:17967   */\n      0x02\n        /* \"#utility.yul\":17946:17964   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17939:17968   */\n      mstore\n      shl(0xf2, 0x14d5)\n        /* \"#utility.yul\":17984:18002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17977:18009   */\n      mstore\n        /* \"#utility.yul\":18026:18044   */\n      0x64\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_85\n        /* \"#utility.yul\":17725:18050   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18257:18259   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18239:18260   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18276:18294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18269:18299   */\n      mstore\n        /* \"#utility.yul\":18335:18369   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18315:18333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18308:18370   */\n      mstore\n        /* \"#utility.yul\":18387:18405   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_85\n        /* \"#utility.yul\":18055:18411   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/uniswapv3lp.sol\":11105:11583  function _sendToOwner(... */\n    tag_156:\n        /* \"contracts/uniswapv3lp.sol\":11265:11278  address owner */\n      0x00\n        /* \"contracts/uniswapv3lp.sol\":11281:11298  deposits[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/uniswapv3lp.sol\":11281:11289  deposits */\n      0x01\n        /* \"contracts/uniswapv3lp.sol\":11281:11298  deposits[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/uniswapv3lp.sol\":11281:11304  deposits[tokenId].owner */\n      dup1\n      sload\n        /* \"contracts/uniswapv3lp.sol\":11334:11358  deposits[tokenId].token0 */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/uniswapv3lp.sol\":11386:11410  deposits[tokenId].token1 */\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/uniswapv3lp.sol\":11281:11304  deposits[tokenId].owner */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/uniswapv3lp.sol\":11334:11358  deposits[tokenId].token0 */\n      dup3\n      and\n      swap2\n        /* \"contracts/uniswapv3lp.sol\":11386:11410  deposits[tokenId].token1 */\n      and\n        /* \"contracts/uniswapv3lp.sol\":11462:11513  TransferHelper.safeTransfer(token0, owner, amount0) */\n      tag_277\n        /* \"contracts/uniswapv3lp.sol\":11334:11358  deposits[tokenId].token0 */\n      dup3\n        /* \"contracts/uniswapv3lp.sol\":11281:11304  deposits[tokenId].owner */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":11505:11512  amount0 */\n      dup8\n        /* \"contracts/uniswapv3lp.sol\":11462:11489  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":11462:11513  TransferHelper.safeTransfer(token0, owner, amount0) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/uniswapv3lp.sol\":11524:11575  TransferHelper.safeTransfer(token1, owner, amount1) */\n      tag_230\n        /* \"contracts/uniswapv3lp.sol\":11552:11558  token1 */\n      dup2\n        /* \"contracts/uniswapv3lp.sol\":11560:11565  owner */\n      dup5\n        /* \"contracts/uniswapv3lp.sol\":11567:11574  amount1 */\n      dup7\n        /* \"contracts/uniswapv3lp.sol\":11524:11551  TransferHelper.safeTransfer */\n      tag_110\n        /* \"contracts/uniswapv3lp.sol\":11524:11575  TransferHelper.safeTransfer(token1, owner, amount1) */\n      jump\t// in\n        /* \"#utility.yul\":306:437   */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":381:412   */\n      dup2\n      and\n        /* \"#utility.yul\":371:413   */\n      dup2\n      eq\n        /* \"#utility.yul\":361:431   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":427:428   */\n      0x00\n        /* \"#utility.yul\":424:425   */\n      dup1\n        /* \"#utility.yul\":417:429   */\n      revert\n        /* \"#utility.yul\":442:1378   */\n    tag_26:\n        /* \"#utility.yul\":539:545   */\n      0x00\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":555:561   */\n      0x00\n        /* \"#utility.yul\":563:569   */\n      dup1\n        /* \"#utility.yul\":571:577   */\n      0x00\n        /* \"#utility.yul\":624:627   */\n      0x80\n        /* \"#utility.yul\":612:621   */\n      dup7\n        /* \"#utility.yul\":603:610   */\n      dup9\n        /* \"#utility.yul\":599:622   */\n      sub\n        /* \"#utility.yul\":595:628   */\n      slt\n        /* \"#utility.yul\":592:645   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":638:639   */\n      dup1\n        /* \"#utility.yul\":631:643   */\n      revert\n        /* \"#utility.yul\":592:645   */\n    tag_298:\n        /* \"#utility.yul\":680:689   */\n      dup6\n        /* \"#utility.yul\":667:690   */\n      calldataload\n        /* \"#utility.yul\":699:730   */\n      tag_299\n        /* \"#utility.yul\":724:729   */\n      dup2\n        /* \"#utility.yul\":699:730   */\n      tag_281\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":749:754   */\n      swap5\n      pop\n        /* \"#utility.yul\":806:808   */\n      0x20\n        /* \"#utility.yul\":791:809   */\n      dup7\n      add\n        /* \"#utility.yul\":778:810   */\n      calldataload\n        /* \"#utility.yul\":819:852   */\n      tag_300\n        /* \"#utility.yul\":778:810   */\n      dup2\n        /* \"#utility.yul\":819:852   */\n      tag_281\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":871:878   */\n      swap4\n      pop\n        /* \"#utility.yul\":925:927   */\n      0x40\n        /* \"#utility.yul\":910:928   */\n      dup7\n      add\n        /* \"#utility.yul\":897:929   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":980:982   */\n      0x60\n        /* \"#utility.yul\":965:983   */\n      dup7\n      add\n        /* \"#utility.yul\":952:984   */\n      calldataload\n        /* \"#utility.yul\":1003:1021   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1033:1047   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1030:1064   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":1060:1061   */\n      0x00\n        /* \"#utility.yul\":1057:1058   */\n      dup1\n        /* \"#utility.yul\":1050:1062   */\n      revert\n        /* \"#utility.yul\":1030:1064   */\n    tag_301:\n        /* \"#utility.yul\":1098:1104   */\n      dup2\n        /* \"#utility.yul\":1087:1096   */\n      dup9\n        /* \"#utility.yul\":1083:1105   */\n      add\n        /* \"#utility.yul\":1073:1105   */\n      swap2\n      pop\n        /* \"#utility.yul\":1143:1150   */\n      dup9\n        /* \"#utility.yul\":1136:1140   */\n      0x1f\n        /* \"#utility.yul\":1132:1134   */\n      dup4\n        /* \"#utility.yul\":1128:1141   */\n      add\n        /* \"#utility.yul\":1124:1151   */\n      slt\n        /* \"#utility.yul\":1114:1169   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1165:1166   */\n      0x00\n        /* \"#utility.yul\":1162:1163   */\n      dup1\n        /* \"#utility.yul\":1155:1167   */\n      revert\n        /* \"#utility.yul\":1114:1169   */\n    tag_302:\n        /* \"#utility.yul\":1205:1207   */\n      dup2\n        /* \"#utility.yul\":1192:1208   */\n      calldataload\n        /* \"#utility.yul\":1231:1233   */\n      dup2\n        /* \"#utility.yul\":1223:1229   */\n      dup2\n        /* \"#utility.yul\":1220:1234   */\n      gt\n        /* \"#utility.yul\":1217:1251   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1217:1251   */\n    tag_303:\n        /* \"#utility.yul\":1292:1299   */\n      dup10\n        /* \"#utility.yul\":1287:1289   */\n      0x20\n        /* \"#utility.yul\":1278:1284   */\n      dup3\n        /* \"#utility.yul\":1274:1276   */\n      dup6\n        /* \"#utility.yul\":1270:1285   */\n      add\n        /* \"#utility.yul\":1266:1290   */\n      add\n        /* \"#utility.yul\":1263:1300   */\n      gt\n        /* \"#utility.yul\":1260:1317   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1313:1314   */\n      0x00\n        /* \"#utility.yul\":1310:1311   */\n      dup1\n        /* \"#utility.yul\":1303:1315   */\n      revert\n        /* \"#utility.yul\":1260:1317   */\n    tag_304:\n        /* \"#utility.yul\":442:1378   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1344:1346   */\n      0x20\n        /* \"#utility.yul\":1336:1347   */\n      add\n      swap5\n        /* \"#utility.yul\":1366:1372   */\n      swap4\n        /* \"#utility.yul\":442:1378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1975   */\n    tag_32:\n        /* \"#utility.yul\":1676:1682   */\n      0x00\n        /* \"#utility.yul\":1684:1690   */\n      dup1\n        /* \"#utility.yul\":1692:1698   */\n      0x00\n        /* \"#utility.yul\":1700:1706   */\n      dup1\n        /* \"#utility.yul\":1753:1756   */\n      0x80\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1732:1739   */\n      dup8\n        /* \"#utility.yul\":1728:1751   */\n      sub\n        /* \"#utility.yul\":1724:1757   */\n      slt\n        /* \"#utility.yul\":1721:1774   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1767:1768   */\n      dup1\n        /* \"#utility.yul\":1760:1772   */\n      revert\n        /* \"#utility.yul\":1721:1774   */\n    tag_307:\n      pop\n      pop\n        /* \"#utility.yul\":1793:1816   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":1863:1865   */\n      0x20\n        /* \"#utility.yul\":1848:1866   */\n      dup5\n      add\n        /* \"#utility.yul\":1835:1867   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1914:1916   */\n      0x40\n        /* \"#utility.yul\":1899:1917   */\n      dup5\n      add\n        /* \"#utility.yul\":1886:1918   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1965:1967   */\n      0x60\n        /* \"#utility.yul\":1950:1968   */\n      add\n        /* \"#utility.yul\":1937:1969   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1590:1975   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2662:2808   */\n    tag_283:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2741:2746   */\n      dup2\n        /* \"#utility.yul\":2737:2783   */\n      and\n        /* \"#utility.yul\":2730:2735   */\n      dup2\n        /* \"#utility.yul\":2727:2784   */\n      eq\n        /* \"#utility.yul\":2717:2802   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2798:2799   */\n      0x00\n        /* \"#utility.yul\":2795:2796   */\n      dup1\n        /* \"#utility.yul\":2788:2800   */\n      revert\n        /* \"#utility.yul\":2813:3196   */\n    tag_47:\n        /* \"#utility.yul\":2890:2896   */\n      0x00\n        /* \"#utility.yul\":2898:2904   */\n      dup1\n        /* \"#utility.yul\":2906:2912   */\n      0x00\n        /* \"#utility.yul\":2959:2961   */\n      0x60\n        /* \"#utility.yul\":2947:2956   */\n      dup5\n        /* \"#utility.yul\":2938:2945   */\n      dup7\n        /* \"#utility.yul\":2934:2957   */\n      sub\n        /* \"#utility.yul\":2930:2962   */\n      slt\n        /* \"#utility.yul\":2927:2979   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2975:2976   */\n      0x00\n        /* \"#utility.yul\":2972:2973   */\n      dup1\n        /* \"#utility.yul\":2965:2977   */\n      revert\n        /* \"#utility.yul\":2927:2979   */\n    tag_314:\n        /* \"#utility.yul\":3011:3020   */\n      dup4\n        /* \"#utility.yul\":2998:3021   */\n      calldataload\n        /* \"#utility.yul\":2988:3021   */\n      swap3\n      pop\n        /* \"#utility.yul\":3071:3073   */\n      0x20\n        /* \"#utility.yul\":3060:3069   */\n      dup5\n        /* \"#utility.yul\":3056:3074   */\n      add\n        /* \"#utility.yul\":3043:3075   */\n      calldataload\n        /* \"#utility.yul\":3084:3115   */\n      tag_315\n        /* \"#utility.yul\":3109:3114   */\n      dup2\n        /* \"#utility.yul\":3084:3115   */\n      tag_283\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2813:3196   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3134:3139   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      0x40\n        /* \"#utility.yul\":3171:3189   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3158:3190   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2813:3196   */\n      jump\t// out\n        /* \"#utility.yul\":3454:3634   */\n    tag_53:\n        /* \"#utility.yul\":3513:3519   */\n      0x00\n        /* \"#utility.yul\":3566:3568   */\n      0x20\n        /* \"#utility.yul\":3554:3563   */\n      dup3\n        /* \"#utility.yul\":3545:3552   */\n      dup5\n        /* \"#utility.yul\":3541:3564   */\n      sub\n        /* \"#utility.yul\":3537:3569   */\n      slt\n        /* \"#utility.yul\":3534:3586   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3582:3583   */\n      0x00\n        /* \"#utility.yul\":3579:3580   */\n      dup1\n        /* \"#utility.yul\":3572:3584   */\n      revert\n        /* \"#utility.yul\":3534:3586   */\n    tag_318:\n      pop\n        /* \"#utility.yul\":3605:3628   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3454:3634   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4608:4855   */\n    tag_75:\n        /* \"#utility.yul\":4667:4673   */\n      0x00\n        /* \"#utility.yul\":4720:4722   */\n      0x20\n        /* \"#utility.yul\":4708:4717   */\n      dup3\n        /* \"#utility.yul\":4699:4706   */\n      dup5\n        /* \"#utility.yul\":4695:4718   */\n      sub\n        /* \"#utility.yul\":4691:4723   */\n      slt\n        /* \"#utility.yul\":4688:4740   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":4736:4737   */\n      0x00\n        /* \"#utility.yul\":4733:4734   */\n      dup1\n        /* \"#utility.yul\":4726:4738   */\n      revert\n        /* \"#utility.yul\":4688:4740   */\n    tag_323:\n        /* \"#utility.yul\":4775:4784   */\n      dup2\n        /* \"#utility.yul\":4762:4785   */\n      calldataload\n        /* \"#utility.yul\":4794:4825   */\n      tag_254\n        /* \"#utility.yul\":4819:4824   */\n      dup2\n        /* \"#utility.yul\":4794:4825   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":4860:4978   */\n    tag_284:\n        /* \"#utility.yul\":4947:4952   */\n      dup1\n        /* \"#utility.yul\":4944:4945   */\n      0x02\n        /* \"#utility.yul\":4933:4953   */\n      signextend\n        /* \"#utility.yul\":4926:4931   */\n      dup2\n        /* \"#utility.yul\":4923:4954   */\n      eq\n        /* \"#utility.yul\":4913:4972   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":4968:4969   */\n      0x00\n        /* \"#utility.yul\":4965:4966   */\n      dup1\n        /* \"#utility.yul\":4958:4970   */\n      revert\n        /* \"#utility.yul\":4983:6010   */\n    tag_79:\n        /* \"#utility.yul\":5116:5122   */\n      0x00\n        /* \"#utility.yul\":5124:5130   */\n      dup1\n        /* \"#utility.yul\":5132:5138   */\n      0x00\n        /* \"#utility.yul\":5140:5146   */\n      dup1\n        /* \"#utility.yul\":5148:5154   */\n      0x00\n        /* \"#utility.yul\":5156:5162   */\n      dup1\n        /* \"#utility.yul\":5164:5170   */\n      0x00\n        /* \"#utility.yul\":5172:5178   */\n      dup1\n        /* \"#utility.yul\":5225:5228   */\n      0x0100\n        /* \"#utility.yul\":5213:5222   */\n      dup10\n        /* \"#utility.yul\":5204:5211   */\n      dup12\n        /* \"#utility.yul\":5200:5223   */\n      sub\n        /* \"#utility.yul\":5196:5229   */\n      slt\n        /* \"#utility.yul\":5193:5246   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5242:5243   */\n      0x00\n        /* \"#utility.yul\":5239:5240   */\n      dup1\n        /* \"#utility.yul\":5232:5244   */\n      revert\n        /* \"#utility.yul\":5193:5246   */\n    tag_328:\n        /* \"#utility.yul\":5281:5290   */\n      dup9\n        /* \"#utility.yul\":5268:5291   */\n      calldataload\n        /* \"#utility.yul\":5300:5331   */\n      tag_329\n        /* \"#utility.yul\":5325:5330   */\n      dup2\n        /* \"#utility.yul\":5300:5331   */\n      tag_281\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5350:5355   */\n      swap8\n      pop\n        /* \"#utility.yul\":5407:5409   */\n      0x20\n        /* \"#utility.yul\":5392:5410   */\n      dup10\n      add\n        /* \"#utility.yul\":5379:5411   */\n      calldataload\n        /* \"#utility.yul\":5420:5453   */\n      tag_330\n        /* \"#utility.yul\":5379:5411   */\n      dup2\n        /* \"#utility.yul\":5420:5453   */\n      tag_281\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5472:5479   */\n      swap7\n      pop\n        /* \"#utility.yul\":5531:5533   */\n      0x40\n        /* \"#utility.yul\":5516:5534   */\n      dup10\n      add\n        /* \"#utility.yul\":5503:5535   */\n      calldataload\n        /* \"#utility.yul\":5544:5575   */\n      tag_331\n        /* \"#utility.yul\":5503:5535   */\n      dup2\n        /* \"#utility.yul\":5544:5575   */\n      tag_284\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5594:5601   */\n      swap6\n      pop\n        /* \"#utility.yul\":5653:5655   */\n      0x60\n        /* \"#utility.yul\":5638:5656   */\n      dup10\n      add\n        /* \"#utility.yul\":5625:5657   */\n      calldataload\n        /* \"#utility.yul\":5666:5697   */\n      tag_332\n        /* \"#utility.yul\":5625:5657   */\n      dup2\n        /* \"#utility.yul\":5666:5697   */\n      tag_284\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5716:5723   */\n      swap5\n      pop\n        /* \"#utility.yul\":5770:5773   */\n      0x80\n        /* \"#utility.yul\":5755:5774   */\n      dup10\n      add\n        /* \"#utility.yul\":5742:5775   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":5822:5825   */\n      0xa0\n        /* \"#utility.yul\":5807:5826   */\n      dup10\n      add\n        /* \"#utility.yul\":5794:5827   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":5874:5877   */\n      0xc0\n        /* \"#utility.yul\":5859:5878   */\n      dup10\n      add\n        /* \"#utility.yul\":5846:5879   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5931:5934   */\n      0xe0\n        /* \"#utility.yul\":5916:5935   */\n      dup10\n      add\n        /* \"#utility.yul\":5903:5936   */\n      calldataload\n        /* \"#utility.yul\":5945:5978   */\n      tag_333\n        /* \"#utility.yul\":5903:5936   */\n      dup2\n        /* \"#utility.yul\":5945:5978   */\n      tag_281\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5997:6004   */\n      dup1\n        /* \"#utility.yul\":5987:6004   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4983:6010   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7383:7521   */\n    tag_285:\n        /* \"#utility.yul\":7462:7475   */\n      dup1\n      mload\n        /* \"#utility.yul\":7484:7515   */\n      tag_338\n        /* \"#utility.yul\":7462:7475   */\n      dup2\n        /* \"#utility.yul\":7484:7515   */\n      tag_283\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7383:7521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7526:7899   */\n    tag_104:\n        /* \"#utility.yul\":7614:7620   */\n      0x00\n        /* \"#utility.yul\":7622:7628   */\n      dup1\n        /* \"#utility.yul\":7630:7636   */\n      0x00\n        /* \"#utility.yul\":7683:7685   */\n      0x60\n        /* \"#utility.yul\":7671:7680   */\n      dup5\n        /* \"#utility.yul\":7662:7669   */\n      dup7\n        /* \"#utility.yul\":7658:7681   */\n      sub\n        /* \"#utility.yul\":7654:7686   */\n      slt\n        /* \"#utility.yul\":7651:7703   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":7699:7700   */\n      0x00\n        /* \"#utility.yul\":7696:7697   */\n      dup1\n        /* \"#utility.yul\":7689:7701   */\n      revert\n        /* \"#utility.yul\":7651:7703   */\n    tag_340:\n        /* \"#utility.yul\":7731:7740   */\n      dup4\n        /* \"#utility.yul\":7725:7741   */\n      mload\n        /* \"#utility.yul\":7750:7781   */\n      tag_341\n        /* \"#utility.yul\":7775:7780   */\n      dup2\n        /* \"#utility.yul\":7750:7781   */\n      tag_283\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7845:7847   */\n      0x20\n        /* \"#utility.yul\":7830:7848   */\n      dup6\n      add\n        /* \"#utility.yul\":7824:7849   */\n      mload\n        /* \"#utility.yul\":7889:7891   */\n      0x40\n        /* \"#utility.yul\":7874:7892   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":7868:7893   */\n      mload\n        /* \"#utility.yul\":7800:7805   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7824:7849   */\n      swap5\n      swap6\n      pop\n        /* \"#utility.yul\":7868:7893   */\n      swap4\n        /* \"#utility.yul\":7526:7899   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8031   */\n    tag_286:\n        /* \"#utility.yul\":7965:7975   */\n      0x4e487b71\n        /* \"#utility.yul\":7960:7963   */\n      0xe0\n        /* \"#utility.yul\":7956:7976   */\n      shl\n        /* \"#utility.yul\":7953:7954   */\n      0x00\n        /* \"#utility.yul\":7946:7977   */\n      mstore\n        /* \"#utility.yul\":7996:8000   */\n      0x11\n        /* \"#utility.yul\":7993:7994   */\n      0x04\n        /* \"#utility.yul\":7986:8001   */\n      mstore\n        /* \"#utility.yul\":8020:8024   */\n      0x24\n        /* \"#utility.yul\":8017:8018   */\n      0x00\n        /* \"#utility.yul\":8010:8025   */\n      revert\n        /* \"#utility.yul\":8036:8161   */\n    tag_108:\n        /* \"#utility.yul\":8076:8080   */\n      0x00\n        /* \"#utility.yul\":8104:8105   */\n      dup3\n        /* \"#utility.yul\":8101:8102   */\n      dup3\n        /* \"#utility.yul\":8098:8106   */\n      lt\n        /* \"#utility.yul\":8095:8129   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":8109:8127   */\n      tag_345\n      tag_286\n      jump\t// in\n    tag_345:\n      pop\n        /* \"#utility.yul\":8146:8155   */\n      sub\n      swap1\n        /* \"#utility.yul\":8036:8161   */\n      jump\t// out\n        /* \"#utility.yul\":8166:8481   */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8358:8390   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8340:8391   */\n      dup3\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":8427:8474   */\n      and\n        /* \"#utility.yul\":8422:8424   */\n      0x20\n        /* \"#utility.yul\":8407:8425   */\n      dup3\n      add\n        /* \"#utility.yul\":8400:8475   */\n      mstore\n        /* \"#utility.yul\":8328:8330   */\n      0x40\n        /* \"#utility.yul\":8313:8331   */\n      add\n      swap1\n        /* \"#utility.yul\":8166:8481   */\n      jump\t// out\n        /* \"#utility.yul\":8486:8670   */\n    tag_132:\n        /* \"#utility.yul\":8556:8562   */\n      0x00\n        /* \"#utility.yul\":8609:8611   */\n      0x20\n        /* \"#utility.yul\":8597:8606   */\n      dup3\n        /* \"#utility.yul\":8588:8595   */\n      dup5\n        /* \"#utility.yul\":8584:8607   */\n      sub\n        /* \"#utility.yul\":8580:8612   */\n      slt\n        /* \"#utility.yul\":8577:8629   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":8625:8626   */\n      0x00\n        /* \"#utility.yul\":8622:8623   */\n      dup1\n        /* \"#utility.yul\":8615:8627   */\n      revert\n        /* \"#utility.yul\":8577:8629   */\n    tag_348:\n      pop\n        /* \"#utility.yul\":8648:8664   */\n      mload\n      swap2\n        /* \"#utility.yul\":8486:8670   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9019:9306   */\n    tag_138:\n        /* \"#utility.yul\":9059:9066   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":9152:9154   */\n      dup1\n        /* \"#utility.yul\":9149:9150   */\n      dup4\n        /* \"#utility.yul\":9145:9155   */\n      and\n        /* \"#utility.yul\":9182:9184   */\n      dup2\n        /* \"#utility.yul\":9179:9180   */\n      dup6\n        /* \"#utility.yul\":9175:9185   */\n      and\n        /* \"#utility.yul\":9238:9241   */\n      dup2\n        /* \"#utility.yul\":9234:9236   */\n      dup4\n        /* \"#utility.yul\":9230:9242   */\n      div\n        /* \"#utility.yul\":9225:9228   */\n      dup2\n        /* \"#utility.yul\":9222:9243   */\n      gt\n        /* \"#utility.yul\":9215:9218   */\n      dup3\n        /* \"#utility.yul\":9208:9219   */\n      iszero\n        /* \"#utility.yul\":9201:9220   */\n      iszero\n        /* \"#utility.yul\":9197:9244   */\n      and\n        /* \"#utility.yul\":9194:9267   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":9247:9265   */\n      tag_352\n      tag_286\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9287:9300   */\n      mul\n      swap5\n        /* \"#utility.yul\":9019:9306   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9438   */\n    tag_287:\n        /* \"#utility.yul\":9372:9382   */\n      0x4e487b71\n        /* \"#utility.yul\":9367:9370   */\n      0xe0\n        /* \"#utility.yul\":9363:9383   */\n      shl\n        /* \"#utility.yul\":9360:9361   */\n      0x00\n        /* \"#utility.yul\":9353:9384   */\n      mstore\n        /* \"#utility.yul\":9403:9407   */\n      0x12\n        /* \"#utility.yul\":9400:9401   */\n      0x04\n        /* \"#utility.yul\":9393:9408   */\n      mstore\n        /* \"#utility.yul\":9427:9431   */\n      0x24\n        /* \"#utility.yul\":9424:9425   */\n      0x00\n        /* \"#utility.yul\":9417:9432   */\n      revert\n        /* \"#utility.yul\":9443:9659   */\n    tag_140:\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":9570:9572   */\n      dup1\n        /* \"#utility.yul\":9567:9568   */\n      dup5\n        /* \"#utility.yul\":9563:9573   */\n      and\n        /* \"#utility.yul\":9592:9595   */\n      dup1\n        /* \"#utility.yul\":9582:9619   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9599:9617   */\n      tag_356\n      tag_287\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9637:9647   */\n      swap3\n      and\n        /* \"#utility.yul\":9633:9653   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":9443:9659   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10229:10474   */\n    tag_149:\n        /* \"#utility.yul\":10308:10314   */\n      0x00\n        /* \"#utility.yul\":10316:10322   */\n      dup1\n        /* \"#utility.yul\":10369:10371   */\n      0x40\n        /* \"#utility.yul\":10357:10366   */\n      dup4\n        /* \"#utility.yul\":10348:10355   */\n      dup6\n        /* \"#utility.yul\":10344:10367   */\n      sub\n        /* \"#utility.yul\":10340:10372   */\n      slt\n        /* \"#utility.yul\":10337:10389   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":10385:10386   */\n      0x00\n        /* \"#utility.yul\":10382:10383   */\n      dup1\n        /* \"#utility.yul\":10375:10387   */\n      revert\n        /* \"#utility.yul\":10337:10389   */\n    tag_359:\n      pop\n      pop\n        /* \"#utility.yul\":10408:10424   */\n      dup1\n      mload\n        /* \"#utility.yul\":10464:10466   */\n      0x20\n        /* \"#utility.yul\":10449:10467   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10443:10468   */\n      mload\n        /* \"#utility.yul\":10408:10424   */\n      swap1\n      swap3\n        /* \"#utility.yul\":10443:10468   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":10229:10474   */\n      jump\t// out\n        /* \"#utility.yul\":10479:11053   */\n    tag_151:\n        /* \"#utility.yul\":10706:10719   */\n      dup2\n      mload\n        /* \"#utility.yul\":10688:10720   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10780:10784   */\n      0x20\n        /* \"#utility.yul\":10768:10785   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10762:10786   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10758:10808   */\n      and\n        /* \"#utility.yul\":10736:10756   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10729:10809   */\n      mstore\n        /* \"#utility.yul\":10856:10860   */\n      0x40\n        /* \"#utility.yul\":10844:10861   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10838:10862   */\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":10953:10974   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":10931:10951   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":10924:10975   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11035:11039   */\n      0x60\n        /* \"#utility.yul\":11023:11040   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":11017:11041   */\n      mload\n        /* \"#utility.yul\":11013:11046   */\n      and\n        /* \"#utility.yul\":10991:11011   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":10984:11047   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10675:10678   */\n      0x80\n        /* \"#utility.yul\":10660:10679   */\n      add\n      swap1\n        /* \"#utility.yul\":10479:11053   */\n      jump\t// out\n        /* \"#utility.yul\":11561:12783   */\n    tag_193:\n        /* \"#utility.yul\":11783:11796   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2411:2442   */\n      and\n        /* \"#utility.yul\":2399:2443   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11751:11754   */\n      0x0160\n        /* \"#utility.yul\":11736:11755   */\n      dup2\n      add\n        /* \"#utility.yul\":11855:11859   */\n      0x20\n        /* \"#utility.yul\":11847:11853   */\n      dup4\n        /* \"#utility.yul\":11843:11860   */\n      add\n        /* \"#utility.yul\":11837:11861   */\n      mload\n        /* \"#utility.yul\":11870:11924   */\n      tag_365\n        /* \"#utility.yul\":11918:11922   */\n      0x20\n        /* \"#utility.yul\":11907:11916   */\n      dup5\n        /* \"#utility.yul\":11903:11923   */\n      add\n        /* \"#utility.yul\":11889:11901   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2411:2442   */\n      and\n        /* \"#utility.yul\":2399:2443   */\n      swap1\n      mstore\n        /* \"#utility.yul\":2345:2449   */\n      jump\n        /* \"#utility.yul\":11870:11924   */\n    tag_365:\n      pop\n        /* \"#utility.yul\":11973:11977   */\n      0x40\n        /* \"#utility.yul\":11965:11971   */\n      dup4\n        /* \"#utility.yul\":11961:11978   */\n      add\n        /* \"#utility.yul\":11955:11979   */\n      mload\n        /* \"#utility.yul\":11988:12043   */\n      tag_366\n        /* \"#utility.yul\":12037:12041   */\n      0x40\n        /* \"#utility.yul\":12026:12035   */\n      dup5\n        /* \"#utility.yul\":12022:12042   */\n      add\n        /* \"#utility.yul\":12006:12020   */\n      dup3\n        /* \"#utility.yul\":90:98   */\n      0xffffff\n        /* \"#utility.yul\":79:99   */\n      and\n        /* \"#utility.yul\":67:100   */\n      swap1\n      mstore\n        /* \"#utility.yul\":14:106   */\n      jump\n        /* \"#utility.yul\":11988:12043   */\n    tag_366:\n      pop\n        /* \"#utility.yul\":12092:12096   */\n      0x60\n        /* \"#utility.yul\":12084:12090   */\n      dup4\n        /* \"#utility.yul\":12080:12097   */\n      add\n        /* \"#utility.yul\":12074:12098   */\n      mload\n        /* \"#utility.yul\":12107:12161   */\n      tag_367\n        /* \"#utility.yul\":12155:12159   */\n      0x60\n        /* \"#utility.yul\":12144:12153   */\n      dup5\n        /* \"#utility.yul\":12140:12160   */\n      add\n        /* \"#utility.yul\":12124:12138   */\n      dup3\n        /* \"#utility.yul\":11540:11541   */\n      0x02\n        /* \"#utility.yul\":11529:11549   */\n      signextend\n        /* \"#utility.yul\":11517:11550   */\n      swap1\n      mstore\n        /* \"#utility.yul\":11465:11556   */\n      jump\n        /* \"#utility.yul\":12107:12161   */\n    tag_367:\n      pop\n        /* \"#utility.yul\":12210:12214   */\n      0x80\n        /* \"#utility.yul\":12202:12208   */\n      dup4\n        /* \"#utility.yul\":12198:12215   */\n      add\n        /* \"#utility.yul\":12192:12216   */\n      mload\n        /* \"#utility.yul\":12225:12279   */\n      tag_368\n        /* \"#utility.yul\":12273:12277   */\n      0x80\n        /* \"#utility.yul\":12262:12271   */\n      dup5\n        /* \"#utility.yul\":12258:12278   */\n      add\n        /* \"#utility.yul\":12242:12256   */\n      dup3\n        /* \"#utility.yul\":11540:11541   */\n      0x02\n        /* \"#utility.yul\":11529:11549   */\n      signextend\n        /* \"#utility.yul\":11517:11550   */\n      swap1\n      mstore\n        /* \"#utility.yul\":11465:11556   */\n      jump\n        /* \"#utility.yul\":12225:12279   */\n    tag_368:\n      pop\n        /* \"#utility.yul\":12335:12339   */\n      0xa0\n        /* \"#utility.yul\":12327:12333   */\n      dup4\n        /* \"#utility.yul\":12323:12340   */\n      add\n        /* \"#utility.yul\":12317:12341   */\n      mload\n        /* \"#utility.yul\":12310:12314   */\n      0xa0\n        /* \"#utility.yul\":12299:12308   */\n      dup4\n        /* \"#utility.yul\":12295:12315   */\n      add\n        /* \"#utility.yul\":12288:12342   */\n      mstore\n        /* \"#utility.yul\":12398:12402   */\n      0xc0\n        /* \"#utility.yul\":12390:12396   */\n      dup4\n        /* \"#utility.yul\":12386:12403   */\n      add\n        /* \"#utility.yul\":12380:12404   */\n      mload\n        /* \"#utility.yul\":12373:12377   */\n      0xc0\n        /* \"#utility.yul\":12362:12371   */\n      dup4\n        /* \"#utility.yul\":12358:12378   */\n      add\n        /* \"#utility.yul\":12351:12405   */\n      mstore\n        /* \"#utility.yul\":12461:12465   */\n      0xe0\n        /* \"#utility.yul\":12453:12459   */\n      dup4\n        /* \"#utility.yul\":12449:12466   */\n      add\n        /* \"#utility.yul\":12443:12467   */\n      mload\n        /* \"#utility.yul\":12436:12440   */\n      0xe0\n        /* \"#utility.yul\":12425:12434   */\n      dup4\n        /* \"#utility.yul\":12421:12441   */\n      add\n        /* \"#utility.yul\":12414:12468   */\n      mstore\n        /* \"#utility.yul\":12487:12493   */\n      0x0100\n        /* \"#utility.yul\":12547:12549   */\n      dup1\n        /* \"#utility.yul\":12539:12545   */\n      dup5\n        /* \"#utility.yul\":12535:12550   */\n      add\n        /* \"#utility.yul\":12529:12551   */\n      mload\n        /* \"#utility.yul\":12524:12526   */\n      dup2\n        /* \"#utility.yul\":12513:12522   */\n      dup5\n        /* \"#utility.yul\":12509:12527   */\n      add\n        /* \"#utility.yul\":12502:12552   */\n      mstore\n      pop\n        /* \"#utility.yul\":12571:12577   */\n      0x0120\n        /* \"#utility.yul\":12626:12628   */\n      dup1\n        /* \"#utility.yul\":12618:12624   */\n      dup5\n        /* \"#utility.yul\":12614:12629   */\n      add\n        /* \"#utility.yul\":12608:12630   */\n      mload\n        /* \"#utility.yul\":12639:12693   */\n      tag_369\n        /* \"#utility.yul\":12689:12691   */\n      dup3\n        /* \"#utility.yul\":12678:12687   */\n      dup6\n        /* \"#utility.yul\":12674:12692   */\n      add\n        /* \"#utility.yul\":12658:12672   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2411:2442   */\n      and\n        /* \"#utility.yul\":2399:2443   */\n      swap1\n      mstore\n        /* \"#utility.yul\":2345:2449   */\n      jump\n        /* \"#utility.yul\":12639:12693   */\n    tag_369:\n      pop\n      pop\n        /* \"#utility.yul\":12712:12718   */\n      0x0140\n        /* \"#utility.yul\":12760:12775   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":12754:12776   */\n      mload\n        /* \"#utility.yul\":12734:12752   */\n      swap2\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":12727:12777   */\n      mstore\n        /* \"#utility.yul\":11561:12783   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12788:13223   */\n    tag_197:\n        /* \"#utility.yul\":12885:12891   */\n      0x00\n        /* \"#utility.yul\":12893:12899   */\n      dup1\n        /* \"#utility.yul\":12901:12907   */\n      0x00\n        /* \"#utility.yul\":12909:12915   */\n      dup1\n        /* \"#utility.yul\":12962:12965   */\n      0x80\n        /* \"#utility.yul\":12950:12959   */\n      dup6\n        /* \"#utility.yul\":12941:12948   */\n      dup8\n        /* \"#utility.yul\":12937:12960   */\n      sub\n        /* \"#utility.yul\":12933:12966   */\n      slt\n        /* \"#utility.yul\":12930:12983   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12976:12977   */\n      dup1\n        /* \"#utility.yul\":12969:12981   */\n      revert\n        /* \"#utility.yul\":12930:12983   */\n    tag_371:\n        /* \"#utility.yul\":13008:13017   */\n      dup5\n        /* \"#utility.yul\":13002:13018   */\n      mload\n        /* \"#utility.yul\":12992:13018   */\n      swap4\n      pop\n        /* \"#utility.yul\":13061:13063   */\n      0x20\n        /* \"#utility.yul\":13050:13059   */\n      dup6\n        /* \"#utility.yul\":13046:13064   */\n      add\n        /* \"#utility.yul\":13040:13065   */\n      mload\n        /* \"#utility.yul\":13074:13105   */\n      tag_372\n        /* \"#utility.yul\":13099:13104   */\n      dup2\n        /* \"#utility.yul\":13074:13105   */\n      tag_283\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":13169:13171   */\n      0x40\n        /* \"#utility.yul\":13154:13172   */\n      dup7\n      add\n        /* \"#utility.yul\":13148:13173   */\n      mload\n        /* \"#utility.yul\":13213:13215   */\n      0x60\n        /* \"#utility.yul\":13198:13216   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":13192:13217   */\n      mload\n        /* \"#utility.yul\":12788:13223   */\n      swap5\n      swap8\n        /* \"#utility.yul\":13124:13129   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":12788:13223   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13410:13548   */\n    tag_289:\n        /* \"#utility.yul\":13489:13502   */\n      dup1\n      mload\n        /* \"#utility.yul\":13511:13542   */\n      tag_338\n        /* \"#utility.yul\":13489:13502   */\n      dup2\n        /* \"#utility.yul\":13511:13542   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":13553:13718   */\n    tag_290:\n        /* \"#utility.yul\":13631:13644   */\n      dup1\n      mload\n        /* \"#utility.yul\":13684:13692   */\n      0xffffff\n        /* \"#utility.yul\":13673:13693   */\n      dup2\n      and\n        /* \"#utility.yul\":13663:13694   */\n      dup2\n      eq\n        /* \"#utility.yul\":13653:13712   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":13708:13709   */\n      0x00\n        /* \"#utility.yul\":13705:13706   */\n      dup1\n        /* \"#utility.yul\":13698:13710   */\n      revert\n        /* \"#utility.yul\":13723:13857   */\n    tag_291:\n        /* \"#utility.yul\":13800:13813   */\n      dup1\n      mload\n        /* \"#utility.yul\":13822:13851   */\n      tag_338\n        /* \"#utility.yul\":13800:13813   */\n      dup2\n        /* \"#utility.yul\":13822:13851   */\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":13862:15048   */\n    tag_217:\n        /* \"#utility.yul\":14025:14031   */\n      0x00\n        /* \"#utility.yul\":14033:14039   */\n      dup1\n        /* \"#utility.yul\":14041:14047   */\n      0x00\n        /* \"#utility.yul\":14049:14055   */\n      dup1\n        /* \"#utility.yul\":14057:14063   */\n      0x00\n        /* \"#utility.yul\":14065:14071   */\n      dup1\n        /* \"#utility.yul\":14073:14079   */\n      0x00\n        /* \"#utility.yul\":14081:14087   */\n      dup1\n        /* \"#utility.yul\":14089:14095   */\n      0x00\n        /* \"#utility.yul\":14097:14103   */\n      dup1\n        /* \"#utility.yul\":14105:14112   */\n      0x00\n        /* \"#utility.yul\":14114:14121   */\n      dup1\n        /* \"#utility.yul\":14168:14171   */\n      0x0180\n        /* \"#utility.yul\":14156:14165   */\n      dup14\n        /* \"#utility.yul\":14147:14154   */\n      dup16\n        /* \"#utility.yul\":14143:14166   */\n      sub\n        /* \"#utility.yul\":14139:14172   */\n      slt\n        /* \"#utility.yul\":14136:14189   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":14185:14186   */\n      0x00\n        /* \"#utility.yul\":14182:14183   */\n      dup1\n        /* \"#utility.yul\":14175:14187   */\n      revert\n        /* \"#utility.yul\":14136:14189   */\n    tag_381:\n        /* \"#utility.yul\":14217:14226   */\n      dup13\n        /* \"#utility.yul\":14211:14227   */\n      mload\n        /* \"#utility.yul\":14267:14293   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":14260:14265   */\n      dup2\n        /* \"#utility.yul\":14256:14294   */\n      and\n        /* \"#utility.yul\":14249:14254   */\n      dup2\n        /* \"#utility.yul\":14246:14295   */\n      eq\n        /* \"#utility.yul\":14236:14313   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":14309:14310   */\n      0x00\n        /* \"#utility.yul\":14306:14307   */\n      dup1\n        /* \"#utility.yul\":14299:14311   */\n      revert\n        /* \"#utility.yul\":14236:14313   */\n    tag_382:\n        /* \"#utility.yul\":14332:14337   */\n      swap12\n      pop\n        /* \"#utility.yul\":14356:14405   */\n      tag_383\n        /* \"#utility.yul\":14401:14403   */\n      0x20\n        /* \"#utility.yul\":14386:14404   */\n      dup15\n      add\n        /* \"#utility.yul\":14356:14405   */\n      tag_289\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":14346:14405   */\n      swap11\n      pop\n        /* \"#utility.yul\":14424:14473   */\n      tag_384\n        /* \"#utility.yul\":14469:14471   */\n      0x40\n        /* \"#utility.yul\":14458:14467   */\n      dup15\n        /* \"#utility.yul\":14454:14472   */\n      add\n        /* \"#utility.yul\":14424:14473   */\n      tag_289\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":14414:14473   */\n      swap10\n      pop\n        /* \"#utility.yul\":14492:14541   */\n      tag_385\n        /* \"#utility.yul\":14537:14539   */\n      0x60\n        /* \"#utility.yul\":14526:14535   */\n      dup15\n        /* \"#utility.yul\":14522:14540   */\n      add\n        /* \"#utility.yul\":14492:14541   */\n      tag_289\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":14482:14541   */\n      swap9\n      pop\n        /* \"#utility.yul\":14560:14609   */\n      tag_386\n        /* \"#utility.yul\":14604:14607   */\n      0x80\n        /* \"#utility.yul\":14593:14602   */\n      dup15\n        /* \"#utility.yul\":14589:14608   */\n      add\n        /* \"#utility.yul\":14560:14609   */\n      tag_290\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14550:14609   */\n      swap8\n      pop\n        /* \"#utility.yul\":14628:14676   */\n      tag_387\n        /* \"#utility.yul\":14671:14674   */\n      0xa0\n        /* \"#utility.yul\":14660:14669   */\n      dup15\n        /* \"#utility.yul\":14656:14675   */\n      add\n        /* \"#utility.yul\":14628:14676   */\n      tag_291\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14618:14676   */\n      swap7\n      pop\n        /* \"#utility.yul\":14695:14743   */\n      tag_388\n        /* \"#utility.yul\":14738:14741   */\n      0xc0\n        /* \"#utility.yul\":14727:14736   */\n      dup15\n        /* \"#utility.yul\":14723:14742   */\n      add\n        /* \"#utility.yul\":14695:14743   */\n      tag_291\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14685:14743   */\n      swap6\n      pop\n        /* \"#utility.yul\":14762:14812   */\n      tag_389\n        /* \"#utility.yul\":14807:14810   */\n      0xe0\n        /* \"#utility.yul\":14796:14805   */\n      dup15\n        /* \"#utility.yul\":14792:14811   */\n      add\n        /* \"#utility.yul\":14762:14812   */\n      tag_285\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14752:14812   */\n      swap5\n      pop\n        /* \"#utility.yul\":14852:14855   */\n      0x0100\n        /* \"#utility.yul\":14841:14850   */\n      dup14\n        /* \"#utility.yul\":14837:14856   */\n      add\n        /* \"#utility.yul\":14831:14857   */\n      mload\n        /* \"#utility.yul\":14821:14857   */\n      swap4\n      pop\n        /* \"#utility.yul\":14897:14900   */\n      0x0120\n        /* \"#utility.yul\":14886:14895   */\n      dup14\n        /* \"#utility.yul\":14882:14901   */\n      add\n        /* \"#utility.yul\":14876:14902   */\n      mload\n        /* \"#utility.yul\":14866:14902   */\n      swap3\n      pop\n        /* \"#utility.yul\":14922:14972   */\n      tag_390\n        /* \"#utility.yul\":14967:14970   */\n      0x0140\n        /* \"#utility.yul\":14956:14965   */\n      dup15\n        /* \"#utility.yul\":14952:14971   */\n      add\n        /* \"#utility.yul\":14922:14972   */\n      tag_285\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":14911:14972   */\n      swap2\n      pop\n        /* \"#utility.yul\":14992:15042   */\n      tag_391\n        /* \"#utility.yul\":15037:15040   */\n      0x0160\n        /* \"#utility.yul\":15026:15035   */\n      dup15\n        /* \"#utility.yul\":15022:15041   */\n      add\n        /* \"#utility.yul\":14992:15042   */\n      tag_285\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14981:15042   */\n      swap1\n      pop\n        /* \"#utility.yul\":13862:15048   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":15433:15859   */\n    tag_222:\n        /* \"#utility.yul\":15562:15565   */\n      0x00\n        /* \"#utility.yul\":15600:15606   */\n      dup3\n        /* \"#utility.yul\":15594:15607   */\n      mload\n        /* \"#utility.yul\":15625:15626   */\n      0x00\n        /* \"#utility.yul\":15635:15764   */\n    tag_394:\n        /* \"#utility.yul\":15649:15655   */\n      dup2\n        /* \"#utility.yul\":15646:15647   */\n      dup2\n        /* \"#utility.yul\":15643:15656   */\n      lt\n        /* \"#utility.yul\":15635:15764   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":15747:15751   */\n      0x20\n        /* \"#utility.yul\":15731:15745   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":15727:15752   */\n      dup2\n      add\n        /* \"#utility.yul\":15721:15753   */\n      mload\n        /* \"#utility.yul\":15708:15719   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":15701:15754   */\n      mstore\n        /* \"#utility.yul\":15664:15676   */\n      add\n        /* \"#utility.yul\":15635:15764   */\n      jump(tag_394)\n    tag_396:\n        /* \"#utility.yul\":15782:15788   */\n      dup2\n        /* \"#utility.yul\":15779:15780   */\n      dup2\n        /* \"#utility.yul\":15776:15789   */\n      gt\n        /* \"#utility.yul\":15773:15821   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":15817:15818   */\n      0x00\n        /* \"#utility.yul\":15808:15814   */\n      dup3\n        /* \"#utility.yul\":15803:15806   */\n      dup6\n        /* \"#utility.yul\":15799:15815   */\n      add\n        /* \"#utility.yul\":15792:15819   */\n      mstore\n        /* \"#utility.yul\":15773:15821   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":15837:15853   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":15433:15859   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15864:16141   */\n    tag_229:\n        /* \"#utility.yul\":15931:15937   */\n      0x00\n        /* \"#utility.yul\":15984:15986   */\n      0x20\n        /* \"#utility.yul\":15972:15981   */\n      dup3\n        /* \"#utility.yul\":15963:15970   */\n      dup5\n        /* \"#utility.yul\":15959:15982   */\n      sub\n        /* \"#utility.yul\":15955:15987   */\n      slt\n        /* \"#utility.yul\":15952:16004   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":16000:16001   */\n      0x00\n        /* \"#utility.yul\":15997:15998   */\n      dup1\n        /* \"#utility.yul\":15990:16002   */\n      revert\n        /* \"#utility.yul\":15952:16004   */\n    tag_399:\n        /* \"#utility.yul\":16032:16041   */\n      dup2\n        /* \"#utility.yul\":16026:16042   */\n      mload\n        /* \"#utility.yul\":16085:16090   */\n      dup1\n        /* \"#utility.yul\":16078:16091   */\n      iszero\n        /* \"#utility.yul\":16071:16092   */\n      iszero\n        /* \"#utility.yul\":16064:16069   */\n      dup2\n        /* \"#utility.yul\":16061:16093   */\n      eq\n        /* \"#utility.yul\":16051:16111   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":16107:16108   */\n      0x00\n        /* \"#utility.yul\":16104:16105   */\n      dup1\n        /* \"#utility.yul\":16097:16109   */\n      revert\n        /* \"#utility.yul\":17427:17595   */\n    tag_253:\n        /* \"#utility.yul\":17467:17474   */\n      0x00\n        /* \"#utility.yul\":17533:17534   */\n      dup2\n        /* \"#utility.yul\":17529:17530   */\n      0x00\n        /* \"#utility.yul\":17525:17531   */\n      not\n        /* \"#utility.yul\":17521:17535   */\n      div\n        /* \"#utility.yul\":17518:17519   */\n      dup4\n        /* \"#utility.yul\":17515:17536   */\n      gt\n        /* \"#utility.yul\":17510:17511   */\n      dup3\n        /* \"#utility.yul\":17503:17512   */\n      iszero\n        /* \"#utility.yul\":17496:17513   */\n      iszero\n        /* \"#utility.yul\":17492:17537   */\n      and\n        /* \"#utility.yul\":17489:17560   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":17540:17558   */\n      tag_407\n      tag_286\n      jump\t// in\n    tag_407:\n      pop\n        /* \"#utility.yul\":17580:17589   */\n      mul\n      swap1\n        /* \"#utility.yul\":17427:17595   */\n      jump\t// out\n        /* \"#utility.yul\":17600:17720   */\n    tag_255:\n        /* \"#utility.yul\":17640:17641   */\n      0x00\n        /* \"#utility.yul\":17666:17667   */\n      dup3\n        /* \"#utility.yul\":17656:17691   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":17671:17689   */\n      tag_410\n      tag_287\n      jump\t// in\n    tag_410:\n      pop\n        /* \"#utility.yul\":17705:17714   */\n      div\n      swap1\n        /* \"#utility.yul\":17600:17720   */\n      jump\t// out\n    stop\n    data_65cfeff779fe42d2d5b4c2c078348cb18abbc731a2e3837262888dd9b50bb10e 000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88\n\n    auxdata: 0xa26469706673582212202dee28de39429147bf728d9a602b729ef6bed3ee577c384d28c530be69efc0e164736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 31,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x19F9 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7459AC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB44A2722 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xFF0388A0 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7459AC8 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xB17ACDCD EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x957C524F EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x5846CE4E EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8 PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x19A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD0818481D5B9A5D8CC81B999D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x390 DUP7 DUP6 PUSH2 0xD8A JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP4 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x3E6 DUP3 CALLER ADDRESS DUP13 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x3F2 DUP2 CALLER ADDRESS DUP12 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x40B DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x424 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D DUP13 DUP12 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45C DUP12 DUP12 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 MLOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x24 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP DUP10 DUP7 LT ISZERO PUSH2 0x54C JUMPI PUSH2 0x531 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53D DUP8 DUP13 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x54A DUP5 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST DUP9 DUP6 LT ISZERO PUSH2 0x589 JUMPI PUSH2 0x56E DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57A DUP7 DUP12 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x587 DUP4 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x5B7 SWAP1 CALLER SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FF PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x609 PUSH1 0x0 PUSH2 0x12EF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x62616C616E636520746F6F206C6F77 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD PUSH2 0x71A PUSH1 0x64 PUSH2 0x701 DUP11 PUSH1 0x2D PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP9 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72F PUSH1 0x64 PUSH2 0x701 DUP11 PUSH1 0x2D PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE DUP12 DUP3 MSTORE ADDRESS DUP3 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE DUP8 MLOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP6 DUP8 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x24 DUP7 ADD MSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x44 DUP6 ADD MSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x64 DUP5 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xC49CCBE SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP7 POP SWAP5 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x82F SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST POP POP PUSH2 0x87E DUP9 DUP7 DUP7 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x8AC SWAP1 CALLER SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0xA8D SWAP1 DUP8 SWAP1 DUP5 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x133F JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37D JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0x12EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB1C PUSH2 0x1295 JUMP JUMPDEST PUSH2 0xB28 DUP13 CALLER ADDRESS DUP12 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xB34 DUP12 CALLER ADDRESS DUP11 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xB4D DUP13 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH2 0x102F JUMP JUMPDEST PUSH2 0xB66 DUP12 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC7 DUP12 DUP11 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xC79 CALLER DUP7 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP9 DUP4 LT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCC2 DUP14 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP5 DUP12 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDB DUP15 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST DUP8 DUP3 LT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xCFF DUP13 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B DUP4 DUP11 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD18 DUP14 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0xD48 SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE00 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xFF5 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xFF5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x10F7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x10F7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x186A0 DUP3 GT ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6E6F7420696E2072616E6765 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH3 0x186A0 PUSH2 0x1181 DUP4 DUP3 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x118B SWAP1 DUP6 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x123A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1264 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1264 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 AND PUSH2 0x1375 DUP3 DUP5 DUP8 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP5 DUP7 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13B8 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13C8 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14A2 DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1195 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1520 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1530 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1540 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x1550 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x1575 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x15B6 DUP2 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15F5 JUMPI PUSH2 0x15F5 PUSH2 0x15CD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x15CD JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x1664 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x160 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1733 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x174A PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x175F PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1774 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x17BA DUP3 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x17F3 DUP2 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x187F PUSH1 0x20 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP11 POP PUSH2 0x188D PUSH1 0x40 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP10 POP PUSH2 0x189B PUSH1 0x60 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP9 POP PUSH2 0x18A9 PUSH1 0x80 DUP15 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP8 POP PUSH2 0x18B7 PUSH1 0xA0 DUP15 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP7 POP PUSH2 0x18C5 PUSH1 0xC0 DUP15 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP6 POP PUSH2 0x18D3 PUSH1 0xE0 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x18F2 PUSH2 0x140 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP PUSH2 0x1901 PUSH2 0x160 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1934 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x191A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x198A JUMPI PUSH2 0x198A PUSH2 0x15CD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x1664 JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xC3 PUSH5 0x42B4A4522E DUP8 SGT SWAP10 0xCD PUSH18 0x7ABDD847AB11FE88A2646970667358221220 0x2D 0xEE 0x28 0xDE CODECOPY TIMESTAMP SWAP2 SELFBALANCE 0xBF PUSH19 0x8D9A602B729EF6BED3EE577C384D28C530BE69 0xEF 0xC0 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "618:11866:6:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:3;936:18:0;:32::i;:::-;618:11866:6;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;618:11866:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LPs_991": {
									"entryPoint": null,
									"id": 991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4757,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_createDeposit_1056": {
									"entryPoint": 3466,
									"id": 1056,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_sendToOwner_1713": {
									"entryPoint": 4927,
									"id": 1713,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4847,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collectFees_1368": {
									"entryPoint": 2281,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@decreaseLiquidity_1475": {
									"entryPoint": 1547,
									"id": 1475,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@deposits_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseLiquidityCurrentRange_1665": {
									"entryPoint": 930,
									"id": 1665,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@mintNewPosition_1286": {
									"entryPoint": 2830,
									"id": 1286,
									"parameterSlots": 8,
									"returnSlots": 4
								},
								"@nonfungiblePositionManager_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_1026": {
									"entryPoint": 816,
									"id": 1026,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolFee_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1527,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_899": {
									"entryPoint": 4143,
									"id": 899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_807": {
									"entryPoint": 3877,
									"id": 807,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_853": {
									"entryPoint": 4508,
									"id": 853,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@slippagify_1086": {
									"entryPoint": 4399,
									"id": 1086,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2709,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_int24_fromMemory": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_int24t_int24t_uint256t_uint256t_uint256t_contract$_LPtoken_$952": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint128t_uint256": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 12
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint24_fromMemory": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_int24": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1976__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_LPtoken_$952__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_143f3887fae36363ca48587d77a844d82075e02d3e35ee51abe9ad2cb5c253d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_CollectParams_$1958_memory_ptr__to_t_struct$_CollectParams_$1958_memory_ptr__fromStack_reversed": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MintParams_$1886_memory_ptr__to_t_struct$_MintParams_$1886_memory_ptr__fromStack_reversed": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_uint24": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_div_t_uint128": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint128": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_int24": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint128": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18413:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "57:49:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "74:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "83:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "90:8:8",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "79:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "67:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "67:33:8"
														}
													]
												},
												"name": "abi_encode_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:8",
														"type": ""
													}
												],
												"src": "14:92:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:91:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "220:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "243:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "228:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "220:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "262:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "285:8:8",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "273:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "273:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "255:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "255:40:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "201:4:8",
														"type": ""
													}
												],
												"src": "111:190:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "424:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "427:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "417:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "374:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "385:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "400:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "405:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "396:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "396:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "409:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "392:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "392:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "381:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "381:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "371:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "371:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:50:8"
															},
															"nodeType": "YulIf",
															"src": "361:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "340:5:8",
														"type": ""
													}
												],
												"src": "306:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "582:796:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "629:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "641:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "631:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "631:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "631:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "603:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "612:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "599:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "595:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:33:8"
															},
															"nodeType": "YulIf",
															"src": "592:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "654:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "680:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "667:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "658:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "724:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "699:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "739:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "749:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "763:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "806:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "778:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "767:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "844:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "819:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "819:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "871:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "887:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "925:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "910:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "897:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "897:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "952:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "942:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "993:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1003:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "997:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1048:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1036:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1044:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:14:8"
															},
															"nodeType": "YulIf",
															"src": "1030:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1073:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1087:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1083:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1077:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1153:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1132:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1136:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1128:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1128:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1143:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:35:8"
															},
															"nodeType": "YulIf",
															"src": "1114:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1178:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1205:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1192:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1182:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1223:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1231:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:14:8"
															},
															"nodeType": "YulIf",
															"src": "1217:34:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1301:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1313:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1303:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1303:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1274:2:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1278:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1270:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1270:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1287:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1292:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:37:8"
															},
															"nodeType": "YulIf",
															"src": "1260:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1326:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1340:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:11:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1356:16:8",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1366:6:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1356:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "516:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "527:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "539:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "547:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "555:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "563:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "571:6:8",
														"type": ""
													}
												],
												"src": "442:936:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:103:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1492:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1504:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1492:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1549:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1561:3:8",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1566:10:8",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1557:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1557:20:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1545:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1545:33:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:52:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1462:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1473:4:8",
														"type": ""
													}
												],
												"src": "1383:202:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1711:264:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1758:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1770:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1760:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1760:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1760:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1732:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1724:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:33:8"
															},
															"nodeType": "YulIf",
															"src": "1721:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1783:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1793:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1825:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1863:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1835:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1876:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1903:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1899:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1886:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1927:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1954:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1965:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1950:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:32:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1653:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1664:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1676:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1684:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1692:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1700:6:8",
														"type": ""
													}
												],
												"src": "1590:385:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2137:203:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2147:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2159:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2147:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2204:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2212:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:47:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:66:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2268:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2279:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2264:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2264:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2284:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2257:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2311:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2322:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2327:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2300:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2090:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2101:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2109:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2117:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2128:4:8",
														"type": ""
													}
												],
												"src": "1980:360:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2406:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2415:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2430:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2435:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2426:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2426:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2439:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2422:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2422:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:31:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2399:44:8"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2380:3:8",
														"type": ""
													}
												],
												"src": "2345:104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2565:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2577:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2573:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2565:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2607:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2622:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2638:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2643:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2634:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2634:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2647:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2630:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2630:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2618:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2600:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2524:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2535:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2546:4:8",
														"type": ""
													}
												],
												"src": "2454:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:101:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2786:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2795:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2798:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2788:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2788:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2730:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2741:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2748:34:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:46:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2727:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:57:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:65:8"
															},
															"nodeType": "YulIf",
															"src": "2717:85:8"
														}
													]
												},
												"name": "validator_revert_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:8",
														"type": ""
													}
												],
												"src": "2662:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2917:279:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2938:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2947:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2959:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:32:8"
															},
															"nodeType": "YulIf",
															"src": "2927:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2988:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3011:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2998:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2988:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3030:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3060:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3071:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3043:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3034:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3109:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "3084:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3124:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3134:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3148:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2867:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2878:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2890:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2898:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2906:6:8",
														"type": ""
													}
												],
												"src": "2813:383:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3340:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3352:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3363:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3340:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3382:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3393:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3375:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3420:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3431:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3416:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3416:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3436:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3291:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3302:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3310:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3321:4:8",
														"type": ""
													}
												],
												"src": "3201:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3524:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3570:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3579:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3582:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3572:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3572:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3545:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3541:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3541:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:32:8"
															},
															"nodeType": "YulIf",
															"src": "3534:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3595:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3618:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3605:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3490:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3501:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3513:6:8",
														"type": ""
													}
												],
												"src": "3454:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3765:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3777:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3788:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3765:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3807:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3822:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3838:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3843:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3834:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3834:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3847:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3830:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3830:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3818:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3818:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_LPtoken_$952__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3724:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3735:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3746:4:8",
														"type": ""
													}
												],
												"src": "3639:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4047:312:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4057:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4069:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4080:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4065:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4057:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4093:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4111:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4116:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4120:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4103:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4097:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4138:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4153:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4161:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4131:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4185:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4196:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4181:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4181:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4213:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4201:47:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4174:75:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4289:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4297:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4285:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4258:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4258:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4321:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4332:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4317:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4317:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "4341:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4349:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3992:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4003:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4011:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4019:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4027:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4038:4:8",
														"type": ""
													}
												],
												"src": "3862:497:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4501:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4511:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4523:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4534:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4519:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4511:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4568:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4584:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4589:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4580:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4580:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4593:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4576:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4576:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4564:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4546:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4546:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1976__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4481:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4492:4:8",
														"type": ""
													}
												],
												"src": "4364:239:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4678:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4724:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4733:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4736:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4726:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4726:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4726:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4699:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4708:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4695:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4720:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4691:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:32:8"
															},
															"nodeType": "YulIf",
															"src": "4688:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4749:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4762:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4753:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4819:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4794:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4834:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4844:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4644:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4655:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4667:6:8",
														"type": ""
													}
												],
												"src": "4608:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4903:75:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4956:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4965:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4958:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4958:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4958:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4926:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4944:1:8",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4947:5:8"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "4933:10:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4933:20:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4923:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:31:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:39:8"
															},
															"nodeType": "YulIf",
															"src": "4913:59:8"
														}
													]
												},
												"name": "validator_revert_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4892:5:8",
														"type": ""
													}
												],
												"src": "4860:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5183:827:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5230:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5239:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5242:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5232:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5232:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5232:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5204:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5200:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:3:8",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5196:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:33:8"
															},
															"nodeType": "YulIf",
															"src": "5193:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5255:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5268:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5259:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5325:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5300:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5300:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5350:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5364:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5396:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5407:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5392:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5392:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5379:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5368:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5445:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5420:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5420:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5462:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5472:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5488:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5520:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5531:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5516:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5503:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:32:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "5492:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "5567:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_int24",
																	"nodeType": "YulIdentifier",
																	"src": "5544:22:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5544:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5584:17:8",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "5594:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5584:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5610:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5653:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5638:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5625:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:32:8"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "5614:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_int24",
																	"nodeType": "YulIdentifier",
																	"src": "5666:22:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5666:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5706:17:8",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "5716:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5732:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5759:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5770:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5755:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5755:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5742:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:33:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5732:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5784:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5811:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5822:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5807:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5807:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5794:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:33:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5836:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5863:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5874:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5859:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5846:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5846:33:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5888:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5931:3:8",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:33:8"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "5892:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "5970:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5945:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5945:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5987:17:8",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "5997:7:8"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "5987:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_int24t_int24t_uint256t_uint256t_uint256t_contract$_LPtoken_$952",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5093:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5104:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5116:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5124:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5132:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5148:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5156:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "5164:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "5172:6:8",
														"type": ""
													}
												],
												"src": "4983:1027:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6200:247:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6210:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6222:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6210:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6253:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6264:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6291:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6302:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6287:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6287:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6311:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6319:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:47:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6280:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6280:75:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6391:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6418:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6429:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6414:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6434:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6407:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6145:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6156:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6164:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6172:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6180:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6191:4:8",
														"type": ""
													}
												],
												"src": "6015:432:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6643:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6636:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6636:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6693:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6716:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6727:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:18:8"
																	},
																	{
																		"hexValue": "6e6f74206120756e697633206e6674",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6732:17:8",
																		"type": "",
																		"value": "not a univ3 nft"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6705:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6759:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6771:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6782:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6759:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6603:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6617:4:8",
														"type": ""
													}
												],
												"src": "6452:339:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:399:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7001:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7012:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6989:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7032:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7049:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7043:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7043:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7025:32:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7077:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7088:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7073:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7073:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7105:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7113:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7101:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7101:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7095:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7066:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7066:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7140:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7151:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7136:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7136:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7168:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7176:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7164:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7164:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7158:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7129:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7129:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7203:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7214:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7199:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7199:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7231:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7239:4:8",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7227:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7227:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7221:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7221:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7192:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7266:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7277:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7262:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7262:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7294:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7302:4:8",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7290:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7290:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7284:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7255:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7255:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7329:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7340:4:8",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7357:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7365:4:8",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7353:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7353:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7347:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7347:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:54:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6948:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6959:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6970:4:8",
														"type": ""
													}
												],
												"src": "6796:582:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7443:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7453:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7462:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7453:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7509:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "7484:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7484:31:8"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7422:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7433:5:8",
														"type": ""
													}
												],
												"src": "7383:138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7641:258:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7687:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7696:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7699:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7689:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7689:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7689:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7662:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7658:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:32:8"
															},
															"nodeType": "YulIf",
															"src": "7651:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7712:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7731:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7725:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7716:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7775:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "7750:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7750:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7790:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7800:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7790:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7814:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7834:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7845:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7830:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7824:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7858:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7889:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7874:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:25:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7858:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7591:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7602:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7614:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7622:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7630:6:8",
														"type": ""
													}
												],
												"src": "7526:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7936:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7953:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7960:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7965:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7956:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7986:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7986:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8017:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8020:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8010:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8010:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7904:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8107:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8109:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8109:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8109:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8101:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8104:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8098:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:8:8"
															},
															"nodeType": "YulIf",
															"src": "8095:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8138:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8150:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8153:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8138:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8067:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8070:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8076:4:8",
														"type": ""
													}
												],
												"src": "8036:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8295:186:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8305:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8317:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8313:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8305:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8347:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8362:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8378:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8383:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8374:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8374:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8387:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8370:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8370:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8358:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8340:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8340:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8411:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8422:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8407:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8407:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8431:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8439:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:47:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8400:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:75:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8400:75:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8256:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8267:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8275:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8286:4:8",
														"type": ""
													}
												],
												"src": "8166:315:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8567:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8613:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8622:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8625:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8615:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8615:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8615:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8588:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8597:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8584:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8609:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8580:32:8"
															},
															"nodeType": "YulIf",
															"src": "8577:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8638:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8654:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8648:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8648:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8638:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8533:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8544:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8556:6:8",
														"type": ""
													}
												],
												"src": "8486:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8849:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8866:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8859:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8900:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8911:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8896:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8896:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8889:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8889:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8889:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8939:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8950:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8935:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8935:18:8"
																	},
																	{
																		"hexValue": "62616c616e636520746f6f206c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8955:17:8",
																		"type": "",
																		"value": "balance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8928:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8928:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8928:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8982:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8994:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9005:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8990:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8990:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8982:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8826:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8840:4:8",
														"type": ""
													}
												],
												"src": "8675:339:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9071:235:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9081:44:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9091:34:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9085:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9134:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9149:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9152:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9145:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:10:8"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "9138:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9164:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9179:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9182:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9175:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:10:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "9168:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9245:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9247:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "9215:3:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9208:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9208:11:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9201:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9201:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "9225:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "9234:2:8"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "9238:3:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9230:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9230:12:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9222:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9222:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9197:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9197:47:8"
															},
															"nodeType": "YulIf",
															"src": "9194:73:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9276:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "9291:3:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9287:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9287:13:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9276:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9050:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9053:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9059:7:8",
														"type": ""
													}
												],
												"src": "9019:287:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9343:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9360:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9367:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9372:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9363:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9363:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9353:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9400:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9403:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9393:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9393:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9393:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9424:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9427:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9311:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9489:170:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9499:44:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9509:34:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9503:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9552:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9567:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9570:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9563:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9563:10:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "9556:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9597:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9599:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9599:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9599:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "9592:3:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9585:11:8"
															},
															"nodeType": "YulIf",
															"src": "9582:37:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9628:25:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9641:1:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9644:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9637:10:8"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "9649:3:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9633:20:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9628:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9474:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9477:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9483:1:8",
														"type": ""
													}
												],
												"src": "9443:216:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9847:377:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9857:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9869:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9880:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9865:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9865:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9857:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9900:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9917:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9911:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9911:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9893:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9893:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9893:32:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9945:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9956:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9941:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9941:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "9977:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9985:4:8",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9973:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9973:17:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9967:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9967:24:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9993:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9963:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:65:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9934:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:95:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9934:95:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10049:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10060:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10045:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10077:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10085:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10073:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10073:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10067:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10067:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10038:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10038:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10112:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10123:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10108:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10108:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10140:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10148:4:8",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10136:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10136:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10130:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10130:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10101:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10101:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10186:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10171:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10203:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10211:4:8",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10199:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10199:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10193:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10193:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10164:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10164:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10164:54:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9816:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9827:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9838:4:8",
														"type": ""
													}
												],
												"src": "9664:560:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10327:147:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10373:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10382:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10385:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10375:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10375:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10375:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10348:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10357:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10344:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10344:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10340:32:8"
															},
															"nodeType": "YulIf",
															"src": "10337:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10398:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10414:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10408:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10433:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10453:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10464:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10449:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10449:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10443:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10433:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10285:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10296:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10308:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10316:6:8",
														"type": ""
													}
												],
												"src": "10229:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:411:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10652:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10664:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10675:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10660:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10652:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10712:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10706:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10706:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10688:32:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10740:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10751:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10736:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "10772:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10780:4:8",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10768:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10768:17:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10762:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10762:24:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10796:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10801:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10792:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10792:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10805:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10788:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10788:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:50:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10729:80:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10729:80:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10818:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10848:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10856:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10844:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10844:17:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10838:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10838:24:8"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "10822:12:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10871:44:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10881:34:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10875:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10935:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10946:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10931:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10931:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10957:12:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10971:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10953:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10953:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10924:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10995:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11006:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10991:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10991:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "11027:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11035:4:8",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11023:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11023:17:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "11017:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11017:24:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11043:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11013:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11013:33:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10984:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10984:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10984:63:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_CollectParams_$1958_memory_ptr__to_t_struct$_CollectParams_$1958_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10611:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10633:4:8",
														"type": ""
													}
												],
												"src": "10479:574:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11232:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11249:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11260:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11242:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11283:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11294:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11299:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11272:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11272:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11322:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11333:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11318:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11318:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11338:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11311:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11311:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11311:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11393:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11404:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11389:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11389:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11409:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11382:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11382:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11382:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11427:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11439:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11450:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11435:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11427:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11209:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11223:4:8",
														"type": ""
													}
												],
												"src": "11058:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11507:49:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11524:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11540:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11543:5:8"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "11529:10:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11529:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11517:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11517:33:8"
														}
													]
												},
												"name": "abi_encode_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11491:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11498:3:8",
														"type": ""
													}
												],
												"src": "11465:91:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11718:1065:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11740:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11751:3:8",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11736:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11728:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11789:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11783:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:13:8"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11798:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11764:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11764:44:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11817:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11847:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11855:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11843:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11843:17:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11837:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11837:24:8"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "11821:12:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "11889:12:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11907:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11918:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11903:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11903:20:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11870:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11870:54:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11933:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11965:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11973:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11961:17:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11955:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:24:8"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "11937:14:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "12006:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12026:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12037:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12022:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12022:20:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "11988:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11988:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12052:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12084:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12092:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12080:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12080:17:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12074:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:24:8"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "12056:14:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "12124:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12144:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12155:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12140:20:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_int24",
																	"nodeType": "YulIdentifier",
																	"src": "12107:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:54:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12170:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:17:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12192:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:24:8"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "12174:14:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "12242:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12262:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12273:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12258:20:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_int24",
																	"nodeType": "YulIdentifier",
																	"src": "12225:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12225:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12299:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12310:4:8",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12295:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12295:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12327:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12335:4:8",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12323:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12323:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12317:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12317:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12288:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12362:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12373:4:8",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12390:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12398:4:8",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12386:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12386:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12380:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12380:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12351:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12425:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12436:4:8",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12421:20:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12453:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12461:4:8",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12449:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12449:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12443:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12443:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12414:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12414:54:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12477:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12487:6:8",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12481:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12513:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12524:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12509:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12539:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "12547:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12535:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12535:15:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12529:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12529:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12502:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12502:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12561:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12571:6:8",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "12565:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12586:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12618:6:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "12626:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12614:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12614:15:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12608:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:22:8"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "12590:14:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "12658:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12678:9:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "12689:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12674:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12674:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "12639:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12639:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12639:54:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12702:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12712:6:8",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "12706:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12738:9:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "12749:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12734:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12734:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12764:6:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "12772:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12760:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12760:15:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12754:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12754:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12727:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12727:50:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1886_memory_ptr__to_t_struct$_MintParams_$1886_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11687:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11698:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11709:4:8",
														"type": ""
													}
												],
												"src": "11561:1222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12920:303:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12967:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12976:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12979:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12969:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12969:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12969:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12941:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12950:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12937:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12962:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12933:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:33:8"
															},
															"nodeType": "YulIf",
															"src": "12930:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12992:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13008:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13002:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13002:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12992:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13027:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13050:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13061:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13046:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13046:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13040:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:25:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13031:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13099:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "13074:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13074:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13074:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13114:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13124:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "13114:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13138:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13158:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13169:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13154:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13154:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13148:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13148:25:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "13138:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13182:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13198:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13192:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:25:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12862:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12873:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12885:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12893:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12901:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12909:6:8",
														"type": ""
													}
												],
												"src": "12788:435:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13329:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13339:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13351:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13362:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13339:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13381:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13392:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13374:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13374:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13298:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13309:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13320:4:8",
														"type": ""
													}
												],
												"src": "13228:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13470:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13480:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13495:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13489:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13489:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13480:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13536:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "13511:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13511:31:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13449:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13460:5:8",
														"type": ""
													}
												],
												"src": "13410:138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13612:106:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13622:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13637:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13631:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13631:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13622:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13696:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13705:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13708:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13698:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13698:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13698:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13666:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13677:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13684:8:8",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "13673:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13673:20:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13663:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:31:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:39:8"
															},
															"nodeType": "YulIf",
															"src": "13653:59:8"
														}
													]
												},
												"name": "abi_decode_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13591:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13602:5:8",
														"type": ""
													}
												],
												"src": "13553:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13781:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13791:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13800:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13791:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13845:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_int24",
																	"nodeType": "YulIdentifier",
																	"src": "13822:22:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:29:8"
														}
													]
												},
												"name": "abi_decode_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13760:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13771:5:8",
														"type": ""
													}
												],
												"src": "13723:134:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14126:922:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14173:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14182:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14185:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14175:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14175:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14175:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14143:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14168:3:8",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14139:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:33:8"
															},
															"nodeType": "YulIf",
															"src": "14136:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14198:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14217:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14211:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14211:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14202:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14297:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14306:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14309:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14299:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14299:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14299:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14249:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14260:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14267:26:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14256:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14256:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14246:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14246:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:57:8"
															},
															"nodeType": "YulIf",
															"src": "14236:77:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14322:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14332:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14322:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14390:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14401:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14386:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14386:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14356:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14356:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14414:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14458:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14469:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14454:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14454:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14424:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14424:49:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "14414:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14482:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14526:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14537:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14522:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14522:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14492:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14492:49:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "14482:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14550:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14593:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14604:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14560:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14560:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "14550:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14618:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14660:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14671:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14656:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14628:27:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14628:48:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "14618:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14685:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14727:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14738:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14723:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14723:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14695:27:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:48:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "14685:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14752:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14796:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14807:3:8",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14792:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14792:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14762:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14762:50:8"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "14752:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14821:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14841:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14852:3:8",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14837:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14837:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14831:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14831:26:8"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "14821:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14866:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14886:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14897:3:8",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14882:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14876:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:26:8"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "14866:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14911:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14956:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14967:3:8",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14952:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14952:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14922:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14922:50:8"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "14911:7:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14981:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15026:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15037:3:8",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15022:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15022:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14992:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:50:8"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nodeType": "YulIdentifier",
																	"src": "14981:7:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14002:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14013:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14025:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14033:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14041:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14049:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14057:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "14065:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "14073:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "14081:6:8",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "14089:6:8",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "14097:6:8",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "14105:7:8",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "14114:7:8",
														"type": ""
													}
												],
												"src": "13862:1186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15210:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15220:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15232:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15243:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15228:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15228:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15220:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15255:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15278:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15269:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15282:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15265:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15265:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15259:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15300:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15315:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15323:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15311:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15311:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15293:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15293:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15293:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15347:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15358:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15343:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15343:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15367:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15375:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15363:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15363:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15336:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15336:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15336:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15399:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15410:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15395:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15415:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15388:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15388:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15163:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15174:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15182:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15190:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15201:4:8",
														"type": ""
													}
												],
												"src": "15053:375:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15570:289:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15580:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15600:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15594:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15594:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15584:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15616:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15625:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15620:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15687:77:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "15712:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15717:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15708:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15708:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "15735:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "15743:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "15731:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15731:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15747:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15727:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15727:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15721:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15721:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15701:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15701:53:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15701:53:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15646:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15649:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15643:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15643:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15657:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15659:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15668:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15671:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15664:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15664:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15659:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15639:3:8",
																"statements": []
															},
															"src": "15635:129:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15790:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "15803:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15808:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15799:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15799:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15817:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15792:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15792:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15792:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15779:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15782:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15776:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15776:13:8"
															},
															"nodeType": "YulIf",
															"src": "15773:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15830:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15841:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15846:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15837:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15837:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15830:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15546:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15551:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15562:3:8",
														"type": ""
													}
												],
												"src": "15433:426:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15942:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15988:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15997:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16000:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15990:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15990:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15990:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15963:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15972:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15959:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15959:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15984:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15955:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15955:32:8"
															},
															"nodeType": "YulIf",
															"src": "15952:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16013:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16032:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16026:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16026:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "16017:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16095:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16104:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16107:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16097:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16097:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16097:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16064:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "16085:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "16078:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16078:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16071:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16071:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16061:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16054:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16054:40:8"
															},
															"nodeType": "YulIf",
															"src": "16051:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16120:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16130:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16120:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15908:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15919:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15931:6:8",
														"type": ""
													}
												],
												"src": "15864:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16320:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16337:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16348:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16330:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16330:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16330:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16371:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16382:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16367:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16387:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16360:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16360:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16360:29:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16409:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16420:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16405:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16405:18:8"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16425:5:8",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16398:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16398:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16398:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16440:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16452:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16463:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16448:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16448:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16440:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16297:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16311:4:8",
														"type": ""
													}
												],
												"src": "16146:326:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16606:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16616:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16628:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16639:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16624:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16624:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16616:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16658:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16673:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16689:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16694:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16685:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16685:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16698:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "16681:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16681:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16669:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16669:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16651:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16651:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16651:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16722:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16733:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16718:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16718:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16738:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16711:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16711:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16711:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16567:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16578:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16586:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16597:4:8",
														"type": ""
													}
												],
												"src": "16477:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16930:151:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16947:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16958:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16940:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16940:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16940:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16981:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16992:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16997:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:29:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17019:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17030:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17015:18:8"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17035:4:8",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17008:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17008:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17008:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17049:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17061:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17072:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17057:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17057:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17049:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16907:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16921:4:8",
														"type": ""
													}
												],
												"src": "16756:325:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17260:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17277:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17270:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17270:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17311:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17322:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17307:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17327:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17300:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17300:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17350:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17361:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17346:18:8"
																	},
																	{
																		"hexValue": "6e6f7420696e2072616e6765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17366:14:8",
																		"type": "",
																		"value": "not in range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17339:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17339:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17390:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17402:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17413:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17398:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17398:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17390:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_143f3887fae36363ca48587d77a844d82075e02d3e35ee51abe9ad2cb5c253d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17237:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17251:4:8",
														"type": ""
													}
												],
												"src": "17086:336:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17479:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17538:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17540:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17540:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17540:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17510:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17503:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17503:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17496:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17496:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17518:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17529:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "17525:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17525:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17533:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17521:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17521:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17515:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17515:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17492:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17492:45:8"
															},
															"nodeType": "YulIf",
															"src": "17489:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17569:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17584:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17587:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17580:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17569:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17458:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17461:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17467:7:8",
														"type": ""
													}
												],
												"src": "17427:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17646:74:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17669:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17671:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17671:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17671:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17666:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17659:9:8"
															},
															"nodeType": "YulIf",
															"src": "17656:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17700:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17709:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17712:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17705:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17705:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17700:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17631:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17634:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17640:1:8",
														"type": ""
													}
												],
												"src": "17600:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17899:151:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17916:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17927:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17909:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17909:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17909:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17950:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17961:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17946:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17946:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17966:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17939:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17939:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17939:29:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17988:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17999:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17984:18:8"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18004:4:8",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18018:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18030:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18041:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18026:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18026:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18018:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17876:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17890:4:8",
														"type": ""
													}
												],
												"src": "17725:325:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18229:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18246:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18257:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18239:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18239:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18280:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18291:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18276:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18276:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18269:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18269:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18269:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18319:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18330:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18315:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18315:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18335:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18308:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18308:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18308:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18379:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18391:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18402:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18387:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18387:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18379:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18206:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18220:4:8",
														"type": ""
													}
												],
												"src": "18055:356:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint128_t_uint256_t_uint256__to_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_uint128(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_uint128(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_LPtoken_$952__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1976__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function validator_revert_int24(value)\n    {\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_int24t_int24t_uint256t_uint256t_uint256t_contract$_LPtoken_$952(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_int24(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_int24(value_3)\n        value3 := value_3\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        let value_4 := calldataload(add(headStart, 224))\n        validator_revert_address(value_4)\n        value7 := value_4\n    }\n    function abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"not a univ3 nft\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_uint128(value)\n    }\n    function abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint128(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"balance too low\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint128(x, y) -> product\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_CollectParams_$1958_memory_ptr__to_t_struct$_CollectParams_$1958_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_int24(value, pos)\n    {\n        mstore(pos, signextend(2, value))\n    }\n    function abi_encode_tuple_t_struct$_MintParams_$1886_memory_ptr__to_t_struct$_MintParams_$1886_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 352)\n        abi_encode_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_uint24(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_int24(memberValue0_2, add(headStart, 0x60))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_int24(memberValue0_3, add(headStart, 0x80))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_address(memberValue0_4, add(headStart, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_uint128(value)\n        value1 := value\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_int24(value)\n    }\n    function abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_uint128_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := mload(add(headStart, 288))\n        value10 := abi_decode_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"STF\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"SA\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_143f3887fae36363ca48587d77a844d82075e02d3e35ee51abe9ad2cb5c253d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"not in range\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"ST\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a7459ac81161008c578063b44a272211610066578063b44a2722146102b2578063e0bab4c4146102c7578063f2fde38b146102e2578063ff0388a0146102f557600080fd5b8063a7459ac8146101eb578063b02c43d014610214578063b17acdcd1461029f57600080fd5b8063715018a6116100c8578063715018a61461017557806389a302711461017f5780638da5cb5b146101b2578063957c524f146101c357600080fd5b8063089fe6aa146100ef578063150b7a02146101115780635846ce4e1461013d575b600080fd5b6100f86101f481565b60405162ffffff90911681526020015b60405180910390f35b61012461011f366004611395565b610330565b6040516001600160e01b03199091168152602001610108565b61015061014b366004611434565b6103a2565b604080516001600160801b039094168452602084019290925290820152606001610108565b61017d6105f7565b005b61019a733db4b7da67dd5af61cb9b3c70501b1bdb24b2c2281565b6040516001600160a01b039091168152602001610108565b6000546001600160a01b031661019a565b6101d66101d136600461147b565b61060b565b60408051928352602083019190915201610108565b61019a6101f93660046114b3565b6002602052600090815260409020546001600160a01b031681565b6102636102223660046114b3565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b03938416936001600160801b03909216928216911684565b604080516001600160a01b0395861681526001600160801b03909416602085015291841691830191909152919091166060820152608001610108565b6101d66102ad3660046114b3565b6108e9565b61019a6000805160206119a483398151915281565b61019a73da10009cbd5d07dd0cecc66161fc93d7c9000da181565b61017d6102f03660046114cc565b610a95565b6103086103033660046114f8565b610b0e565b604080519485526001600160801b039093166020850152918301526060820152608001610108565b6000336000805160206119a4833981519152146103865760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd0818481d5b9a5d8cc81b999d608a1b60448201526064015b60405180910390fd5b6103908685610d8a565b50630a85bd0160e11b95945050505050565b6000848152600260208181526040808420546001909252832091820154600390920154839283926001600160a01b039081169291811691166103e68233308c610f25565b6103f28133308b610f25565b61040b826000805160206119a48339815191528b61102f565b610424816000805160206119a48339815191528a61102f565b60006040518060c001604052808c81526020018b81526020018a815260200161044d8c8b61112f565b815260200161045c8b8b61112f565b8152426020918201526040805163219f5d1760e01b8152835160048201529183015160248301528201516044820152606082015160648201526080820151608482015260a082015160a48201529091506000805160206119a48339815191529063219f5d179060c4016060604051808303816000875af11580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190611596565b919850965094508986101561054c57610531836000805160206119a4833981519152600061102f565b600061053d878c6115e3565b905061054a84338361119c565b505b888510156105895761056e826000805160206119a4833981519152600061102f565b600061057a868b6115e3565b905061058783338361119c565b505b6040516340c10f1960e01b81526001600160a01b038516906340c10f19906105b79033908b906004016115fa565b600060405180830381600087803b1580156105d157600080fd5b505af11580156105e5573d6000803e3d6000fd5b50505050505050509450945094915050565b6105ff611295565b61060960006112ef565b565b6000838152600260205260408082205490516370a0823160e01b815233600482015282916001600160a01b0316906001600160801b0386169082906370a0823190602401602060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061161c565b10156106d05760405162461bcd60e51b815260206004820152600f60248201526e62616c616e636520746f6f206c6f7760881b604482015260640161037d565b6040805160a0810182528781526001600160801b0387166020820152600091810161071a60646107018a602d611635565b61070b919061167a565b6001600160801b03168861112f565b815260200161072f60646107018a602d611635565b81524260209182015260408051608080820183528b825230828501526001600160801b0382840181905260608084018290528451630624e65f60e11b8152875160048201529587015190911660248601529285015160448501529184015160648401529083015160848301529192506000805160206119a483398151915290630c49ccbe9060a40160408051808303816000875af11580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f991906116a0565b60405163fc6f786560e01b815291965094506000805160206119a48339815191529063fc6f78659061082f9084906004016116c4565b60408051808303816000875af115801561084d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087191906116a0565b505061087e88868661133f565b604051632770a7eb60e21b81526001600160a01b03841690639dc29fac906108ac9033908b906004016115fa565b600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b50505050505050935093915050565b6000806108f4611295565b604080516080810182528481523060208201526001600160801b038183018190526060820152905163fc6f786560e01b81526000805160206119a48339815191529063fc6f78659061094a9084906004016116c4565b60408051808303816000875af1158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906116a0565b60008681526001602052604090819020600281015460039091015491516370a0823160e01b81523060048201529396509194506001600160a01b0391821692911690610a8d90879084906370a0823190602401602060405180830381865afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a20919061161c565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a88919061161c565b61133f565b505050915091565b610a9d611295565b6001600160a01b038116610b025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037d565b610b0b816112ef565b50565b600080600080610b1c611295565b610b288c33308b610f25565b610b348b33308a610f25565b610b4d8c6000805160206119a48339815191528a61102f565b610b668b6000805160206119a48339815191528961102f565b60006040518061016001604052808e6001600160a01b031681526020018d6001600160a01b031681526020016101f462ffffff1681526020018c60020b81526020018b60020b81526020018a8152602001898152602001610bc78b8a61112f565b815260200160008152602001306001600160a01b031681526020014281525090506000805160206119a48339815191526001600160a01b03166388316456826040518263ffffffff1660e01b8152600401610c229190611707565b6080604051808303816000875af1158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6591906117cb565b92975090955093509150610c793386610d8a565b600085815260026020526040902080546001600160a01b0319166001600160a01b03881617905588831015610cdd57610cc28d6000805160206119a4833981519152600061102f565b6000610cce848b6115e3565b9050610cdb8e338361119c565b505b87821015610d1a57610cff8c6000805160206119a4833981519152600061102f565b6000610d0b838a6115e3565b9050610d188d338361119c565b505b6040516340c10f1960e01b81526001600160a01b038716906340c10f1990610d4890339088906004016115fa565b600060405180830381600087803b158015610d6257600080fd5b505af1158015610d76573d6000803e3d6000fd5b505050505098509850985098945050505050565b60405163133f757160e31b815260048101829052600090819081906000805160206119a4833981519152906399fbab889060240161018060405180830381865afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190611832565b5050505097505050509450945050506040518060800160405280866001600160a01b03168152602001826001600160801b03168152602001846001600160a01b03168152602001836001600160a01b03168152506001600086815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610f899190611913565b6000604051808303816000865af19150503d8060008114610fc6576040519150601f19603f3d011682016040523d82523d6000602084013e610fcb565b606091505b5091509150818015610ff5575080511580610ff5575080806020019051810190610ff5919061194e565b6110275760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161037d565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161108b9190611913565b6000604051808303816000865af19150503d80600081146110c8576040519150601f19603f3d011682016040523d82523d6000602084013e6110cd565b606091505b50915091508180156110f75750805115806110f75750808060200190518101906110f7919061194e565b6111285760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161037d565b5050505050565b6000620186a08211156111735760405162461bcd60e51b815260206004820152600c60248201526b6e6f7420696e2072616e676560a01b604482015260640161037d565b620186a061118183826115e3565b61118b9085611970565b611195919061198f565b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916111f89190611913565b6000604051808303816000865af19150503d8060008114611235576040519150601f19603f3d011682016040523d82523d6000602084013e61123a565b606091505b5091509150818015611264575080511580611264575080806020019051810190611264919061194e565b6111285760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161037d565b6000546001600160a01b031633146106095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000838152600160205260409020805460028201546003909201546001600160a01b03918216928216911661137582848761119c565b61102781848661119c565b6001600160a01b0381168114610b0b57600080fd5b6000806000806000608086880312156113ad57600080fd5b85356113b881611380565b945060208601356113c881611380565b935060408601359250606086013567ffffffffffffffff808211156113ec57600080fd5b818801915088601f83011261140057600080fd5b81358181111561140f57600080fd5b89602082850101111561142157600080fd5b9699959850939650602001949392505050565b6000806000806080858703121561144a57600080fd5b5050823594602084013594506040840135936060013592509050565b6001600160801b0381168114610b0b57600080fd5b60008060006060848603121561149057600080fd5b8335925060208401356114a281611466565b929592945050506040919091013590565b6000602082840312156114c557600080fd5b5035919050565b6000602082840312156114de57600080fd5b813561119581611380565b8060020b8114610b0b57600080fd5b600080600080600080600080610100898b03121561151557600080fd5b883561152081611380565b9750602089013561153081611380565b96506040890135611540816114e9565b95506060890135611550816114e9565b94506080890135935060a0890135925060c0890135915060e089013561157581611380565b809150509295985092959890939650565b805161159181611466565b919050565b6000806000606084860312156115ab57600080fd5b83516115b681611466565b602085015160409095015190969495509392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115f5576115f56115cd565b500390565b6001600160a01b039290921682526001600160801b0316602082015260400190565b60006020828403121561162e57600080fd5b5051919050565b60006001600160801b038083168185168183048111821515161561165b5761165b6115cd565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b038084168061169457611694611664565b92169190910492915050565b600080604083850312156116b357600080fd5b505080516020909101519092909150565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b81516001600160a01b031681526101608101602083015161173360208401826001600160a01b03169052565b50604083015161174a604084018262ffffff169052565b50606083015161175f606084018260020b9052565b506080830151611774608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516117ba828501826001600160a01b03169052565b505061014092830151919092015290565b600080600080608085870312156117e157600080fd5b8451935060208501516117f381611466565b6040860151606090960151949790965092505050565b805161159181611380565b805162ffffff8116811461159157600080fd5b8051611591816114e9565b6000806000806000806000806000806000806101808d8f03121561185557600080fd5b8c516bffffffffffffffffffffffff8116811461187157600080fd5b9b5061187f60208e01611809565b9a5061188d60408e01611809565b995061189b60608e01611809565b98506118a960808e01611814565b97506118b760a08e01611827565b96506118c560c08e01611827565b95506118d360e08e01611586565b94506101008d015193506101208d015192506118f26101408e01611586565b91506119016101608e01611586565b90509295989b509295989b509295989b565b6000825160005b81811015611934576020818601810151858301520161191a565b81811115611943576000828501525b509190910192915050565b60006020828403121561196057600080fd5b8151801515811461119557600080fd5b600081600019048311821515161561198a5761198a6115cd565b500290565b60008261199e5761199e611664565b50049056fe000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88a26469706673582212202dee28de39429147bf728d9a602b729ef6bed3ee577c384d28c530be69efc0e164736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7459AC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB44A2722 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xFF0388A0 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7459AC8 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xB17ACDCD EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x957C524F EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x5846CE4E EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8 PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH20 0x3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x19A PUSH20 0xDA10009CBD5D07DD0CECC66161FC93D7C9000DA1 DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD0818481D5B9A5D8CC81B999D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x390 DUP7 DUP6 PUSH2 0xD8A JUMP JUMPDEST POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP4 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x3E6 DUP3 CALLER ADDRESS DUP13 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x3F2 DUP2 CALLER ADDRESS DUP12 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x40B DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x424 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D DUP13 DUP12 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45C DUP12 DUP12 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x219F5D17 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 MLOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x24 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x219F5D17 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP DUP10 DUP7 LT ISZERO PUSH2 0x54C JUMPI PUSH2 0x531 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53D DUP8 DUP13 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x54A DUP5 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST DUP9 DUP6 LT ISZERO PUSH2 0x589 JUMPI PUSH2 0x56E DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57A DUP7 DUP12 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x587 DUP4 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x5B7 SWAP1 CALLER SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FF PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x609 PUSH1 0x0 PUSH2 0x12EF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x62616C616E636520746F6F206C6F77 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD PUSH2 0x71A PUSH1 0x64 PUSH2 0x701 DUP11 PUSH1 0x2D PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP9 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72F PUSH1 0x64 PUSH2 0x701 DUP11 PUSH1 0x2D PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP4 MSTORE DUP12 DUP3 MSTORE ADDRESS DUP3 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE DUP8 MLOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP6 DUP8 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x24 DUP7 ADD MSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x44 DUP6 ADD MSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x64 DUP5 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xC49CCBE SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP7 POP SWAP5 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x82F SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST POP POP PUSH2 0x87E DUP9 DUP7 DUP7 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x8AC SWAP1 CALLER SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0xFC6F7865 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0xA8D SWAP1 DUP8 SWAP1 DUP5 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x133F JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37D JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0x12EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB1C PUSH2 0x1295 JUMP JUMPDEST PUSH2 0xB28 DUP13 CALLER ADDRESS DUP12 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xB34 DUP12 CALLER ADDRESS DUP11 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0xB4D DUP13 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH2 0x102F JUMP JUMPDEST PUSH2 0xB66 DUP12 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC7 DUP12 DUP11 PUSH2 0x112F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xC79 CALLER DUP7 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP9 DUP4 LT ISZERO PUSH2 0xCDD JUMPI PUSH2 0xCC2 DUP14 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP5 DUP12 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDB DUP15 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST DUP8 DUP3 LT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xCFF DUP13 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B DUP4 DUP11 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD18 DUP14 CALLER DUP4 PUSH2 0x119C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0xD48 SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE00 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xFF5 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xFF5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x10F7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x10F7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x186A0 DUP3 GT ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6E6F7420696E2072616E6765 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH3 0x186A0 PUSH2 0x1181 DUP4 DUP3 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x118B SWAP1 DUP6 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x198F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x123A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1264 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1264 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 AND PUSH2 0x1375 DUP3 DUP5 DUP8 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP5 DUP7 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13B8 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13C8 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14A2 DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1195 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1520 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x1530 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1540 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x1550 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x1575 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x15B6 DUP2 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15F5 JUMPI PUSH2 0x15F5 PUSH2 0x15CD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x15CD JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x1664 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x160 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1733 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x174A PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x175F PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1774 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x17BA DUP3 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x17F3 DUP2 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1591 DUP2 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x187F PUSH1 0x20 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP11 POP PUSH2 0x188D PUSH1 0x40 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP10 POP PUSH2 0x189B PUSH1 0x60 DUP15 ADD PUSH2 0x1809 JUMP JUMPDEST SWAP9 POP PUSH2 0x18A9 PUSH1 0x80 DUP15 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP8 POP PUSH2 0x18B7 PUSH1 0xA0 DUP15 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP7 POP PUSH2 0x18C5 PUSH1 0xC0 DUP15 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP6 POP PUSH2 0x18D3 PUSH1 0xE0 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x18F2 PUSH2 0x140 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP PUSH2 0x1901 PUSH2 0x160 DUP15 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1934 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x191A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x198A JUMPI PUSH2 0x198A PUSH2 0x15CD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x1664 JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xC3 PUSH5 0x42B4A4522E DUP8 SGT SWAP10 0xCD PUSH18 0x7ABDD847AB11FE88A2646970667358221220 0x2D 0xEE 0x28 0xDE CODECOPY TIMESTAMP SWAP2 SELFBALANCE 0xBF PUSH19 0x8D9A602B729EF6BED3EE577C384D28C530BE69 0xEF 0xC0 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "618:11866:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:36;;1022:3;989:36;;;;;285:8:8;273:21;;;255:40;;243:2;228:18;989:36:6;;;;;;;;1540:352;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1545:33:8;;;1527:52;;1515:2;1500:18;1540:352:6;1383:202:8;8911:2002:6;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2200:47:8;;;2182:66;;2279:2;2264:18;;2257:34;;;;2307:18;;;2300:34;2170:2;2155:18;8911:2002:6;1980:360:8;1831:101:0;;;:::i;:::-;;909:73:6;;940:42;909:73;;;;;-1:-1:-1;;;;;2618:32:8;;;2600:51;;2588:2;2573:18;909:73:6;2454:203:8;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;7058:1568:6;;;;;;:::i;:::-;;:::i;:::-;;;;3375:25:8;;;3431:2;3416:18;;3409:34;;;;3348:18;7058:1568:6;3201:248:8;1322:38:6;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1322:38:6;;;1270:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1270:43:6;;;;-1:-1:-1;;;;;1270:43:6;;;;;;;;;;;;;;-1:-1:-1;;;;;4149:15:8;;;4131:34;;-1:-1:-1;;;;;4201:47:8;;;4196:2;4181:18;;4174:75;4285:15;;;4265:18;;;4258:43;;;;4337:15;;;;4332:2;4317:18;;4310:43;4080:3;4065:19;1270:43:6;3862:497:8;5689:1030:6;;;;;;:::i;:::-;;:::i;679:144::-;;-1:-1:-1;;;;;;;;;;;679:144:6;;830:72;;860:42;830:72;;2081:198:0;;;;;;:::i;:::-;;:::i;2888:2463:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;6246:25:8;;;-1:-1:-1;;;;;6307:47:8;;;6302:2;6287:18;;6280:75;6371:18;;;6364:34;6429:2;6414:18;;6407:34;6233:3;6218:19;2888:2463:6;6015:432:8;1540:352:6;1696:6;1723:10;-1:-1:-1;;;;;;;;;;;1723:49:6;1715:77;;;;-1:-1:-1;;;1715:77:6;;6654:2:8;1715:77:6;;;6636:21:8;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6712:18:8;;;6705:45;6767:18;;1715:77:6;;;;;;;;;1803:33;1818:8;1828:7;1803:14;:33::i;:::-;-1:-1:-1;;;;1540:352:6;;;;;;;:::o;8911:2002::-;9118:17;9236:12;;;:3;:12;;;;;;;;;;9276:17;;;;;:24;;;;9328;;;;;9118:17;;;;-1:-1:-1;;;;;9236:12:6;;;;9276:24;;;;9328;9363:78;9276:24;9403:10;9423:4;9430:10;9363:31;:78::i;:::-;9452;9484:6;9492:10;9512:4;9519:10;9452:31;:78::i;:::-;9543:83;9570:6;-1:-1:-1;;;;;;;;;;;9615:10:6;9543:26;:83::i;:::-;9637;9664:6;-1:-1:-1;;;;;;;;;;;9709:10:6;9637:26;:83::i;:::-;9733:65;9814:363;;;;;;;;9894:7;9814:363;;;;9936:10;9814:363;;;;9981:10;9814:363;;;;10022:32;10033:10;10045:8;10022:10;:32::i;:::-;9814:363;;;;10085:32;10096:10;10108:8;10085:10;:32::i;:::-;9814:363;;10146:15;9814:363;;;;;10222:52;;;-1:-1:-1;;;10222:52:6;;7043:13:8;;10222:52:6;;;7025:32:8;7101:17;;;7095:24;7073:20;;;7066:54;7164:17;;7158:24;7136:20;;;7129:54;7239:4;7227:17;;7221:24;7199:20;;;7192:54;7302:4;7290:17;;7284:24;7262:20;;;7255:54;7365:4;7353:17;;7347:24;7325:20;;;7318:54;9733:444:6;;-1:-1:-1;;;;;;;;;;;;780:42:6;10222:44;;6997:19:8;;10222:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10190:84;;-1:-1:-1;10190:84:6;-1:-1:-1;10190:84:6;-1:-1:-1;10355:20:6;;;10351:251;;;10392:74;10419:6;-1:-1:-1;;;;;;;;;;;10464:1:6;10392:26;:74::i;:::-;10481:15;10499:20;10512:7;10499:10;:20;:::i;:::-;10481:38;;10534:56;10562:6;10570:10;10582:7;10534:27;:56::i;:::-;10377:225;10351:251;10628:10;10618:7;:20;10614:251;;;10655:74;10682:6;-1:-1:-1;;;;;;;;;;;10727:1:6;10655:26;:74::i;:::-;10744:15;10762:20;10775:7;10762:10;:20;:::i;:::-;10744:38;;10797:56;10825:6;10833:10;10845:7;10797:27;:56::i;:::-;10640:225;10614:251;10875:30;;-1:-1:-1;;;10875:30:6;;-1:-1:-1;;;;;10875:7:6;;;;;:30;;10883:10;;10895:9;;10875:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9212:1701;;;;8911:2002;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;7058:1568:6:-;7158:15;7264:12;;;:3;:12;;;;;;;7295:24;;-1:-1:-1;;;7295:24:6;;7308:10;7295:24;;;2600:51:8;7158:15:6;;-1:-1:-1;;;;;7264:12:6;;-1:-1:-1;;;;;7295:38:6;;;7264:12;;7295;;2573:18:8;;7295:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;7287:66;;;;-1:-1:-1;;;7287:66:6;;8877:2:8;7287:66:6;;;8859:21:8;8916:2;8896:18;;;8889:30;-1:-1:-1;;;8935:18:8;;;8928:45;8990:18;;7287:66:6;8675:339:8;7287:66:6;7618:328;;;;;;;;;;;-1:-1:-1;;;;;7618:328:6;;;;;;7537:65;;7618:328;;7776:39;7801:3;7787:13;7735:10;7798:2;7787:13;:::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;7776:39:6;7806:8;7776:10;:39::i;:::-;7618:328;;;;7847:39;7872:3;7858:13;:10;7869:2;7858:13;:::i;7847:39::-;7618:328;;7915:15;7618:328;;;;;8039:274;;;;;;;;;;;;8154:4;8039:274;;;;-1:-1:-1;;;;;8039:274:6;;;;;;;;;;;;;8347:52;;-1:-1:-1;;;8347:52:6;;9911:13:8;;8347:52:6;;;9893:32:8;9973:17;;;9967:24;9963:65;;;9941:20;;;9934:95;10073:17;;;10067:24;10045:20;;;10038:54;10136:17;;;10130:24;10108:20;;;10101:54;10199:17;;;10193:24;10171:20;;;10164:54;7537:409:6;;-1:-1:-1;;;;;;;;;;;;780:42:6;8347:44;;9865:19:8;;8347:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8410:43;;-1:-1:-1;;;8410:43:6;;8326:73;;-1:-1:-1;8326:73:6;-1:-1:-1;;;;;;;;;;;;780:42:6;8410:34;;:43;;8445:7;;8410:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8507:39;8520:7;8529;8538;8507:12;:39::i;:::-;8587:31;;-1:-1:-1;;;8587:31:6;;-1:-1:-1;;;;;8587:7:6;;;;;:31;;8595:10;;8607;;8587:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:1434;;;7058:1568;;;;;;:::o;5689:1030::-;5755:15;5772;1094:13:0;:11;:13::i;:::-;6137:232:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;6252:4:::1;6137:232;::::0;::::1;::::0;-1:-1:-1;;;;;6137:232:6;;;;;;;;;;6403:42;;-1:-1:-1;;;6403:42:6;;-1:-1:-1;;;;;;;;;;;780:42:6;6403:34:::1;::::0;:42:::1;::::0;6137:232;;6403:42:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6458:14;6475:17:::0;;;:8:::1;:17;::::0;;;;;;:24:::1;::::0;::::1;::::0;6527::::1;::::0;;::::1;::::0;6630:39;;-1:-1:-1;;;6630:39:6;;6663:4:::1;6630:39;::::0;::::1;2600:51:8::0;6382:63:6;;-1:-1:-1;6382:63:6;;-1:-1:-1;;;;;;6475:24:6;;::::1;::::0;6527;::::1;::::0;6608:103:::1;::::0;6475:17;;:24;;6630::::1;::::0;2573:18:8;;6630:39:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6671;::::0;-1:-1:-1;;;6671:39:6;;6704:4:::1;6671:39;::::0;::::1;2600:51:8::0;-1:-1:-1;;;;;6671:24:6;::::1;::::0;::::1;::::0;2573:18:8;;6671:39:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6608:12;:103::i;:::-;5789:930;;;5689:1030:::0;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;11260:2:8;2161:73:0::1;::::0;::::1;11242:21:8::0;11299:2;11279:18;;;11272:30;11338:34;11318:18;;;11311:62;-1:-1:-1;;;11389:18:8;;;11382:36;11435:19;;2161:73:0::1;11058:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2888:2463:6:-;3104:15;3134:17;3166:15;3196;1094:13:0;:11;:13::i;:::-;3285:77:6::1;3317:2;3321:10;3341:4;3348:13;3285:31;:77::i;:::-;3373;3405:2;3409:10;3429:4;3436:13;3373:31;:77::i;:::-;3504:82;3531:2;-1:-1:-1::0;;;;;;;;;;;3572:13:6::1;3504:26;:82::i;:::-;3597;3624:2;-1:-1:-1::0;;;;;;;;;;;3665:13:6::1;3597:26;:82::i;:::-;3841:52;3909:492;;;;;;;;3975:2;-1:-1:-1::0;;;;;3909:492:6::1;;;;;4004:2;-1:-1:-1::0;;;;;3909:492:6::1;;;;;1022:3;3909:492;;;;;;4067:4;3909:492;;;;;;4101:3;3909:492;;;;;;4139:13;3909:492;;;;4187:13;3909:492;;;;4231:35;4242:13;4257:8;4231:10;:35::i;:::-;3909:492;;;;4297:1;3909:492;;;;4336:4;-1:-1:-1::0;;;;;3909:492:6::1;;;;;4370:15;3909:492;;::::0;3841:560:::1;;-1:-1:-1::0;;;;;;;;;;;;;;;;4543:31:6::1;;4575:6;4543:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4502:80:::0;;-1:-1:-1;4502:80:6;;-1:-1:-1;4502:80:6;-1:-1:-1;4502:80:6;-1:-1:-1;4624:35:6::1;4639:10;4502:80:::0;4624:14:::1;:35::i;:::-;4697:12;::::0;;;:3:::1;:12;::::0;;;;:23;;-1:-1:-1;;;;;;4697:23:6::1;-1:-1:-1::0;;;;;4697:23:6;::::1;;::::0;;4791;;::::1;4787:249;;;4831:70;4858:2;-1:-1:-1::0;;;;;;;;;;;4899:1:6::1;4831:26;:70::i;:::-;4916:15;4934:23;4950:7:::0;4934:13;:23:::1;:::i;:::-;4916:41;;4972:52;5000:2;5004:10;5016:7;4972:27;:52::i;:::-;4816:220;4787:249;5062:13;5052:7;:23;5048:249;;;5092:70;5119:2;-1:-1:-1::0;;;;;;;;;;;5160:1:6::1;5092:26;:70::i;:::-;5177:15;5195:23;5211:7:::0;5195:13;:23:::1;:::i;:::-;5177:41;;5233:52;5261:2;5265:10;5277:7;5233:27;:52::i;:::-;5077:220;5048:249;5307:36;::::0;-1:-1:-1;;;5307:36:6;;-1:-1:-1;;;;;5307:13:6;::::1;::::0;::::1;::::0;:36:::1;::::0;5321:10:::1;::::0;5333:9;;5307:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3232:2119;2888:2463:::0;;;;;;;;;;;;;:::o;1900:370::-;2061:45;;-1:-1:-1;;;2061:45:6;;;;;13374:25:8;;;1981:14:6;;;;;;-1:-1:-1;;;;;;;;;;;780:42:6;2061:36;;13347:18:8;;2061:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:130;;;;;;;;;;;;;;;2185:77;;;;;;;;2201:5;-1:-1:-1;;;;;2185:77:6;;;;;2219:9;-1:-1:-1;;;;;2185:77:6;;;;;2238:6;-1:-1:-1;;;;;2185:77:6;;;;;2254:6;-1:-1:-1;;;;;2185:77:6;;;;2165:8;:17;2174:7;2165:17;;;;;;;;;;;:97;;;;;;;;;;;;;-1:-1:-1;;;;;2165:97:6;;;;;-1:-1:-1;;;;;2165:97:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2165:97:6;;;;;-1:-1:-1;;;;;2165:97:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2165:97:6;;;;;-1:-1:-1;;;;;2165:97:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2165:97:6;;;;;-1:-1:-1;;;;;2165:97:6;;;;;;;;;1965:305;;;1900:370;;:::o;561:358:5:-;759:69;;;-1:-1:-1;;;;;15311:15:8;;;759:69:5;;;15293:34:8;15363:15;;;15343:18;;;15336:43;15395:18;;;;15388:34;;;759:69:5;;;;;;;;;;15228:18:8;;;;759:69:5;;;;;;;-1:-1:-1;;;;;759:69:5;-1:-1:-1;;;759:69:5;;;748:81;;-1:-1:-1;;;;748:10:5;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:5;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:5;;16348:2:8;839:73:5;;;16330:21:8;16387:1;16367:18;;;16360:29;-1:-1:-1;;;16405:18:8;;;16398:33;16448:18;;839:73:5;16146:326:8;839:73:5;690:229;;561:358;;;;:::o;1873:307::-;2032:58;;;-1:-1:-1;;;;;16669:32:8;;;2032:58:5;;;16651:51:8;16718:18;;;;16711:34;;;2032:58:5;;;;;;;;;;16624:18:8;;;;2032:58:5;;;;;;;-1:-1:-1;;;;;2032:58:5;-1:-1:-1;;;2032:58:5;;;2021:70;;-1:-1:-1;;;;2021:10:5;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:5;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:5;;16958:2:8;2101:72:5;;;16940:21:8;16997:1;16977:18;;;16970:29;-1:-1:-1;;;17015:18:8;;;17008:32;17057:18;;2101:72:5;16756:325:8;2101:72:5;1975:205;;1873:307;;;:::o;2278:204:6:-;2354:7;2411:3;2399:8;:15;;2374:57;;;;-1:-1:-1;;;2374:57:6;;17288:2:8;2374:57:6;;;17270:21:8;17327:2;17307:18;;;17300:30;-1:-1:-1;;;17346:18:8;;;17339:42;17398:18;;2374:57:6;17086:336:8;2374:57:6;2471:3;2457:12;2461:8;2471:3;2457:12;:::i;:::-;2449:21;;:6;:21;:::i;:::-;:25;;;;:::i;:::-;2442:32;2278:204;-1:-1:-1;;;2278:204:6:o;1211:309:5:-;1371:59;;;-1:-1:-1;;;;;16669:32:8;;;1371:59:5;;;16651:51:8;16718:18;;;;16711:34;;;1371:59:5;;;;;;;;;;16624:18:8;;;;1371:59:5;;;;;;;-1:-1:-1;;;;;1371:59:5;-1:-1:-1;;;1371:59:5;;;1360:71;;-1:-1:-1;;;;1360:10:5;;;;:71;;1371:59;1360:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;-1:-1:-1;1461:11:5;;:16;;:44;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1441:72;;;;-1:-1:-1;;;1441:72:5;;17927:2:8;1441:72:5;;;17909:21:8;17966:1;17946:18;;;17939:29;-1:-1:-1;;;17984:18:8;;;17977:32;18026:18;;1441:72:5;17725:325:8;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;18257:2:8;1414:68:0;;;18239:21:8;;;18276:18;;;18269:30;18335:34;18315:18;;;18308:62;18387:18;;1414:68:0;18055:356:8;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;11105:478:6:-;11265:13;11281:17;;;:8;:17;;;;;:23;;11334:24;;;;11386;;;;;-1:-1:-1;;;;;11281:23:6;;;;11334:24;;;11386;11462:51;11334:24;11281:23;11505:7;11462:27;:51::i;:::-;11524;11552:6;11560:5;11567:7;11524:27;:51::i;306:131:8:-;-1:-1:-1;;;;;381:31:8;;371:42;;361:70;;427:1;424;417:12;442:936;539:6;547;555;563;571;624:3;612:9;603:7;599:23;595:33;592:53;;;641:1;638;631:12;592:53;680:9;667:23;699:31;724:5;699:31;:::i;:::-;749:5;-1:-1:-1;806:2:8;791:18;;778:32;819:33;778:32;819:33;:::i;:::-;871:7;-1:-1:-1;925:2:8;910:18;;897:32;;-1:-1:-1;980:2:8;965:18;;952:32;1003:18;1033:14;;;1030:34;;;1060:1;1057;1050:12;1030:34;1098:6;1087:9;1083:22;1073:32;;1143:7;1136:4;1132:2;1128:13;1124:27;1114:55;;1165:1;1162;1155:12;1114:55;1205:2;1192:16;1231:2;1223:6;1220:14;1217:34;;;1247:1;1244;1237:12;1217:34;1292:7;1287:2;1278:6;1274:2;1270:15;1266:24;1263:37;1260:57;;;1313:1;1310;1303:12;1260:57;442:936;;;;-1:-1:-1;442:936:8;;-1:-1:-1;1344:2:8;1336:11;;1366:6;442:936;-1:-1:-1;;;442:936:8:o;1590:385::-;1676:6;1684;1692;1700;1753:3;1741:9;1732:7;1728:23;1724:33;1721:53;;;1770:1;1767;1760:12;1721:53;-1:-1:-1;;1793:23:8;;;1863:2;1848:18;;1835:32;;-1:-1:-1;1914:2:8;1899:18;;1886:32;;1965:2;1950:18;1937:32;;-1:-1:-1;1590:385:8;-1:-1:-1;1590:385:8:o;2662:146::-;-1:-1:-1;;;;;2741:5:8;2737:46;2730:5;2727:57;2717:85;;2798:1;2795;2788:12;2813:383;2890:6;2898;2906;2959:2;2947:9;2938:7;2934:23;2930:32;2927:52;;;2975:1;2972;2965:12;2927:52;3011:9;2998:23;2988:33;;3071:2;3060:9;3056:18;3043:32;3084:31;3109:5;3084:31;:::i;:::-;2813:383;;3134:5;;-1:-1:-1;;;3186:2:8;3171:18;;;;3158:32;;2813:383::o;3454:180::-;3513:6;3566:2;3554:9;3545:7;3541:23;3537:32;3534:52;;;3582:1;3579;3572:12;3534:52;-1:-1:-1;3605:23:8;;3454:180;-1:-1:-1;3454:180:8:o;4608:247::-;4667:6;4720:2;4708:9;4699:7;4695:23;4691:32;4688:52;;;4736:1;4733;4726:12;4688:52;4775:9;4762:23;4794:31;4819:5;4794:31;:::i;4860:118::-;4947:5;4944:1;4933:20;4926:5;4923:31;4913:59;;4968:1;4965;4958:12;4983:1027;5116:6;5124;5132;5140;5148;5156;5164;5172;5225:3;5213:9;5204:7;5200:23;5196:33;5193:53;;;5242:1;5239;5232:12;5193:53;5281:9;5268:23;5300:31;5325:5;5300:31;:::i;:::-;5350:5;-1:-1:-1;5407:2:8;5392:18;;5379:32;5420:33;5379:32;5420:33;:::i;:::-;5472:7;-1:-1:-1;5531:2:8;5516:18;;5503:32;5544:31;5503:32;5544:31;:::i;:::-;5594:7;-1:-1:-1;5653:2:8;5638:18;;5625:32;5666:31;5625:32;5666:31;:::i;:::-;5716:7;-1:-1:-1;5770:3:8;5755:19;;5742:33;;-1:-1:-1;5822:3:8;5807:19;;5794:33;;-1:-1:-1;5874:3:8;5859:19;;5846:33;;-1:-1:-1;5931:3:8;5916:19;;5903:33;5945;5903;5945;:::i;:::-;5997:7;5987:17;;;4983:1027;;;;;;;;;;;:::o;7383:138::-;7462:13;;7484:31;7462:13;7484:31;:::i;:::-;7383:138;;;:::o;7526:373::-;7614:6;7622;7630;7683:2;7671:9;7662:7;7658:23;7654:32;7651:52;;;7699:1;7696;7689:12;7651:52;7731:9;7725:16;7750:31;7775:5;7750:31;:::i;:::-;7845:2;7830:18;;7824:25;7889:2;7874:18;;;7868:25;7800:5;;7824:25;;-1:-1:-1;7868:25:8;7526:373;-1:-1:-1;;;7526:373:8:o;7904:127::-;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15;8036:125;8076:4;8104:1;8101;8098:8;8095:34;;;8109:18;;:::i;:::-;-1:-1:-1;8146:9:8;;8036:125::o;8166:315::-;-1:-1:-1;;;;;8358:32:8;;;;8340:51;;-1:-1:-1;;;;;8427:47:8;8422:2;8407:18;;8400:75;8328:2;8313:18;;8166:315::o;8486:184::-;8556:6;8609:2;8597:9;8588:7;8584:23;8580:32;8577:52;;;8625:1;8622;8615:12;8577:52;-1:-1:-1;8648:16:8;;8486:184;-1:-1:-1;8486:184:8:o;9019:287::-;9059:7;-1:-1:-1;;;;;9152:2:8;9149:1;9145:10;9182:2;9179:1;9175:10;9238:3;9234:2;9230:12;9225:3;9222:21;9215:3;9208:11;9201:19;9197:47;9194:73;;;9247:18;;:::i;:::-;9287:13;;9019:287;-1:-1:-1;;;;9019:287:8:o;9311:127::-;9372:10;9367:3;9363:20;9360:1;9353:31;9403:4;9400:1;9393:15;9427:4;9424:1;9417:15;9443:216;9483:1;-1:-1:-1;;;;;9570:2:8;9567:1;9563:10;9592:3;9582:37;;9599:18;;:::i;:::-;9637:10;;9633:20;;;;;9443:216;-1:-1:-1;;9443:216:8:o;10229:245::-;10308:6;10316;10369:2;10357:9;10348:7;10344:23;10340:32;10337:52;;;10385:1;10382;10375:12;10337:52;-1:-1:-1;;10408:16:8;;10464:2;10449:18;;;10443:25;10408:16;;10443:25;;-1:-1:-1;10229:245:8:o;10479:574::-;10706:13;;10688:32;;10780:4;10768:17;;;10762:24;-1:-1:-1;;;;;10758:50:8;10736:20;;;10729:80;10856:4;10844:17;;;10838:24;-1:-1:-1;;;;;10953:21:8;;;10931:20;;;10924:51;;;;11035:4;11023:17;;;11017:24;11013:33;10991:20;;;10984:63;;;;10675:3;10660:19;;10479:574::o;11561:1222::-;11783:13;;-1:-1:-1;;;;;2411:31:8;2399:44;;11751:3;11736:19;;11855:4;11847:6;11843:17;11837:24;11870:54;11918:4;11907:9;11903:20;11889:12;-1:-1:-1;;;;;2411:31:8;2399:44;;2345:104;11870:54;;11973:4;11965:6;11961:17;11955:24;11988:55;12037:4;12026:9;12022:20;12006:14;90:8;79:20;67:33;;14:92;11988:55;;12092:4;12084:6;12080:17;12074:24;12107:54;12155:4;12144:9;12140:20;12124:14;11540:1;11529:20;11517:33;;11465:91;12107:54;;12210:4;12202:6;12198:17;12192:24;12225:54;12273:4;12262:9;12258:20;12242:14;11540:1;11529:20;11517:33;;11465:91;12225:54;;12335:4;12327:6;12323:17;12317:24;12310:4;12299:9;12295:20;12288:54;12398:4;12390:6;12386:17;12380:24;12373:4;12362:9;12358:20;12351:54;12461:4;12453:6;12449:17;12443:24;12436:4;12425:9;12421:20;12414:54;12487:6;12547:2;12539:6;12535:15;12529:22;12524:2;12513:9;12509:18;12502:50;;12571:6;12626:2;12618:6;12614:15;12608:22;12639:54;12689:2;12678:9;12674:18;12658:14;-1:-1:-1;;;;;2411:31:8;2399:44;;2345:104;12639:54;-1:-1:-1;;12712:6:8;12760:15;;;12754:22;12734:18;;;;12727:50;11561:1222;:::o;12788:435::-;12885:6;12893;12901;12909;12962:3;12950:9;12941:7;12937:23;12933:33;12930:53;;;12979:1;12976;12969:12;12930:53;13008:9;13002:16;12992:26;;13061:2;13050:9;13046:18;13040:25;13074:31;13099:5;13074:31;:::i;:::-;13169:2;13154:18;;13148:25;13213:2;13198:18;;;13192:25;12788:435;;13124:5;;-1:-1:-1;12788:435:8;-1:-1:-1;;;12788:435:8:o;13410:138::-;13489:13;;13511:31;13489:13;13511:31;:::i;13553:165::-;13631:13;;13684:8;13673:20;;13663:31;;13653:59;;13708:1;13705;13698:12;13723:134;13800:13;;13822:29;13800:13;13822:29;:::i;13862:1186::-;14025:6;14033;14041;14049;14057;14065;14073;14081;14089;14097;14105:7;14114;14168:3;14156:9;14147:7;14143:23;14139:33;14136:53;;;14185:1;14182;14175:12;14136:53;14217:9;14211:16;14267:26;14260:5;14256:38;14249:5;14246:49;14236:77;;14309:1;14306;14299:12;14236:77;14332:5;-1:-1:-1;14356:49:8;14401:2;14386:18;;14356:49;:::i;:::-;14346:59;;14424:49;14469:2;14458:9;14454:18;14424:49;:::i;:::-;14414:59;;14492:49;14537:2;14526:9;14522:18;14492:49;:::i;:::-;14482:59;;14560:49;14604:3;14593:9;14589:19;14560:49;:::i;:::-;14550:59;;14628:48;14671:3;14660:9;14656:19;14628:48;:::i;:::-;14618:58;;14695:48;14738:3;14727:9;14723:19;14695:48;:::i;:::-;14685:58;;14762:50;14807:3;14796:9;14792:19;14762:50;:::i;:::-;14752:60;;14852:3;14841:9;14837:19;14831:26;14821:36;;14897:3;14886:9;14882:19;14876:26;14866:36;;14922:50;14967:3;14956:9;14952:19;14922:50;:::i;:::-;14911:61;;14992:50;15037:3;15026:9;15022:19;14992:50;:::i;:::-;14981:61;;13862:1186;;;;;;;;;;;;;;:::o;15433:426::-;15562:3;15600:6;15594:13;15625:1;15635:129;15649:6;15646:1;15643:13;15635:129;;;15747:4;15731:14;;;15727:25;;15721:32;15708:11;;;15701:53;15664:12;15635:129;;;15782:6;15779:1;15776:13;15773:48;;;15817:1;15808:6;15803:3;15799:16;15792:27;15773:48;-1:-1:-1;15837:16:8;;;;;15433:426;-1:-1:-1;;15433:426:8:o;15864:277::-;15931:6;15984:2;15972:9;15963:7;15959:23;15955:32;15952:52;;;16000:1;15997;15990:12;15952:52;16032:9;16026:16;16085:5;16078:13;16071:21;16064:5;16061:32;16051:60;;16107:1;16104;16097:12;17427:168;17467:7;17533:1;17529;17525:6;17521:14;17518:1;17515:21;17510:1;17503:9;17496:17;17492:45;17489:71;;;17540:18;;:::i;:::-;-1:-1:-1;17580:9:8;;17427:168::o;17600:120::-;17640:1;17666;17656:35;;17671:18;;:::i;:::-;-1:-1:-1;17705:9:8;;17600:120::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1329800",
								"executionCost": "27224",
								"totalCost": "1357024"
							},
							"external": {
								"DAI()": "260",
								"LPs(uint256)": "2500",
								"USDC()": "261",
								"collectFees(uint256)": "infinite",
								"decreaseLiquidity(uint256,uint128,uint256)": "infinite",
								"deposits(uint256)": "9014",
								"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)": "infinite",
								"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)": "infinite",
								"nonfungiblePositionManager()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2398",
								"poolFee()": "217",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_createDeposit(address,uint256)": "infinite",
								"_sendToOwner(uint256,uint256,uint256)": "infinite",
								"_sendToUser(uint256,address,uint256,uint256)": "infinite",
								"slippagify(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 618,
									"end": 12484,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dee28de39429147bf728d9a602b729ef6bed3ee577c384d28c530be69efc0e164736f6c634300080c0033",
									".code": [
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "A7459AC8"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "B44A2722"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "B44A2722"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "E0BAB4C4"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "FF0388A0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "A7459AC8"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "B02C43D0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "B17ACDCD"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "89A30271"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "957C524F"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "89FE6AA"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "5846CE4E"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 12484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 285,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 273,
											"end": 294,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 273,
											"end": 294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 273,
											"end": 294,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 255,
											"end": 295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 255,
											"end": 295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 245,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1383,
											"end": 1585,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2247,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2200,
											"end": 2247,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2248,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2334,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1980,
											"end": 2340,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 940,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "3DB4B7DA67DD5AF61CB9B3C70501B1BDB24B2C22"
										},
										{
											"begin": 909,
											"end": 982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 982,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2454,
											"end": 2657,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3201,
											"end": 3449,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4201,
											"end": 4248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4248,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4248,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4352,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4083,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3862,
											"end": 4359,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 823,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 679,
											"end": 823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 679,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 679,
											"end": 823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 679,
											"end": 823,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 830,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 830,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 830,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 860,
											"end": 902,
											"name": "PUSH",
											"source": 6,
											"value": "DA10009CBD5D07DD0CECC66161FC93D7C9000DA1"
										},
										{
											"begin": 830,
											"end": 902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 830,
											"end": 902,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6287,
											"end": 6305,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6431,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6218,
											"end": 6237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6015,
											"end": 6447,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1733,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1723,
											"end": 1772,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 6657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6693,
											"end": 6695,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD0818481D5B9A5D8CC81B999D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6767,
											"end": 6785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1818,
											"end": 1826,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1803,
											"end": 1836,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1836,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1803,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1892,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9363,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 9276,
											"end": 9300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9413,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9440,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 9363,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 9363,
											"end": 9441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9363,
											"end": 9441,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 9363,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9452,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9484,
											"end": 9490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9502,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9516,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 9452,
											"end": 9530,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9452,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9452,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9543,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9615,
											"end": 9625,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 9543,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9543,
											"end": 9626,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9543,
											"end": 9626,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9543,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9637,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 9637,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9637,
											"end": 9720,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9637,
											"end": 9720,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9637,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 9798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9894,
											"end": 9901,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9946,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9991,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10033,
											"end": 10043,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10053,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10022,
											"end": 10054,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10022,
											"end": 10054,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10022,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10096,
											"end": 10106,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10108,
											"end": 10116,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10085,
											"end": 10117,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10085,
											"end": 10117,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10085,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 10177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "219F5D17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7119,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7093,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7073,
											"end": 7093,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7066,
											"end": 7120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7129,
											"end": 7183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7227,
											"end": 7244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7221,
											"end": 7245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7199,
											"end": 7219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7306,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7290,
											"end": 7307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 7309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7365,
											"end": 7369,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7353,
											"end": 7370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 10177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10266,
											"name": "PUSH",
											"source": 6,
											"value": "219F5D17"
										},
										{
											"begin": 10222,
											"end": 10266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 10222,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10190,
											"end": 10274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10190,
											"end": 10274,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10190,
											"end": 10274,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10190,
											"end": 10274,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10351,
											"end": 10602,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10351,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10351,
											"end": 10602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10392,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10392,
											"end": 10466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10466,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 10392,
											"end": 10466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10481,
											"end": 10496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10512,
											"end": 10519,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10499,
											"end": 10509,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10481,
											"end": 10519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10562,
											"end": 10568,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10570,
											"end": 10580,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10582,
											"end": 10589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 10534,
											"end": 10590,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10534,
											"end": 10590,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10534,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10351,
											"end": 10602,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10351,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10638,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 10614,
											"end": 10865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10655,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 10682,
											"end": 10688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10655,
											"end": 10729,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10655,
											"end": 10729,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 10655,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 10775,
											"end": 10782,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 10825,
											"end": 10831,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10843,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 10852,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 10797,
											"end": 10853,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10797,
											"end": 10853,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 10797,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10614,
											"end": 10865,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 10614,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10883,
											"end": 10893,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10883,
											"end": 10893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 10904,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 10904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 10913,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7267,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7318,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7295,
											"end": 7333,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7295,
											"end": 7307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7333,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8918,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62616C616E636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8973,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 8675,
											"end": 9014,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7287,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7735,
											"end": 7745,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7800,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7787,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7814,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7776,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7872,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7858,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7858,
											"end": 7868,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7871,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 7858,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7858,
											"end": 7871,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7847,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7930,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "624E65F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9924,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9924,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9893,
											"end": 9925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 9991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 10028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 10028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 10028,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9934,
											"end": 10029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10090,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10090,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10065,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10045,
											"end": 10065,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10092,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10153,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10130,
											"end": 10154,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10128,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10108,
											"end": 10128,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10193,
											"end": 10217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10191,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10171,
											"end": 10191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7537,
											"end": 7946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8391,
											"name": "PUSH",
											"source": 6,
											"value": "C49CCBE"
										},
										{
											"begin": 8347,
											"end": 8391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9884,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 9865,
											"end": 9884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8347,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC6F7865"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8399,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8326,
											"end": 8399,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8444,
											"name": "PUSH",
											"source": 6,
											"value": "FC6F7865"
										},
										{
											"begin": 8410,
											"end": 8444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8520,
											"end": 8527,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8536,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8545,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8507,
											"end": 8546,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8507,
											"end": 8546,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8507,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 8587,
											"end": 8594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8605,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8607,
											"end": 8617,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8607,
											"end": 8617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 8626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC6F7865"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6437,
											"name": "PUSH",
											"source": 6,
											"value": "FC6F7865"
										},
										{
											"begin": 6403,
											"end": 6437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6403,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6608,
											"end": 6711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6654,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6630,
											"end": 6654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6630,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6695,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6695,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6695,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6671,
											"end": 6695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6608,
											"end": 6711,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6608,
											"end": 6711,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6608,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 6719,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11242,
											"end": 11263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11301,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11272,
											"end": 11302,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11338,
											"end": 11372,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11311,
											"end": 11373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11382,
											"end": 11418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11435,
											"end": 11454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11058,
											"end": 11460,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3331,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3361,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3285,
											"end": 3362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3285,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3285,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3419,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3433,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3449,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3373,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3585,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3504,
											"end": 3586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3504,
											"end": 3586,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3504,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3678,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3597,
											"end": 3679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3597,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFF"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "SIGNEXTEND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4152,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4200,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4242,
											"end": 4255,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4265,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4231,
											"end": 4266,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4231,
											"end": 4266,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4231,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4340,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4385,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 4401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4543,
											"end": 4574,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4574,
											"name": "PUSH",
											"source": 6,
											"value": "88316456"
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4543,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4639,
											"end": 4649,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4582,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4624,
											"end": 4659,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4624,
											"end": 4659,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4624,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4720,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 5036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4787,
											"end": 5036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4858,
											"end": 4860,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4831,
											"end": 4901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4831,
											"end": 4901,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4831,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4950,
											"end": 4957,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 4947,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5014,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5023,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4972,
											"end": 5024,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4972,
											"end": 5024,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4972,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4816,
											"end": 5036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 5036,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4787,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5075,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5048,
											"end": 5297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5092,
											"end": 5162,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5092,
											"end": 5162,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5092,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5211,
											"end": 5218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5195,
											"end": 5218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5195,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5284,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5233,
											"end": 5285,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5233,
											"end": 5285,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5233,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5297,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5048,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 5307,
											"end": 5320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5331,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 5351,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1900,
											"end": 2270,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1900,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "133F7571"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13374,
											"end": 13399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "PUSH",
											"source": 6,
											"value": "99FBAB88"
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2061,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 2106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2206,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1965,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1965,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1965,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2270,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15311,
											"end": 15326,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15311,
											"end": 15326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15311,
											"end": 15326,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15293,
											"end": 15327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15378,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15363,
											"end": 15378,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15336,
											"end": 15379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15395,
											"end": 15413,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 15395,
											"end": 15413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15395,
											"end": 15413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15395,
											"end": 15413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15388,
											"end": 15422,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15388,
											"end": 15422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15388,
											"end": 15422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15228,
											"end": 15246,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 15228,
											"end": 15246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15228,
											"end": 15246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15228,
											"end": 15246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 870,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 859,
											"end": 875,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 859,
											"end": 875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16348,
											"end": 16350,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16330,
											"end": 16351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16387,
											"end": 16388,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16360,
											"end": 16389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16405,
											"end": 16423,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 16405,
											"end": 16423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16405,
											"end": 16423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16398,
											"end": 16431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16448,
											"end": 16466,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 16448,
											"end": 16466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 16146,
											"end": 16472,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16651,
											"end": 16702,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16958,
											"end": 16960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16997,
											"end": 16998,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16970,
											"end": 16999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17008,
											"end": 17040,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17057,
											"end": 17075,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 17057,
											"end": 17075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 16756,
											"end": 17081,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2278,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2278,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2414,
											"name": "PUSH",
											"source": 6,
											"value": "186A0"
										},
										{
											"begin": 2399,
											"end": 2407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2414,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17288,
											"end": 17290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17327,
											"end": 17329,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17300,
											"end": 17330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7420696E2072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17346,
											"end": 17364,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 17346,
											"end": 17364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17346,
											"end": 17364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17339,
											"end": 17381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 17086,
											"end": 17422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2374,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "PUSH",
											"source": 6,
											"value": "186A0"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2461,
											"end": 2469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2449,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2449,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2474,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2482,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2482,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16651,
											"end": 16702,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17927,
											"end": 17929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17909,
											"end": 17930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17966,
											"end": 17967,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17946,
											"end": 17964,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17946,
											"end": 17964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17946,
											"end": 17964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17939,
											"end": 17968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17977,
											"end": 18009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18026,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17725,
											"end": 18050,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18257,
											"end": 18259,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18239,
											"end": 18260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18239,
											"end": 18260,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18294,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 18276,
											"end": 18294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18369,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18315,
											"end": 18333,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 18315,
											"end": 18333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18315,
											"end": 18333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18387,
											"end": 18405,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18387,
											"end": 18405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18055,
											"end": 18411,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11105,
											"end": 11583,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11105,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11289,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11386,
											"end": 11410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11334,
											"end": 11358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11512,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11462,
											"end": 11513,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11462,
											"end": 11513,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11462,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11552,
											"end": 11558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11565,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11567,
											"end": 11574,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11524,
											"end": 11575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 437,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 306,
											"end": 437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 381,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 381,
											"end": 412,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 371,
											"end": 413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 413,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 361,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 361,
											"end": 431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 427,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 417,
											"end": 429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 571,
											"end": 577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 627,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 612,
											"end": 621,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 603,
											"end": 610,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 595,
											"end": 628,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 592,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 631,
											"end": 643,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 592,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 680,
											"end": 689,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 667,
											"end": 690,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 699,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 724,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 699,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 699,
											"end": 730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 699,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 809,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 791,
											"end": 809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 778,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 819,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 778,
											"end": 810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 819,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 819,
											"end": 852,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 852,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 819,
											"end": 852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 871,
											"end": 878,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 928,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 897,
											"end": 929,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 897,
											"end": 929,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 980,
											"end": 982,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 952,
											"end": 984,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1047,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1033,
											"end": 1047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1033,
											"end": 1047,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1030,
											"end": 1064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1030,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1140,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1151,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1114,
											"end": 1169,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1169,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1114,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1205,
											"end": 1207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1208,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1217,
											"end": 1251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1251,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1217,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1299,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1317,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1260,
											"end": 1317,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1260,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1347,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1347,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 1378,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1975,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1590,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1690,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1757,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1774,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1721,
											"end": 1774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1772,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1774,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1721,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1835,
											"end": 1867,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1835,
											"end": 1867,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1917,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1918,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1918,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1590,
											"end": 1975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1590,
											"end": 1975,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2737,
											"end": 2783,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2727,
											"end": 2784,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2717,
											"end": 2802,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2800,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 3196,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2813,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2938,
											"end": 2945,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2962,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2927,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3021,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3021,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3075,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3109,
											"end": 3114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3084,
											"end": 3115,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3084,
											"end": 3115,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3084,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 3196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 3196,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 3196,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3454,
											"end": 3634,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3454,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3564,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3537,
											"end": 3569,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3628,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3454,
											"end": 3634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3634,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4608,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4708,
											"end": 4717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4706,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4723,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4688,
											"end": 4740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4734,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4688,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4785,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4794,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4819,
											"end": 4824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4794,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4794,
											"end": 4825,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4860,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4860,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4952,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4954,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4913,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4913,
											"end": 4972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4966,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4970,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5228,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 5200,
											"end": 5223,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5229,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5232,
											"end": 5244,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5193,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5355,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5420,
											"end": 5453,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5453,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5420,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5479,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5533,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5535,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5503,
											"end": 5535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5544,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5544,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5544,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5601,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5653,
											"end": 5655,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5657,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5625,
											"end": 5657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5666,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5773,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5822,
											"end": 5825,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5827,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5827,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 5859,
											"end": 5878,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5879,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5931,
											"end": 5934,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5936,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5903,
											"end": 5936,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5945,
											"end": 5978,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5945,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5945,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6004,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6004,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 6010,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 7462,
											"end": 7475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 7484,
											"end": 7515,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7484,
											"end": 7515,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 7484,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7521,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7526,
											"end": 7899,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 7526,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7671,
											"end": 7680,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7662,
											"end": 7669,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7658,
											"end": 7681,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7703,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7651,
											"end": 7703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7701,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7651,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7741,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7775,
											"end": 7780,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 7750,
											"end": 7781,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7750,
											"end": 7781,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7750,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7824,
											"end": 7849,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 7891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7893,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7805,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7824,
											"end": 7849,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7824,
											"end": 7849,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7868,
											"end": 7893,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7526,
											"end": 7899,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7526,
											"end": 7899,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7904,
											"end": 8031,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 7904,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 7975,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7960,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7956,
											"end": 7976,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8000,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7986,
											"end": 8001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 8024,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8025,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8161,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8036,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8106,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8155,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8146,
											"end": 8155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8161,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8166,
											"end": 8481,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 8166,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8358,
											"end": 8390,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8390,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8390,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8427,
											"end": 8474,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8407,
											"end": 8425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8400,
											"end": 8475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8330,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8166,
											"end": 8481,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8486,
											"end": 8670,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 8486,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8588,
											"end": 8595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8607,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8580,
											"end": 8612,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8577,
											"end": 8629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8627,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8629,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8577,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8648,
											"end": 8664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8648,
											"end": 8664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8486,
											"end": 8670,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9019,
											"end": 9306,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 9019,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9152,
											"end": 9154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9185,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9238,
											"end": 9241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9234,
											"end": 9236,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9242,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9222,
											"end": 9243,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9208,
											"end": 9219,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9201,
											"end": 9220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9267,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9194,
											"end": 9267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9300,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9300,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9306,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9306,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9311,
											"end": 9438,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9311,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9372,
											"end": 9382,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9367,
											"end": 9370,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9363,
											"end": 9383,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9427,
											"end": 9431,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9424,
											"end": 9425,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9417,
											"end": 9432,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9659,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 9443,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9570,
											"end": 9572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9563,
											"end": 9573,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9595,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9582,
											"end": 9619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9637,
											"end": 9647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9637,
											"end": 9647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9443,
											"end": 9659,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10229,
											"end": 10474,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 10229,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10355,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10344,
											"end": 10367,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10340,
											"end": 10372,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10337,
											"end": 10389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10385,
											"end": 10386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10382,
											"end": 10383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10375,
											"end": 10387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10337,
											"end": 10389,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10337,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10408,
											"end": 10424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10464,
											"end": 10466,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10449,
											"end": 10467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10449,
											"end": 10467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10449,
											"end": 10467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10443,
											"end": 10468,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10424,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10443,
											"end": 10468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10443,
											"end": 10468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10229,
											"end": 10474,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10479,
											"end": 11053,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10479,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10784,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10785,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10768,
											"end": 10785,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10768,
											"end": 10785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10808,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 10809,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10856,
											"end": 10860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10844,
											"end": 10861,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10861,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10838,
											"end": 10862,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10953,
											"end": 10974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10974,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10931,
											"end": 10951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10931,
											"end": 10951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10931,
											"end": 10951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11035,
											"end": 11039,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11023,
											"end": 11040,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11041,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11013,
											"end": 11046,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10675,
											"end": 10678,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10660,
											"end": 10679,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10479,
											"end": 11053,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11561,
											"end": 12783,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 11561,
											"end": 12783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11751,
											"end": 11754,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 11736,
											"end": 11755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11736,
											"end": 11755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11855,
											"end": 11859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 11860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11837,
											"end": 11861,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11870,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 11923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11889,
											"end": 11901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2449,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11870,
											"end": 11924,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 11870,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11870,
											"end": 11924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 11977,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11965,
											"end": 11971,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11961,
											"end": 11978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12026,
											"end": 12035,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12022,
											"end": 12042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12006,
											"end": 12020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 90,
											"end": 98,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 67,
											"end": 100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 67,
											"end": 100,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14,
											"end": 106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12043,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 11988,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12096,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12084,
											"end": 12090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12080,
											"end": 12097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12074,
											"end": 12098,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 12155,
											"end": 12159,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12140,
											"end": 12160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11541,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11529,
											"end": 11549,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11465,
											"end": 11556,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 12107,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12107,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12210,
											"end": 12214,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12198,
											"end": 12215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12216,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 12273,
											"end": 12277,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12262,
											"end": 12271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12242,
											"end": 12256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11541,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11529,
											"end": 11549,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11550,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11465,
											"end": 11556,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12279,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 12225,
											"end": 12279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12335,
											"end": 12339,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 12327,
											"end": 12333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12340,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12341,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12310,
											"end": 12314,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12288,
											"end": 12342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12402,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 12390,
											"end": 12396,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12386,
											"end": 12403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12380,
											"end": 12404,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12377,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 12362,
											"end": 12371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12351,
											"end": 12405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12461,
											"end": 12465,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12453,
											"end": 12459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12449,
											"end": 12466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12467,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12436,
											"end": 12440,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12425,
											"end": 12434,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12414,
											"end": 12468,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12493,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12547,
											"end": 12549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12539,
											"end": 12545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12535,
											"end": 12550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 12626,
											"end": 12628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12624,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12630,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12639,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12678,
											"end": 12687,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2449,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12639,
											"end": 12693,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 12639,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12712,
											"end": 12718,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 12760,
											"end": 12775,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12760,
											"end": 12775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12760,
											"end": 12775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12754,
											"end": 12776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 12777,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11561,
											"end": 12783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11561,
											"end": 12783,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12885,
											"end": 12891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12893,
											"end": 12899,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12901,
											"end": 12907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12962,
											"end": 12965,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 12950,
											"end": 12959,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12941,
											"end": 12948,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12966,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12976,
											"end": 12977,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 12981,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13008,
											"end": 13017,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13002,
											"end": 13018,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12992,
											"end": 13018,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12992,
											"end": 13018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13061,
											"end": 13063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13050,
											"end": 13059,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 13099,
											"end": 13104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13074,
											"end": 13105,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13074,
											"end": 13105,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 13074,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13171,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13154,
											"end": 13172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13148,
											"end": 13173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13129,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12788,
											"end": 13223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13410,
											"end": 13548,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 13410,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13489,
											"end": 13502,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13489,
											"end": 13502,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13489,
											"end": 13502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 13511,
											"end": 13542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13553,
											"end": 13718,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 13553,
											"end": 13718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13631,
											"end": 13644,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13631,
											"end": 13644,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13692,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13673,
											"end": 13693,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13694,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13653,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13653,
											"end": 13712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13708,
											"end": 13709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13698,
											"end": 13710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13723,
											"end": 13857,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 13723,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13822,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13822,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 13822,
											"end": 13851,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14039,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14047,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14055,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14057,
											"end": 14063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14073,
											"end": 14079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14089,
											"end": 14095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14103,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14105,
											"end": 14112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14168,
											"end": 14171,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 14156,
											"end": 14165,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14154,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 14143,
											"end": 14166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14139,
											"end": 14172,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 14136,
											"end": 14189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14185,
											"end": 14186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14182,
											"end": 14183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14136,
											"end": 14189,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 14136,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14217,
											"end": 14226,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 14211,
											"end": 14227,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14267,
											"end": 14293,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14260,
											"end": 14265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14256,
											"end": 14294,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14249,
											"end": 14254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14246,
											"end": 14295,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 14236,
											"end": 14313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14309,
											"end": 14310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14306,
											"end": 14307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14236,
											"end": 14313,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 14236,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14332,
											"end": 14337,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14356,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 14401,
											"end": 14403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14356,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 14356,
											"end": 14405,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14356,
											"end": 14405,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 14356,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14346,
											"end": 14405,
											"name": "SWAP11",
											"source": 8
										},
										{
											"begin": 14346,
											"end": 14405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14469,
											"end": 14471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14458,
											"end": 14467,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14454,
											"end": 14472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 14424,
											"end": 14473,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14424,
											"end": 14473,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14424,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14473,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14492,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 14537,
											"end": 14539,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14526,
											"end": 14535,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14492,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 14492,
											"end": 14541,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14492,
											"end": 14541,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 14492,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14482,
											"end": 14541,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 14482,
											"end": 14541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14560,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14604,
											"end": 14607,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 14593,
											"end": 14602,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14589,
											"end": 14608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14560,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 14560,
											"end": 14609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14560,
											"end": 14609,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14560,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14550,
											"end": 14609,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 14550,
											"end": 14609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14628,
											"end": 14676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14671,
											"end": 14674,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 14660,
											"end": 14669,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14628,
											"end": 14676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 14628,
											"end": 14676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14628,
											"end": 14676,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14628,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14676,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14738,
											"end": 14741,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14723,
											"end": 14742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14685,
											"end": 14743,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14685,
											"end": 14743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14762,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 14807,
											"end": 14810,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 14796,
											"end": 14805,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14792,
											"end": 14811,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14762,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 14762,
											"end": 14812,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14762,
											"end": 14812,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 14762,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14752,
											"end": 14812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14752,
											"end": 14812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14852,
											"end": 14855,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14831,
											"end": 14857,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14821,
											"end": 14857,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14821,
											"end": 14857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14900,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 14886,
											"end": 14895,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 14882,
											"end": 14901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14902,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14866,
											"end": 14902,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14866,
											"end": 14902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14922,
											"end": 14972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 14967,
											"end": 14970,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 14956,
											"end": 14965,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14952,
											"end": 14971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14922,
											"end": 14972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 14922,
											"end": 14972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14922,
											"end": 14972,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 14922,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14992,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 15037,
											"end": 15040,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 15026,
											"end": 15035,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14992,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 14992,
											"end": 15042,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14992,
											"end": 15042,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14992,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 15048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15433,
											"end": 15859,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 15433,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15562,
											"end": 15565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15600,
											"end": 15606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 15607,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15625,
											"end": 15626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 15655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15646,
											"end": 15647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15643,
											"end": 15656,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15747,
											"end": 15751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15731,
											"end": 15745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15731,
											"end": 15745,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15731,
											"end": 15745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15727,
											"end": 15752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15727,
											"end": 15752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15721,
											"end": 15753,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15708,
											"end": 15719,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15708,
											"end": 15719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15708,
											"end": 15719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15701,
											"end": 15754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 15635,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15782,
											"end": 15788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15776,
											"end": 15789,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15808,
											"end": 15814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15806,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15792,
											"end": 15819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 15773,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15864,
											"end": 16141,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 15864,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15931,
											"end": 15937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15984,
											"end": 15986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15963,
											"end": 15970,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15959,
											"end": 15982,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15955,
											"end": 15987,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15952,
											"end": 16004,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15952,
											"end": 16004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 15952,
											"end": 16004,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16000,
											"end": 16001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15997,
											"end": 15998,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 16002,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15952,
											"end": 16004,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 15952,
											"end": 16004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16032,
											"end": 16041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16026,
											"end": 16042,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16085,
											"end": 16090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16078,
											"end": 16091,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16071,
											"end": 16092,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16093,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16051,
											"end": 16111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 16051,
											"end": 16111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16104,
											"end": 16105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16097,
											"end": 16109,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17427,
											"end": 17595,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 17427,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17467,
											"end": 17474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17533,
											"end": 17534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17529,
											"end": 17530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17525,
											"end": 17531,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17521,
											"end": 17535,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17518,
											"end": 17519,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17536,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17510,
											"end": 17511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17503,
											"end": 17512,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17496,
											"end": 17513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17537,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17489,
											"end": 17560,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17489,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17489,
											"end": 17560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17540,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17540,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 17540,
											"end": 17558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17540,
											"end": 17558,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17540,
											"end": 17558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17427,
											"end": 17595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17600,
											"end": 17720,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 17600,
											"end": 17720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17640,
											"end": 17641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17666,
											"end": 17667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17656,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 17656,
											"end": 17691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 17671,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 17671,
											"end": 17689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17671,
											"end": 17689,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 17671,
											"end": 17689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17705,
											"end": 17714,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17720,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									],
									".data": {
										"65CFEFF779FE42D2D5B4C2C078348CB18ABBC731A2E3837262888DD9B50BB10E": "000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe88"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"LPs(uint256)": "a7459ac8",
							"USDC()": "89a30271",
							"collectFees(uint256)": "b17acdcd",
							"decreaseLiquidity(uint256,uint128,uint256)": "957c524f",
							"deposits(uint256)": "b02c43d0",
							"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)": "5846ce4e",
							"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)": "ff0388a0",
							"nonfungiblePositionManager()": "b44a2722",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"poolFee()": "089fe6aa",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LPs\",\"outputs\":[{\"internalType\":\"contract LPtoken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"increaseLiquidityCurrentRange\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tlow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tup\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0ToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1ToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"},{\"internalType\":\"contract LPtoken\",\"name\":\"_LPtoken\",\"type\":\"address\"}],\"name\":\"mintNewPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectFees(uint256)\":{\"details\":\"The contract must hold the erc721 token before it can collect fees\",\"params\":{\"tokenId\":\"The id of the erc721 token\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity(uint256,uint128,uint256)\":{\"params\":{\"tokenId\":\"The id of the erc721 token\"},\"returns\":{\"amount0\":\"The amount received back in token0\",\"amount1\":\"The amount returned back in token1\"}},\"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)\":{\"details\":\"Pool must be initialized already to add liquidity\",\"params\":{\"amount0\":\"The amount to add of token0\",\"amount1\":\"The amount to add of token1\",\"tokenId\":\"The id of the erc721 token\"}},\"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)\":{\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for the position\",\"tokenId\":\"The id of the newly minted ERC721\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"deposits\":{\"details\":\"deposits[tokenId] => Deposit\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectFees(uint256)\":{\"notice\":\"Collects the fees associated with provided liquidity\"},\"decreaseLiquidity(uint256,uint128,uint256)\":{\"notice\":\"A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\"},\"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)\":{\"notice\":\"Increases liquidity in the current range\"},\"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)\":{\"notice\":\"Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/uniswapv3lp.sol\":\"LiquidityExamples\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xe2bb2ec5150e6007beecb75ce88e7a03458b8d01aa968ec265093cdb6d8d3af7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42068b48f0f59086bd90db67b51ab3e70ab4701e9e0602a9f048031e4f31831a\",\"dweb:/ipfs/QmZEhUMidPVxfGzGrQ39tACokCmknPr3yfxDgh9hjuZpwE\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/uniswapv3lp.sol\":{\"keccak256\":\"0x40be80663573d818e6366f4ddbce96601003a0070acbace5cdfd19c854dbd681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4008902eff7c686476d8e1031690562faff357299dfe473a1348e382c50c71b9\",\"dweb:/ipfs/QmSTVbHRuPvLZREyzwod1bgFGvTChtGJNVUsjjZWk7Rqhs\"]},\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x1472f97bbd815a116416bca5680e2c4bf57b0877cdd0aa0c77411bded6a2687c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e1a5310dd384bbbbbce64e548d9970e5a31125ab105a7bea357a87ec568a9\",\"dweb:/ipfs/QmcA1g874tP74FbL6TNZy7pAU4jbEVtkcwaZvLomRQwauL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 986,
								"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
								"label": "deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Deposit)980_storage)"
							},
							{
								"astId": 991,
								"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
								"label": "LPs",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_contract(LPtoken)952)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(LPtoken)952": {
								"encoding": "inplace",
								"label": "contract LPtoken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_contract(LPtoken)952)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract LPtoken)",
								"numberOfBytes": "32",
								"value": "t_contract(LPtoken)952"
							},
							"t_mapping(t_uint256,t_struct(Deposit)980_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LiquidityExamples.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)980_storage"
							},
							"t_struct(Deposit)980_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityExamples.Deposit",
								"members": [
									{
										"astId": 973,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 975,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "liquidity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									},
									{
										"astId": 977,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "token0",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 979,
										"contract": "contracts/uniswapv3lp.sol:LiquidityExamples",
										"label": "token1",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectFees(uint256)": {
								"notice": "Collects the fees associated with provided liquidity"
							},
							"decreaseLiquidity(uint256,uint128,uint256)": {
								"notice": "A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery."
							},
							"increaseLiquidityCurrentRange(uint256,uint256,uint256,uint256)": {
								"notice": "Increases liquidity in the current range"
							},
							"mintNewPosition(address,address,int24,int24,uint256,uint256,uint256,address)": {
								"notice": "Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"positions(uint256)": "99fbab88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x1472f97bbd815a116416bca5680e2c4bf57b0877cdd0aa0c77411bded6a2687c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072e1a5310dd384bbbbbce64e548d9970e5a31125ab105a7bea357a87ec568a9\",\"dweb:/ipfs/QmcA1g874tP74FbL6TNZy7pAU4jbEVtkcwaZvLomRQwauL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							230
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 231,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 230,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								230
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							208
						]
					},
					"id": 209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 208,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 209,
							"src": "294:692:2",
							"usedErrors": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							230
						]
					},
					"id": 231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 216,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 215,
												"id": 218,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 230,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 225,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 224,
												"id": 227,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 230,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 231,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							755
						]
					},
					"id": 756,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 232,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 233,
								"nodeType": "StructuredDocumentation",
								"src": "70:235:4",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "TickMath",
							"nameLocation": "313:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "328:108:4",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 238,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "465:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "441:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 235,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "441:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "476:7:4",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 236,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "477:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "489:107:4",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 243,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "625:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "601:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 240,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "601:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "636:9:4",
										"subExpression": {
											"id": 241,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 238,
											"src": "637:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "652:116:4",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 247,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "799:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "773:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 245,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "816:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "832:116:4",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 251,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "979:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "953:92:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 249,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "953:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "996:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "1439:2443:4",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1457:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "1449:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1449:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 261,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1467:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1474:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1467:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 276,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "1518:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1511:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 274,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1511:6:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1511:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1503:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 272,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1503:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1503:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1467:57:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1486:13:4",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 268,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "1494:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1487:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 266,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1487:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1487:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 264,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1478:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1478:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1449:75:4"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1543:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "1535:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1535:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "1551:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1561:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1551:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1568:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1551:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1609:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1551:93:4",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1572:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1535:109:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 292,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "1658:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1668:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1658:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1675:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1658:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "1654:83:4",
												"trueBody": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 297,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1678:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 298,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1687:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1695:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1687:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1686:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1686:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1678:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "1678:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 307,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "1751:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1761:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1751:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1751:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "IfStatement",
												"src": "1747:83:4",
												"trueBody": {
													"expression": {
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 312,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 313,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1780:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1788:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1780:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1779:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1827:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1779:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1771:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 320,
													"nodeType": "ExpressionStatement",
													"src": "1771:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 322,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "1844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1854:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1844:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1861:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1844:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "IfStatement",
												"src": "1840:83:4",
												"trueBody": {
													"expression": {
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 327,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1864:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 328,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1873:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1881:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1873:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1872:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1920:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1872:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1864:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 335,
													"nodeType": "ExpressionStatement",
													"src": "1864:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 337,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "1937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1937:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1955:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1937:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "1933:84:4",
												"trueBody": {
													"expression": {
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 342,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1958:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 343,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1967:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1975:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "1967:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1966:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2014:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1966:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1958:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 350,
													"nodeType": "ExpressionStatement",
													"src": "1958:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 352,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2031:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2031:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2049:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2031:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2027:84:4",
												"trueBody": {
													"expression": {
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 357,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2052:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 358,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2061:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2069:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2061:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2060:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2060:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2052:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 365,
													"nodeType": "ExpressionStatement",
													"src": "2052:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 367,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2125:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2135:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2125:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2143:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2125:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "2121:84:4",
												"trueBody": {
													"expression": {
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 372,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2146:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 373,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2155:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2163:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2155:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 376,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2154:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2202:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2154:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2146:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 380,
													"nodeType": "ExpressionStatement",
													"src": "2146:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 382,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2219:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2219:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2237:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2219:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "2215:84:4",
												"trueBody": {
													"expression": {
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 387,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2240:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 388,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2249:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2257:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2249:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 391,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2248:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2296:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2248:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2240:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 395,
													"nodeType": "ExpressionStatement",
													"src": "2240:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 397,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2313:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2323:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2313:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2332:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2313:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "2309:85:4",
												"trueBody": {
													"expression": {
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 402,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2335:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 403,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2344:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2352:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2344:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 406,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2343:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2391:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2343:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2335:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ExpressionStatement",
													"src": "2335:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 412,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2408:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2418:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2408:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2427:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2408:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "2404:85:4",
												"trueBody": {
													"expression": {
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 417,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2430:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 418,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2439:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2447:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2439:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2438:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2486:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2438:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2430:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 425,
													"nodeType": "ExpressionStatement",
													"src": "2430:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 427,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2503:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2513:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2503:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2522:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2503:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "2499:85:4",
												"trueBody": {
													"expression": {
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 432,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2525:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2534:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2542:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2534:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2533:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2581:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2533:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2525:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 440,
													"nodeType": "ExpressionStatement",
													"src": "2525:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 442,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2598:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2608:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2598:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2617:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2598:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "2594:85:4",
												"trueBody": {
													"expression": {
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 447,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2620:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 448,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2629:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2637:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2629:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2628:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2628:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2620:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 455,
													"nodeType": "ExpressionStatement",
													"src": "2620:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 457,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2703:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2693:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2713:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2693:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "2689:86:4",
												"trueBody": {
													"expression": {
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 462,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2716:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 463,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2725:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2733:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2725:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 466,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2724:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2772:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2724:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2716:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 470,
													"nodeType": "ExpressionStatement",
													"src": "2716:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 472,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2789:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2809:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2789:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "2785:86:4",
												"trueBody": {
													"expression": {
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 477,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2812:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 478,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2821:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2829:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2821:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2820:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2868:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2820:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2812:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 485,
													"nodeType": "ExpressionStatement",
													"src": "2812:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 487,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2885:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2895:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2885:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2905:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2885:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 501,
												"nodeType": "IfStatement",
												"src": "2881:86:4",
												"trueBody": {
													"expression": {
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 492,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2908:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 493,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "2917:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2925:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2917:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2916:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2916:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2908:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 500,
													"nodeType": "ExpressionStatement",
													"src": "2908:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 502,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2991:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "2981:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3001:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2981:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "IfStatement",
												"src": "2977:86:4",
												"trueBody": {
													"expression": {
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 507,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3004:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 508,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3013:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3021:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3013:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3012:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3060:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3012:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3004:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 515,
													"nodeType": "ExpressionStatement",
													"src": "3004:59:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 517,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3077:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3087:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3077:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3098:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3077:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "3073:86:4",
												"trueBody": {
													"expression": {
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 522,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3101:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 523,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3110:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3118:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3110:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3109:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3156:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3109:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3101:58:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 530,
													"nodeType": "ExpressionStatement",
													"src": "3101:58:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 532,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3173:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3173:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3194:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3173:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "3169:85:4",
												"trueBody": {
													"expression": {
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 537,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 538,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3206:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3214:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3206:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3205:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3251:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3205:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3197:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 545,
													"nodeType": "ExpressionStatement",
													"src": "3197:57:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 547,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3268:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3278:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3268:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3289:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3268:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "3264:83:4",
												"trueBody": {
													"expression": {
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 552,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3292:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 553,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3309:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3301:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 556,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3300:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3344:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3300:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3292:55:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 560,
													"nodeType": "ExpressionStatement",
													"src": "3292:55:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 562,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3361:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3361:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3382:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3361:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "3357:78:4",
												"trueBody": {
													"expression": {
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 567,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3385:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 568,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3394:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3402:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3394:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3393:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3432:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3393:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3385:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 575,
													"nodeType": "ExpressionStatement",
													"src": "3385:50:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 577,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3450:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3457:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3450:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "3446:47:4",
												"trueBody": {
													"expression": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 580,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3473:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 582,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3473:7:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 581,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3468:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3468:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3468:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 586,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "3488:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3468:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3460:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 589,
													"nodeType": "ExpressionStatement",
													"src": "3460:33:4"
												}
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "3803:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 594,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3827:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3836:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3827:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 597,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3826:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 598,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 282,
																						"src": "3843:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 601,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 599,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3852:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 600,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3857:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3852:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 602,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3851:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3843:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3864:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3843:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3872:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3843:30:4",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3868:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 609,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3842:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3826:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3818:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 592,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3818:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3818:57:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3803:72:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3803:72:4"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1052:297:4",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1363:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1388:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1382:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 253,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1382:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:12:4"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1425:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1417:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 256,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:22:4"
									},
									"scope": 755,
									"src": "1354:2528:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "4386:4196:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "4503:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 625,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "4519:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4503:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "4537:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 628,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4552:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4537:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4503:63:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4568:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4495:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "4495:77:4"
											},
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4590:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4582:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4582:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 638,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "4606:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4598:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 636,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4598:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4598:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4623:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4598:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4582:43:4"
											},
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4644:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4636:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"id": 645,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 635,
													"src": "4648:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4636:17:4"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4671:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4663:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"hexValue": "30",
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4677:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4663:15:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4698:139:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4712:58:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:1:4",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4731:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4734:34:4",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4728:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:41:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4721:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:49:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4716:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4783:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4793:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4798:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4790:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4813:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4822:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4825:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4818:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4813:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "4783:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "4793:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4731:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4813:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4825:1:4",
														"valueSize": 1
													}
												],
												"id": 651,
												"nodeType": "InlineAssembly",
												"src": "4689:148:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4855:123:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4869:42:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4882:1:4",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4888:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:18:4",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4885:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4885:25:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:33:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4873:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4924:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4934:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4939:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4931:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4963:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4966:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4954:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "4924:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "4934:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4888:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4954:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "4966:1:4",
														"valueSize": 1
													}
												],
												"id": 652,
												"nodeType": "InlineAssembly",
												"src": "4846:132:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4996:115:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5010:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:1:4",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5029:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:10:4",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5026:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5026:17:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:25:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5014:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5067:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5072:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5064:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5087:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5096:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5099:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5087:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5057:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5067:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5029:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5087:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5099:1:4",
														"valueSize": 1
													}
												],
												"id": 653,
												"nodeType": "InlineAssembly",
												"src": "4987:124:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5129:111:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5143:30:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5156:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5162:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5165:6:4",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5159:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5159:13:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:21:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5147:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5196:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5201:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5193:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5216:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5225:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5228:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5216:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5186:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5196:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5162:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5216:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5228:1:4",
														"valueSize": 1
													}
												],
												"id": 654,
												"nodeType": "InlineAssembly",
												"src": "5120:120:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5258:109:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5272:28:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:1:4",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5291:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5294:4:4",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5288:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:11:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:19:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5276:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5313:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5328:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5320:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5343:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5352:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5355:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5343:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5313:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5323:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5291:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5343:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5355:1:4",
														"valueSize": 1
													}
												],
												"id": 655,
												"nodeType": "InlineAssembly",
												"src": "5249:118:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5385:108:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5399:27:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:1:4",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5418:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5421:3:4",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5415:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:10:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:18:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5403:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5439:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5449:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5454:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5446:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5469:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5478:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5481:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5469:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5439:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5449:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5418:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5469:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5481:1:4",
														"valueSize": 1
													}
												],
												"id": 656,
												"nodeType": "InlineAssembly",
												"src": "5376:117:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5511:108:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5525:27:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5544:1:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5547:3:4",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5541:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5541:10:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:18:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5529:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5565:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5580:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5572:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5565:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5595:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5604:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5607:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5595:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5565:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5575:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5544:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5595:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5607:1:4",
														"valueSize": 1
													}
												],
												"id": 657,
												"nodeType": "InlineAssembly",
												"src": "5502:117:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5637:73:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5663:1:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:3:4",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5660:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:10:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5655:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5683:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5693:3:4"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5698:1:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:10:4"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5683:3:4",
														"valueSize": 1
													},
													{
														"declaration": 648,
														"isOffset": false,
														"isSlot": false,
														"src": "5693:3:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5663:1:4",
														"valueSize": 1
													}
												],
												"id": 658,
												"nodeType": "InlineAssembly",
												"src": "5628:82:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5724:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5731:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5724:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 671,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5775:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "5779:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5789:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 674,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "5795:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5789:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 676,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5788:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5779:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5775:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 679,
													"nodeType": "ExpressionStatement",
													"src": "5775:24:4"
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "5720:79:4",
												"trueBody": {
													"expression": {
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 662,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5736:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "5740:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 664,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "5750:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5756:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5750:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 667,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5749:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5740:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5736:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 670,
													"nodeType": "ExpressionStatement",
													"src": "5736:24:4"
												}
											},
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5817:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "5810:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 681,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5810:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 685,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "5833:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5826:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 683,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5826:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5826:11:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5840:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5826:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5825:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5848:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5825:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5810:40:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5870:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5884:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5893:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5902:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5905:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5898:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5898:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5884:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5921:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5934:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5939:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5925:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5954:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "5966:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:4",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "5981:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5973:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5963:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "5954:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6006:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6009:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5997:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "5954:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5884:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5902:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5905:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5939:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "5997:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6009:1:4",
														"valueSize": 1
													}
												],
												"id": 693,
												"nodeType": "InlineAssembly",
												"src": "5861:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6039:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6053:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6062:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6071:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6074:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6067:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6053:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6090:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6103:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6108:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6099:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6094:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6123:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6135:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6146:2:4",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6150:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6132:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6123:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6166:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6175:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6178:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6166:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6123:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6053:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6071:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6074:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6108:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6166:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6178:1:4",
														"valueSize": 1
													}
												],
												"id": 694,
												"nodeType": "InlineAssembly",
												"src": "6030:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6208:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6222:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6240:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6243:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6227:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6222:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6259:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6277:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6263:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6292:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6304:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6315:2:4",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6319:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6311:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6301:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6292:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6335:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6344:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6347:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6335:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6292:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6222:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6240:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6243:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6277:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6335:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6347:1:4",
														"valueSize": 1
													}
												],
												"id": 695,
												"nodeType": "InlineAssembly",
												"src": "6199:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6377:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6391:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6409:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6412:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6405:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6391:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6428:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6446:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6432:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6461:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6473:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6484:2:4",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6488:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6480:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6480:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6470:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6470:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6461:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6504:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6513:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6516:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6504:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6461:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6391:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6409:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6412:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6446:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6504:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6516:1:4",
														"valueSize": 1
													}
												],
												"id": 696,
												"nodeType": "InlineAssembly",
												"src": "6368:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6546:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6560:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6578:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6581:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6574:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6574:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6565:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6560:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6597:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6610:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6615:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6606:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6606:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6601:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6630:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6642:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:4",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6657:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6639:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6630:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6673:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6682:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6685:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6673:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6630:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6560:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6578:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6581:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6615:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6673:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6685:1:4",
														"valueSize": 1
													}
												],
												"id": 697,
												"nodeType": "InlineAssembly",
												"src": "6537:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6715:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6729:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6738:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6747:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6750:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6729:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6766:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6784:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6770:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6799:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6811:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6822:2:4",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6826:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6818:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6818:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6808:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6799:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6842:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6842:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6799:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6729:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6747:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6750:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6784:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6842:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6854:1:4",
														"valueSize": 1
													}
												],
												"id": 698,
												"nodeType": "InlineAssembly",
												"src": "6706:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6884:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6898:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6907:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6916:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6919:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6898:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6935:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6953:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6939:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6968:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6980:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6991:2:4",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6995:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6987:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6968:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7011:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7020:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7011:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6968:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6898:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6916:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6919:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "6953:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7011:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7023:1:4",
														"valueSize": 1
													}
												],
												"id": 699,
												"nodeType": "InlineAssembly",
												"src": "6875:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7053:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7067:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7085:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7088:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7067:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7104:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7122:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7108:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7137:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7149:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:4",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7164:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7156:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7146:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7137:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7180:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7189:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7185:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7180:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7137:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7067:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7085:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7088:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7122:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7180:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7192:1:4",
														"valueSize": 1
													}
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "7044:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7222:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7236:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7245:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7254:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7257:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7250:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7241:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7236:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7273:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7291:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7282:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7277:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7306:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7318:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7329:2:4",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7333:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7315:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7306:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7349:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7358:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7361:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7349:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7306:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7236:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7254:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7257:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7291:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7349:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7361:1:4",
														"valueSize": 1
													}
												],
												"id": 701,
												"nodeType": "InlineAssembly",
												"src": "7213:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7391:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7405:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7414:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7423:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7426:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7405:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7442:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7455:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7460:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7446:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7475:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7487:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:4",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7502:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7494:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7484:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7475:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7518:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7518:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7475:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7405:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7423:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7426:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7460:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7518:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7530:1:4",
														"valueSize": 1
													}
												],
												"id": 702,
												"nodeType": "InlineAssembly",
												"src": "7382:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7560:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7574:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7592:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7595:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7588:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7579:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7574:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7611:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7624:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7629:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7615:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7644:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7656:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7667:2:4",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7671:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7653:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7644:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7687:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7696:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7699:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7692:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7687:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7644:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7574:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7592:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7595:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7629:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7687:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7699:1:4",
														"valueSize": 1
													}
												],
												"id": 703,
												"nodeType": "InlineAssembly",
												"src": "7551:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7729:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7743:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7752:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7761:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7764:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7757:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7748:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7743:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7780:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7793:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7789:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7784:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7813:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7825:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7836:2:4",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7840:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7822:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7813:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7856:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7865:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7868:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7856:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7813:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7743:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7761:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7764:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7798:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7856:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7868:1:4",
														"valueSize": 1
													}
												],
												"id": 704,
												"nodeType": "InlineAssembly",
												"src": "7720:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7898:151:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7912:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7930:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7933:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7917:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7912:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7949:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7962:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7967:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7953:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7982:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7994:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:4",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8009:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8001:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8001:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7991:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7982:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8025:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:4"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8037:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8030:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8025:1:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7982:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7912:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7930:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7933:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "7967:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8025:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8037:1:4",
														"valueSize": 1
													}
												],
												"id": 705,
												"nodeType": "InlineAssembly",
												"src": "7889:160:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8067:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8081:24:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:3:4",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8099:1:4"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8102:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8095:9:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:19:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8081:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8118:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8131:3:4",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8136:1:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:11:4"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8122:1:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8151:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8163:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8174:2:4",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8178:1:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8170:10:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8160:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:21:4"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8151:5:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "8151:5:4",
														"valueSize": 1
													},
													{
														"declaration": 682,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:5:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8081:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8099:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8102:1:4",
														"valueSize": 1
													},
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "8136:1:4",
														"valueSize": 1
													}
												],
												"id": 706,
												"nodeType": "InlineAssembly",
												"src": "8058:133:4"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8208:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "8201:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 707,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8201:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "8224:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8232:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8224:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8201:55:4"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8291:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "8285:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 713,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8285:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 717,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "8308:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8324:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8308:53:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 720,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8307:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8366:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8307:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8301:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 715,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8301:5:4",
															"typeDescriptions": {}
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8301:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8285:85:4"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8386:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "8380:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 725,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8380:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 729,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "8402:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8418:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8402:55:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8401:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8462:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8401:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8395:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 727,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8395:5:4",
															"typeDescriptions": {}
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8380:86:4"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 737,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "8477:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 738,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "8484:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 739,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "8495:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8484:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "8533:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 742,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "8514:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8514:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 745,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "8544:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8514:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 748,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "8568:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8514:61:4",
															"trueExpression": {
																"id": 747,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "8559:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8484:91:4",
														"trueExpression": {
															"id": 741,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "8504:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8477:98:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "8477:98:4"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "3888:408:4",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4310:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4337:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4329:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 617,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4380:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4374:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 620,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:12:4"
									},
									"scope": 755,
									"src": "4301:4281:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 756,
							"src": "305:8279:4",
							"usedErrors": []
						}
					],
					"src": "45:8540:4"
				},
				"id": 4
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"TransferHelper": [
							926
						]
					},
					"id": 927,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 191,
							"src": "71:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "690:229:5",
										"statements": [
											{
												"assignments": [
													771,
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "701:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 770,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "715:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 772,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 778,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "782:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "782:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 781,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "812:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 782,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "818:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "822:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 776,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 774,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "748:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "847:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 789,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "859:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 795,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "890:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 797,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 796,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 798,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 793,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "839:73:5"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:5",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "619:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "641:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "661:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:5"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:5"
									},
									"scope": 926,
									"src": "561:358:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "1314:206:5",
										"statements": [
											{
												"assignments": [
													818,
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "1325:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 817,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "1339:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 819,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "1394:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "1394:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 828,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "1420:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1424:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 821,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "1360:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "1449:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 835,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "1461:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 841,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "1492:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 843,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 842,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 844,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 839,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:5"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:5",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1242:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1265:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1285:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:5"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:5"
									},
									"scope": 926,
									"src": "1211:309:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1975:205:5",
										"statements": [
											{
												"assignments": [
													864,
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "1986:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 863,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "2000:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 865,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 871,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "2055:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2055:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 874,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "2080:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "2084:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 869,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 867,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2021:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "2109:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 881,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "2121:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 887,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "2152:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 889,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 888,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 890,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 885,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:5",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1903:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1926:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1946:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:5"
									},
									"scope": 926,
									"src": "1873:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "2431:104:5",
										"statements": [
											{
												"assignments": [
													908,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "2442:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 907,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 918,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 913,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 909,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "2460:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 911,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "2475:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "2513:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:5",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2395:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2407:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:5"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:5"
									},
									"scope": 926,
									"src": "2370:165:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 927,
							"src": "129:2408:5",
							"usedErrors": []
						}
					],
					"src": "45:2493:5"
				},
				"id": 5
			},
			"contracts/uniswapv3lp.sol": {
				"ast": {
					"absolutePath": "contracts/uniswapv3lp.sol",
					"exportedSymbols": {
						"Context": [
							230
						],
						"IERC20": [
							190
						],
						"IERC721Receiver": [
							208
						],
						"INonfungiblePositionManager": [
							1976
						],
						"LPtoken": [
							952
						],
						"LiquidityExamples": [
							1796
						],
						"Ownable": [
							112
						],
						"TickMath": [
							755
						],
						"TransferHelper": [
							926
						]
					},
					"id": 1797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"id": 929,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "58:19:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 209,
							"src": "81:66:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 191,
							"src": "149:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/INonfungiblePositionManager.sol",
							"file": "../interfaces/INonfungiblePositionManager.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 1977,
							"src": "207:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 927,
							"src": "264:70:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 756,
							"src": "336:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 113,
							"src": "397:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "476:6:6"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "476:6:6"
								}
							],
							"canonicalName": "LPtoken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								190
							],
							"name": "LPtoken",
							"nameLocation": "465:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "499:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "512:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "504:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "531:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "523:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:36:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:0:6"
									},
									"scope": 952,
									"src": "490:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "564:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "577:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "569:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "592:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "584:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:32:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:6"
									},
									"scope": 952,
									"src": "555:56:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1797,
							"src": "455:159:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 953,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 208,
										"src": "648:15:6"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "648:15:6"
								},
								{
									"baseName": {
										"id": 955,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "664:7:6"
									},
									"id": 956,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:6"
								}
							],
							"canonicalName": "LiquidityExamples",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1796,
							"linearizedBaseContracts": [
								1796,
								112,
								230,
								208
							],
							"name": "LiquidityExamples",
							"nameLocation": "627:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "b44a2722",
									"id": 962,
									"mutability": "constant",
									"name": "nonfungiblePositionManager",
									"nameLocation": "723:26:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "679:144:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
										"typeString": "contract INonfungiblePositionManager"
									},
									"typeName": {
										"id": 958,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 957,
											"name": "INonfungiblePositionManager",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1976,
											"src": "679:27:6"
										},
										"referencedDeclaration": 1976,
										"src": "679:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
												"id": 960,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "780:42:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 959,
											"name": "INonfungiblePositionManager",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1976,
											"src": "752:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
												"typeString": "type(contract INonfungiblePositionManager)"
											}
										},
										"id": 961,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "752:71:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0bab4c4",
									"id": 965,
									"mutability": "constant",
									"name": "DAI",
									"nameLocation": "854:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "830:72:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307844413130303039634264354430376464304365436336363136314643393344376339303030646131",
										"id": 964,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "860:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "89a30271",
									"id": 968,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "933:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "909:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 966,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "909:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833444234423744413637646435614636314362396233433730353031423142644232346232433232",
										"id": 967,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3DB4B7DA67dd5aF61Cb9b3C70501B1BdB24b2C22"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 971,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "1012:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "989:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 969,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1022:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityExamples.Deposit",
									"id": 980,
									"members": [
										{
											"constant": false,
											"id": 973,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "1120:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "1112:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 972,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1112:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 975,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "1144:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "1136:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 974,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1136:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 977,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "1172:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "1164:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 976,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1164:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 979,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "1197:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "1189:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 978,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1189:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "1093:7:6",
									"nodeType": "StructDefinition",
									"scope": 1796,
									"src": "1086:133:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "1227:37:6",
										"text": "@dev deposits[tokenId] => Deposit"
									},
									"functionSelector": "b02c43d0",
									"id": 986,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "1305:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1270:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
										"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit)"
									},
									"typeName": {
										"id": 985,
										"keyType": {
											"id": 982,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1278:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1270:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
											"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit)"
										},
										"valueType": {
											"id": 984,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 983,
												"name": "Deposit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 980,
												"src": "1289:7:6"
											},
											"referencedDeclaration": 980,
											"src": "1289:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$980_storage_ptr",
												"typeString": "struct LiquidityExamples.Deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a7459ac8",
									"id": 991,
									"mutability": "mutable",
									"name": "LPs",
									"nameLocation": "1357:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1322:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_LPtoken_$952_$",
										"typeString": "mapping(uint256 => contract LPtoken)"
									},
									"typeName": {
										"id": 990,
										"keyType": {
											"id": 987,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1330:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1322:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_LPtoken_$952_$",
											"typeString": "mapping(uint256 => contract LPtoken)"
										},
										"valueType": {
											"id": 989,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 988,
												"name": "LPtoken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 952,
												"src": "1341:7:6"
											},
											"referencedDeclaration": 952,
											"src": "1341:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_LPtoken_$952",
												"typeString": "contract LPtoken"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										207
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "1704:188:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1006,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1723:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1723:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1010,
																		"name": "nonfungiblePositionManager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "1745:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	],
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1737:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1008,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1737:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1737:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1723:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206120756e697633206e6674",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1774:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e",
																"typeString": "literal_string \"not a univ3 nft\""
															},
															"value": "not a univ3 nft"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f81f78212cd6cb8fffcac8d030795f9eb5d62c8ca0c51eb29a8340408a0d33e",
																"typeString": "literal_string \"not a univ3 nft\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1715:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1715:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1715:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1818:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1828:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1803:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1803:33:6"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1021,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1854:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																"typeString": "contract LiquidityExamples"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1026,
														"src": "1854:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1854:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1024,
												"nodeType": "Return",
												"src": "1847:37:6"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1549:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1001,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1678:8:6"
									},
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1584:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1576:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1603:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1629:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1621:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1647:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:103:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1696:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:8:6"
									},
									"scope": 1796,
									"src": "1540:352:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "1965:305:6",
										"statements": [
											{
												"assignments": [
													null,
													null,
													1034,
													1036,
													null,
													null,
													null,
													1038,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1989:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "1981:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1033,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1981:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "2005:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "1997:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1035,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1997:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "2027:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "2019:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1037,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2019:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 1043,
												"initialValue": {
													"arguments": [
														{
															"id": 1041,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2098:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1039,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2061:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1863,
														"src": "2061:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1976:130:6"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1044,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2165:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"id": 1045,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2174:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2165:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1048,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2201:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1049,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "2219:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1050,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2238:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1051,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "2254:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1047,
															"name": "Deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2185:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Deposit_$980_storage_ptr_$",
																"typeString": "type(struct LiquidityExamples.Deposit storage pointer)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"owner",
															"liquidity",
															"token0",
															"token1"
														],
														"nodeType": "FunctionCall",
														"src": "2185:77:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_memory_ptr",
															"typeString": "struct LiquidityExamples.Deposit memory"
														}
													},
													"src": "2165:97:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$980_storage",
														"typeString": "struct LiquidityExamples.Deposit storage ref"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "2165:97:6"
											}
										]
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createDeposit",
									"nameLocation": "1909:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1932:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1924:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1947:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1939:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:32:6"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1965:0:6"
									},
									"scope": 1796,
									"src": "1900:370:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "2363:119:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1066,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "2382:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2394:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2382:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "2399:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "316535",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000_by_1",
																		"typeString": "int_const 100000"
																	},
																	"value": "1e5"
																},
																"src": "2399:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2382:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420696e2072616e6765",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2416:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_143f3887fae36363ca48587d77a844d82075e02d3e35ee51abe9ad2cb5c253d0",
																"typeString": "literal_string \"not in range\""
															},
															"value": "not in range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_143f3887fae36363ca48587d77a844d82075e02d3e35ee51abe9ad2cb5c253d0",
																"typeString": "literal_string \"not in range\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2374:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2374:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2374:57:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "2449:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "316535",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000_by_1",
																			"typeString": "int_const 100000"
																		},
																		"value": "1e5"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1078,
																		"name": "slippage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "2461:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2457:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1080,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2456:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2449:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316535",
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2471:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "1e5"
													},
													"src": "2449:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1084,
												"nodeType": "Return",
												"src": "2442:32:6"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slippagify",
									"nameLocation": "2287:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2298:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "2322:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2314:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:34:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2354:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:9:6"
									},
									"scope": 1796,
									"src": "2278:204:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3232:2119:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "t0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3317:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1121,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3321:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3321:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1125,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3341:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3333:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1123,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3333:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3333:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3348:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1117,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3285:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "3285:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "3285:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "3405:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3409:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3409:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1138,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3429:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3421:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1136,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3421:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3421:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3436:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1130,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3373:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "3373:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3373:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3373:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "t0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3531:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1149,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "3543:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3535:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3535:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3535:35:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3572:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1143,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3504:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "3504:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3504:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "3504:82:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "3624:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1160,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "3636:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3628:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3628:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3628:35:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3665:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1154,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3597:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "3597:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "3597:82:6"
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3887:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3841:52:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1886_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.MintParams"
														},
														"typeName": {
															"id": 1168,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1167,
																"name": "INonfungiblePositionManager.MintParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1886,
																"src": "3841:38:6"
															},
															"referencedDeclaration": 1886,
															"src": "3841:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1886_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"arguments": [
														{
															"id": 1172,
															"name": "t0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3975:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "4004:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4030:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1175,
															"name": "tlow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "4067:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1176,
															"name": "tup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4101:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1177,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "4139:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1178,
															"name": "amount1ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "4187:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1180,
																	"name": "amount0ToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "4242:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1181,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "4257:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1179,
																"name": "slippagify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "4231:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:35:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4297:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4336:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4328:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4328:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4328:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1188,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4370:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4370:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1170,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "3909:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "MintParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1886,
														"src": "3909:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MintParams_$1886_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee",
														"tickLower",
														"tickUpper",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"recipient",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "3909:492:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1886_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3841:560:6"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1192,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "4503:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1193,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "4512:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1194,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4523:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1195,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "4532:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4502:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1199,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "4575:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintParams_$1886_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_MintParams_$1886_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															],
															"expression": {
																"id": 1197,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4543:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1901,
															"src": "4543:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1886_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4543:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"src": "4502:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "4502:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4639:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4639:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "4651:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "_createDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "4624:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4624:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "4624:35:6"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1209,
															"name": "LPs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4697:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_LPtoken_$952_$",
																"typeString": "mapping(uint256 => contract LPtoken)"
															}
														},
														"id": 1211,
														"indexExpression": {
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "4701:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4697:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPtoken_$952",
															"typeString": "contract LPtoken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "_LPtoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "4712:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPtoken_$952",
															"typeString": "contract LPtoken"
														}
													},
													"src": "4697:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPtoken_$952",
														"typeString": "contract LPtoken"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "4697:23:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "4791:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1216,
														"name": "amount0ToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "4801:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4791:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "4787:249:6",
												"trueBody": {
													"id": 1244,
													"nodeType": "Block",
													"src": "4816:220:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1221,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "4858:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1224,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "4870:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4862:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4862:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4862:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4899:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1218,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4831:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 899,
																	"src": "4831:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4831:70:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "ExpressionStatement",
															"src": "4831:70:6"
														},
														{
															"assignments": [
																1230
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1230,
																	"mutability": "mutable",
																	"name": "refund0",
																	"nameLocation": "4924:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "4916:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1229,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4916:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1234,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1231,
																	"name": "amount0ToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "4934:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1232,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4950:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4934:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4916:41:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "5000:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1239,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5004:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5004:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1241,
																		"name": "refund0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "5016:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1235,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4972:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 853,
																	"src": "4972:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4972:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1243,
															"nodeType": "ExpressionStatement",
															"src": "4972:52:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1246,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "5052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1247,
														"name": "amount1ToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "5062:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5052:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "5048:249:6",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5077:220:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "t1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "5119:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1255,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "5131:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5123:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1253,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5123:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5123:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5160:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1249,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "5092:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 899,
																	"src": "5092:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5092:70:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1259,
															"nodeType": "ExpressionStatement",
															"src": "5092:70:6"
														},
														{
															"assignments": [
																1261
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1261,
																	"mutability": "mutable",
																	"name": "refund1",
																	"nameLocation": "5185:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1275,
																	"src": "5177:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1260,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5177:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1265,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "amount1ToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "5195:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1263,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "5211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5195:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5177:41:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1269,
																		"name": "t1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "5261:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1270,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5265:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5265:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "refund1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "5277:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1266,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "5233:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 853,
																	"src": "5233:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5233:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "5233:52:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5321:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5321:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "5333:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1277,
															"name": "_LPtoken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5307:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPtoken_$952",
																"typeString": "contract LPtoken"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "5307:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5307:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "5307:36:6"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "2490:392:6",
										"text": "@notice Calls the mint function defined in periphery, mints the same amount of each token.\n For this example we are providing 1000 DAI and 1000 USDC in liquidity\n @return tokenId The id of the newly minted ERC721\n @return liquidity The amount of liquidity for the position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "ff0388a0",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3061:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3061:9:6"
										}
									],
									"name": "mintNewPosition",
									"nameLocation": "2897:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "t0",
												"nameLocation": "2921:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2913:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "t1",
												"nameLocation": "2933:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2925:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "tlow",
												"nameLocation": "2943:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2937:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1092,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2937:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "tup",
												"nameLocation": "2956:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2950:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1094,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2950:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "amount0ToMint",
												"nameLocation": "2969:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2961:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "amount1ToMint",
												"nameLocation": "2992:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2984:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "3015:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3007:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_LPtoken",
												"nameLocation": "3033:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3025:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_LPtoken_$952",
													"typeString": "contract LPtoken"
												},
												"typeName": {
													"id": 1103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1102,
														"name": "LPtoken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 952,
														"src": "3025:7:6"
													},
													"referencedDeclaration": 952,
													"src": "3025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPtoken_$952",
														"typeString": "contract LPtoken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2912:130:6"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3112:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3104:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1110,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3174:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3166:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3204:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3196:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:133:6"
									},
									"scope": 1796,
									"src": "2888:2463:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "5789:930:6",
										"statements": [
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "6115:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "6066:55:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.CollectParams"
														},
														"typeName": {
															"id": 1301,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1300,
																"name": "INonfungiblePositionManager.CollectParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "6066:41:6"
															},
															"referencedDeclaration": 1958,
															"src": "6066:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1958_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"arguments": [
														{
															"id": 1305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6207:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1308,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6252:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6244:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1306,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6244:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6244:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6293:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1311,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "6293:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1310,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6288:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6288:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6288:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6341:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1316,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "6341:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1315,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6336:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6336:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6336:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1303,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "6137:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "CollectParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1958,
														"src": "6137:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CollectParams_$1958_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"recipient",
														"amount0Max",
														"amount1Max"
													],
													"nodeType": "FunctionCall",
													"src": "6137:232:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6066:303:6"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1322,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "6383:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1323,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "6392:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1324,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6382:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1327,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "6438:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.CollectParams memory"
																}
															],
															"expression": {
																"id": 1325,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "6403:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "collect",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1969,
															"src": "6403:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$1958_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6403:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "6382:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "6382:63:6"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "6466:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "6458:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1331,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6458:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1333,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6475:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6484:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6475:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 977,
													"src": "6475:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6458:41:6"
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "6518:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "6510:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1338,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6510:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1340,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6527:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1342,
														"indexExpression": {
															"id": 1341,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6536:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6527:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 979,
													"src": "6527:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6510:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6621:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1353,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6663:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																				"typeString": "contract LiquidityExamples"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																				"typeString": "contract LiquidityExamples"
																			}
																		],
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6655:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1351,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6655:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6655:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1348,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1332,
																			"src": "6637:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1347,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "6630:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6630:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "6630:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6630:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1362,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6704:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																				"typeString": "contract LiquidityExamples"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																				"typeString": "contract LiquidityExamples"
																			}
																		],
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6696:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1360,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6696:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6696:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1357,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "6678:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1356,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "6671:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6671:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "6671:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6671:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "_sendToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "6608:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6608:103:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "6608:103:6"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "5359:324:6",
										"text": "@notice Collects the fees associated with provided liquidity\n @dev The contract must hold the erc721 token before it can collect fees\n @param tokenId The id of the erc721 token\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "b17acdcd",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1292,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1291,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5736:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5736:9:6"
										}
									],
									"name": "collectFees",
									"nameLocation": "5698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5718:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "5710:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:17:6"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5763:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "5755:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5755:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5780:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "5772:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5754:34:6"
									},
									"scope": 1796,
									"src": "5689:1030:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "7192:1434:6",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "lp",
														"nameLocation": "7259:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "7251:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPtoken_$952",
															"typeString": "contract LPtoken"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "LPtoken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 952,
																"src": "7251:7:6"
															},
															"referencedDeclaration": 952,
															"src": "7251:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPtoken_$952",
																"typeString": "contract LPtoken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"baseExpression": {
														"id": 1385,
														"name": "LPs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "7264:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_LPtoken_$952_$",
															"typeString": "mapping(uint256 => contract LPtoken)"
														}
													},
													"id": 1387,
													"indexExpression": {
														"id": 1386,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "7268:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7264:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPtoken_$952",
														"typeString": "contract LPtoken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7251:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1392,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7308:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7308:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1390,
																		"name": "lp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "7295:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LPtoken_$952",
																			"typeString": "contract LPtoken"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "7295:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7295:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1395,
																"name": "_liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "7323:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "7295:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e636520746f6f206c6f77",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
																"typeString": "literal_string \"balance too low\""
															},
															"value": "balance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
																"typeString": "literal_string \"balance too low\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7287:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7287:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "7287:66:6"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "7596:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "7537:65:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
														},
														"typeName": {
															"id": 1403,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1402,
																"name": "INonfungiblePositionManager.DecreaseLiquidityParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1938,
																"src": "7537:51:6"
															},
															"referencedDeclaration": 1938,
															"src": "7537:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1428,
												"initialValue": {
													"arguments": [
														{
															"id": 1407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "7698:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1408,
															"name": "_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "7735:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1410,
																			"name": "_liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "7787:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3435",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7798:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_45_by_1",
																				"typeString": "int_const 45"
																			},
																			"value": "45"
																		},
																		"src": "7787:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7801:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "7787:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1415,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "7806:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1409,
																"name": "slippagify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7776:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7776:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1418,
																			"name": "_liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "7858:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3435",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7869:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_45_by_1",
																				"typeString": "int_const 45"
																			},
																			"value": "45"
																		},
																		"src": "7858:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7872:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "7858:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1423,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "7877:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1417,
																"name": "slippagify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7847:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7847:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1425,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7915:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7915:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1405,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "7618:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "DecreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1938,
														"src": "7618:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$1938_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"liquidity",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "7618:328:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7537:409:6"
											},
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "params2",
														"nameLocation": "8016:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "7967:56:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.CollectParams"
														},
														"typeName": {
															"id": 1432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1431,
																"name": "INonfungiblePositionManager.CollectParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "7967:41:6"
															},
															"referencedDeclaration": 1958,
															"src": "7967:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1958_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"arguments": [
														{
															"id": 1436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "8109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1439,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8154:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1437,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "333430323832333636393230393338343633343633333734363037343331373638323131343535",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8189:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															"value": "340282366920938463463374607431768211455"
														},
														{
															"hexValue": "333430323832333636393230393338343633343633333734363037343331373638323131343535",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8258:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															"value": "340282366920938463463374607431768211455"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															},
															{
																"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																"typeString": "int_const 3402...(31 digits omitted)...1455"
															}
														],
														"expression": {
															"id": 1434,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "8039:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "CollectParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1958,
														"src": "8039:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CollectParams_$1958_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"recipient",
														"amount0Max",
														"amount1Max"
													],
													"nodeType": "FunctionCall",
													"src": "8039:274:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7967:346:6"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1445,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "8327:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1446,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "8336:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8326:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1450,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "8392:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 1448,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "8347:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decreaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1949,
															"src": "8347:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$1938_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8347:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "8326:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "8326:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "params2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "8445:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_CollectParams_$1958_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.CollectParams memory"
															}
														],
														"expression": {
															"id": 1454,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "8410:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "collect",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1969,
														"src": "8410:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$1958_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8410:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "8410:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "8520:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1462,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "8529:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1463,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "8538:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "_sendToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "8507:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "8507:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8595:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "8607:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1466,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "8587:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPtoken_$952",
																"typeString": "contract LPtoken"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "8587:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8587:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "8587:31:6"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "6727:325:6",
										"text": "@notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\n @param tokenId The id of the erc721 token\n @return amount0 The amount received back in token0\n @return amount1 The amount returned back in token1"
									},
									"functionSelector": "957c524f",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7067:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7093:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7085:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "7110:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7102:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1372,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "7130:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7122:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7084:55:6"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7166:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7158:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7158:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7183:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7175:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7157:34:6"
									},
									"scope": 1796,
									"src": "7058:1568:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "9212:1701:6",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "lp",
														"nameLocation": "9231:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "9223:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LPtoken_$952",
															"typeString": "contract LPtoken"
														},
														"typeName": {
															"id": 1494,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1493,
																"name": "LPtoken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 952,
																"src": "9223:7:6"
															},
															"referencedDeclaration": 952,
															"src": "9223:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPtoken_$952",
																"typeString": "contract LPtoken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"baseExpression": {
														"id": 1496,
														"name": "LPs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "9236:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_LPtoken_$952_$",
															"typeString": "mapping(uint256 => contract LPtoken)"
														}
													},
													"id": 1498,
													"indexExpression": {
														"id": 1497,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "9240:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9236:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LPtoken_$952",
														"typeString": "contract LPtoken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9223:25:6"
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "9267:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "9259:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1500,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9259:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1502,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "9276:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1504,
														"indexExpression": {
															"id": 1503,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "9285:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9276:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 977,
													"src": "9276:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9259:41:6"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "9319:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "9311:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1507,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9311:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1509,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "9328:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1511,
														"indexExpression": {
															"id": 1510,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "9337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9328:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 979,
													"src": "9328:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9311:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1517,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "9395:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1518,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9403:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9403:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1522,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9423:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9415:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9415:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9415:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1524,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "9430:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1514,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "9363:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "9363:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9363:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "9363:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "9484:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9492:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9492:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1535,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9512:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityExamples_$1796",
																		"typeString": "contract LiquidityExamples"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9504:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "9519:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1527,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "9452:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "9452:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9452:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "9452:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1543,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "9570:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1546,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "9586:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9578:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9578:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9578:35:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "9615:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1540,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "9543:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "9543:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9543:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "9543:83:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "9664:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1557,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "9680:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9672:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9672:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9672:35:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "9709:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1551,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "9637:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "9637:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9637:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "9637:83:6"
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "9792:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "9733:65:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
														},
														"typeName": {
															"id": 1565,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1564,
																"name": "INonfungiblePositionManager.IncreaseLiquidityParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1914,
																"src": "9733:51:6"
															},
															"referencedDeclaration": 1914,
															"src": "9733:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1583,
												"initialValue": {
													"arguments": [
														{
															"id": 1569,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "9894:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1570,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "9936:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1571,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "9981:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1573,
																	"name": "amountAdd0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "10033:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1574,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "10045:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1572,
																"name": "slippagify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "10022:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10022:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1577,
																	"name": "amountAdd1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "10096:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1578,
																	"name": "slippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "10108:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1576,
																"name": "slippagify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "10085:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1580,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10146:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10146:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1567,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "9814:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1976_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "IncreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1914,
														"src": "9814:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$1914_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"tokenId",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "9814:363:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9733:444:6"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1584,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10191:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1585,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "10202:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1586,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "10211:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10190:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1590,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "10267:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 1588,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "10222:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "increaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1927,
															"src": "10222:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$1914_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10222:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"src": "10190:84:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "10190:84:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1594,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "10355:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1595,
														"name": "amountAdd0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "10365:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10355:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "10351:251:6",
												"trueBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "10377:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1600,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "10419:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1603,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "10435:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10427:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10427:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10427:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1597,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10392:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 899,
																	"src": "10392:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10392:74:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1607,
															"nodeType": "ExpressionStatement",
															"src": "10392:74:6"
														},
														{
															"assignments": [
																1609
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1609,
																	"mutability": "mutable",
																	"name": "refund0",
																	"nameLocation": "10489:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1623,
																	"src": "10481:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1608,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10481:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1613,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "amountAdd0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "10499:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1611,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "10512:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10499:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10481:38:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1617,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "10562:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1618,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10570:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10570:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1620,
																		"name": "refund0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "10582:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1614,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10534:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 853,
																	"src": "10534:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10534:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "10534:56:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1625,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "10618:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1626,
														"name": "amountAdd1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "10628:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10618:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "10614:251:6",
												"trueBody": {
													"id": 1654,
													"nodeType": "Block",
													"src": "10640:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1631,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "10682:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1634,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "10698:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1976",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10690:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1632,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10690:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10690:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10727:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1628,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10655:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 899,
																	"src": "10655:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10655:74:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1638,
															"nodeType": "ExpressionStatement",
															"src": "10655:74:6"
														},
														{
															"assignments": [
																1640
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1640,
																	"mutability": "mutable",
																	"name": "refund1",
																	"nameLocation": "10752:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1654,
																	"src": "10744:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10744:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1644,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1641,
																	"name": "amountAdd1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "10762:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1642,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "10775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10762:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10744:38:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "10825:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1649,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10833:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10833:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1651,
																		"name": "refund1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "10845:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1645,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10797:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 853,
																	"src": "10797:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10797:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1653,
															"nodeType": "ExpressionStatement",
															"src": "10797:56:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10883:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10883:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1661,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "10895:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1656,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "10875:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LPtoken_$952",
																"typeString": "contract LPtoken"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "10875:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10875:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "10875:30:6"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "8634:271:6",
										"text": "@notice Increases liquidity in the current range\n @dev Pool must be initialized already to add liquidity\n @param tokenId The id of the erc721 token\n @param amount0 The amount to add of token0\n @param amount1 The amount to add of token1"
									},
									"functionSelector": "5846ce4e",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidityCurrentRange",
									"nameLocation": "8920:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "amountAdd0",
												"nameLocation": "8994:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8986:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amountAdd1",
												"nameLocation": "9023:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "9015:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "9052:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "9044:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8949:118:6"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "9126:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "9118:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1486,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "9158:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "9150:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9150:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "9188:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "9180:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9103:103:6"
									},
									"scope": 1796,
									"src": "8911:2002:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "11220:363:6",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11273:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "11265:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1675,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11265:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1677,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11281:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1679,
														"indexExpression": {
															"id": 1678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "11290:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11281:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 973,
													"src": "11281:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11265:39:6"
											},
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "11325:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "11317:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1682,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11317:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1684,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11334:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1686,
														"indexExpression": {
															"id": 1685,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "11343:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11334:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 977,
													"src": "11334:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11317:41:6"
											},
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "11377:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "11369:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11369:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1691,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11386:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"id": 1692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "11395:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11386:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 979,
													"src": "11386:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11369:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1699,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "11490:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "11498:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1701,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "11505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1696,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11462:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "11462:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11462:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "11462:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1707,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "11552:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1708,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "11560:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "11567:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1704,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11524:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "11524:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11524:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "11524:51:6"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "10921:178:6",
										"text": "@notice Transfers funds to owner of NFT\n @param tokenId The id of the erc721\n @param amount0 The amount of token0\n @param amount1 The amount of token1"
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToOwner",
									"nameLocation": "11114:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11145:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "11137:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "11171:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "11163:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11163:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "11197:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "11189:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11126:85:6"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11220:0:6"
									},
									"scope": 1796,
									"src": "11105:478:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "11917:560:6",
										"statements": [
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11970:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "11962:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11962:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1727,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11978:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1729,
														"indexExpression": {
															"id": 1728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "11987:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11978:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 973,
													"src": "11978:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11962:39:6"
											},
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "12022:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "12014:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12014:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1734,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "12031:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1736,
														"indexExpression": {
															"id": 1735,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "12040:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12031:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 977,
													"src": "12031:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12014:41:6"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "12074:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "12066:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1739,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12066:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1741,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "12083:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$980_storage_$",
																"typeString": "mapping(uint256 => struct LiquidityExamples.Deposit storage ref)"
															}
														},
														"id": 1743,
														"indexExpression": {
															"id": 1742,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "12092:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12083:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$980_storage",
															"typeString": "struct LiquidityExamples.Deposit storage ref"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 979,
													"src": "12083:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12066:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1749,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "12177:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1750,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "12185:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1751,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "12191:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12199:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "12191:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12203:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "12191:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1746,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12149:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "12149:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "12149:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1761,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "12247:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1762,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "12255:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1763,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "12261:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12269:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "12261:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12273:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "12261:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1758,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12219:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "12219:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12219:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "12219:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "12370:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1774,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "12378:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1775,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "12385:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12393:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "12385:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12395:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "12385:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1770,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12342:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "12342:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12342:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "12342:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1785,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "12439:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "12447:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "12454:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12462:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "12454:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12464:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "12454:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1782,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12411:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$926_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "12411:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12411:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "12411:58:6"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "11591:183:6",
										"text": "@notice Transfers funds to owner of lptokens\n @param tokenId The id of the erc721\n @param amount0 The amount of token0\n @param amount1 The amount of token1"
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToUser",
									"nameLocation": "11789:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11819:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "11811:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11811:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "11837:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "11868:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "11860:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "11894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "11886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11800:108:6"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11917:0:6"
									},
									"scope": 1796,
									"src": "11780:697:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1797,
							"src": "618:11866:6",
							"usedErrors": []
						}
					],
					"src": "33:12451:6"
				},
				"id": 6
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"INonfungiblePositionManager": [
							1976
						]
					},
					"id": 1977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1798,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"id": 1799,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "59:19:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1800,
								"nodeType": "StructuredDocumentation",
								"src": "82:180:7",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1976,
							"linearizedBaseContracts": [
								1976
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "272:27:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "308:463:7",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 1811,
									"name": "IncreaseLiquidity",
									"nameLocation": "783:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "817:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "801:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "834:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "826:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1804,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "853:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "845:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "870:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "862:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:78:7"
									},
									"src": "777:102:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "885:423:7",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 1822,
									"name": "DecreaseLiquidity",
									"nameLocation": "1320:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1354:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1338:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1371:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1363:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1815,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1390:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1382:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1407:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1399:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:78:7"
									},
									"src": "1314:102:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "1422:527:7",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 1833,
									"name": "Collect",
									"nameLocation": "1961:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1985:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1969:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2002:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1994:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2021:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2013:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2038:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2030:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:78:7"
									},
									"src": "1955:92:7"
								},
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "2055:1171:7",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3241:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3259:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3251:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:17:7"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3339:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3332:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1838,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3332:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3367:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3359:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3398:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3390:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3427:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3419:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3455:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3448:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1846,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3448:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3479:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3473:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1848,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3473:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3509:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3503:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1850,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3503:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3541:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3533:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1852,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3573:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3565:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "3620:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3612:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "3667:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3659:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1858,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "3701:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "3693:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1860,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:406:7"
									},
									"scope": 1976,
									"src": "3232:492:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1886,
									"members": [
										{
											"constant": false,
											"id": 1865,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "3769:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3761:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1864,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3761:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1867,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "3794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1866,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3786:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1869,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "3818:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3811:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1868,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3811:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1871,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "3838:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3832:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1870,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "3832:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1873,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "3864:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3858:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1872,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "3858:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1875,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "3892:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3884:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1874,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3884:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1877,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "3925:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3917:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1876,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3917:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1879,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "3958:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3950:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3950:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1881,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "3987:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "3979:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1880,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3979:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1883,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4016:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "4008:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1882,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4008:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1885,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4044:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1886,
											"src": "4036:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4036:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "3739:10:7",
									"nodeType": "StructDefinition",
									"scope": 1976,
									"src": "3732:328:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "4068:593:7",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4676:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4681:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1886_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1888,
														"name": "MintParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "4681:10:7"
													},
													"referencedDeclaration": 1886,
													"src": "4681:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1886_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:28:7"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4784:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4776:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4814:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4806:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1894,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4846:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4838:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4876:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4868:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4761:133:7"
									},
									"scope": 1976,
									"src": "4667:228:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1914,
									"members": [
										{
											"constant": false,
											"id": 1903,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "4953:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "4945:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1902,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4945:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4979:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "4971:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4971:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1907,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5012:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "5004:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5004:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1909,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5045:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "5037:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1908,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5037:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1911,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5074:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "5066:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5066:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1913,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5103:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1914,
											"src": "5095:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5095:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "4910:23:7",
									"nodeType": "StructDefinition",
									"scope": 1976,
									"src": "4903:216:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "5127:830:7",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "5972:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6023:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "5990:39:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1916,
														"name": "IncreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "5990:23:7"
													},
													"referencedDeclaration": 1914,
													"src": "5990:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1914_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5989:41:7"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6106:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "6098:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1920,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6138:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "6130:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6168:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "6160:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6083:103:7"
									},
									"scope": 1976,
									"src": "5963:224:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1938,
									"members": [
										{
											"constant": false,
											"id": 1929,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6245:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1938,
											"src": "6237:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6237:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1931,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6271:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1938,
											"src": "6263:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1930,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6263:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1933,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6299:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1938,
											"src": "6291:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1932,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6291:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1935,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6328:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1938,
											"src": "6320:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1934,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6320:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1937,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6357:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1938,
											"src": "6349:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1936,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6349:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6202:23:7",
									"nodeType": "StructDefinition",
									"scope": 1976,
									"src": "6195:178:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "6381:709:7",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7105:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7156:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7123:39:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1940,
														"name": "DecreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "7123:23:7"
													},
													"referencedDeclaration": 1938,
													"src": "7123:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1938_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:41:7"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7225:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7217:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7217:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7242:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7234:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:34:7"
									},
									"scope": 1976,
									"src": "7096:155:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1958,
									"members": [
										{
											"constant": false,
											"id": 1951,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7299:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "7291:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1950,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7291:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1953,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7325:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "7317:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1952,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7317:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1955,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7353:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "7345:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1954,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7345:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1957,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7382:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "7374:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1956,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7374:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7266:13:7",
									"nodeType": "StructDefinition",
									"scope": 1976,
									"src": "7259:141:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "7408:495:7",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "7918:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7949:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "7926:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1958_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1960,
														"name": "CollectParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "7926:13:7"
													},
													"referencedDeclaration": 1958,
													"src": "7926:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1958_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:31:7"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7991:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "7983:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8008:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8000:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7982:34:7"
									},
									"scope": 1976,
									"src": "7909:108:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "8025:215:7",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8255:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8268:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "8260:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:17:7"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8293:0:7"
									},
									"scope": 1976,
									"src": "8246:48:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1977,
							"src": "262:8035:7",
							"usedErrors": []
						}
					],
					"src": "33:8264:7"
				},
				"id": 7
			}
		}
	}
}